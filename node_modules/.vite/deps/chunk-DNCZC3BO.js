import {
  y
} from "./chunk-YERAI3VV.js";
import {
  require_chacha20poly1305,
  require_cjs,
  require_cjs2,
  require_cjs3,
  require_elliptic,
  require_hkdf,
  require_query_string,
  require_random,
  require_sha256,
  require_x25519
} from "./chunk-NPGLB5R3.js";
import {
  ConstantsUtil,
  CoreHelperUtil,
  NetworkUtil,
  W3mFrameHelpers,
  W3mFrameProvider,
  W3mFrameRpcConstants
} from "./chunk-JQ457NJ2.js";
import {
  mainnet
} from "./chunk-VCUCKT5T.js";
import {
  ChainNotConfiguredError,
  ProviderNotFoundError,
  connect,
  createConfig,
  createConnector,
  disconnect,
  estimateGas,
  extractRpcUrls,
  getAccount,
  getBalance,
  getConnections,
  getEnsAddress,
  getEnsAvatar,
  getEnsName,
  injected,
  prepareTransactionRequest,
  reconnect,
  sendTransaction,
  signMessage,
  switchAccount,
  switchChain,
  waitForTransactionReceipt,
  watchAccount,
  watchConnectors,
  writeContract
} from "./chunk-5EP2Q5VI.js";
import {
  fallback,
  http,
  parseUnits,
  withRetry,
  withTimeout
} from "./chunk-ZWNE3I3T.js";
import {
  ResourceUnavailableRpcError,
  SwitchChainError,
  UserRejectedRequestError,
  formatUnits,
  getAddress,
  hexToNumber,
  numberToHex
} from "./chunk-IFEZ4Q36.js";
import {
  __toESM
} from "./chunk-MSFXBLHD.js";

// node_modules/@web3modal/scaffold-utils/dist/esm/src/ConstantsUtil.js
var ConstantsUtil2 = {
  WALLET_CONNECT_CONNECTOR_ID: "walletConnect",
  INJECTED_CONNECTOR_ID: "injected",
  WALLET_STANDARD_CONNECTOR_ID: "announced",
  COINBASE_CONNECTOR_ID: "coinbaseWallet",
  COINBASE_SDK_CONNECTOR_ID: "coinbaseWalletSDK",
  SAFE_CONNECTOR_ID: "safe",
  LEDGER_CONNECTOR_ID: "ledger",
  EIP6963_CONNECTOR_ID: "eip6963",
  AUTH_CONNECTOR_ID: "w3mAuth",
  EIP155: "eip155",
  ADD_CHAIN_METHOD: "wallet_addEthereumChain",
  EIP6963_ANNOUNCE_EVENT: "eip6963:announceProvider",
  EIP6963_REQUEST_EVENT: "eip6963:requestProvider",
  CONNECTOR_RDNS_MAP: {
    coinbaseWallet: "com.coinbase.wallet",
    coinbaseWalletSDK: "com.coinbase.wallet"
  },
  VERSION: "5.1.11"
};

// node_modules/@web3modal/scaffold-utils/dist/esm/src/PresetsUtil.js
var PresetsUtil = {
  ConnectorExplorerIds: {
    [ConstantsUtil2.COINBASE_CONNECTOR_ID]: "fd20dc426fb37566d803205b19bbc1d4096b248ac04548e3cfb6b3a38bd033aa",
    [ConstantsUtil2.COINBASE_SDK_CONNECTOR_ID]: "fd20dc426fb37566d803205b19bbc1d4096b248ac04548e3cfb6b3a38bd033aa",
    [ConstantsUtil2.SAFE_CONNECTOR_ID]: "225affb176778569276e484e1b92637ad061b01e13a048b35a9d280c3b58970f",
    [ConstantsUtil2.LEDGER_CONNECTOR_ID]: "19177a98252e07ddfc9af2083ba8e07ef627cb6103467ffebb3f8f4205fd7927"
  },
  EIP155NetworkImageIds: {
    1: "ba0ba0cd-17c6-4806-ad93-f9d174f17900",
    42161: "3bff954d-5cb0-47a0-9a23-d20192e74600",
    43114: "30c46e53-e989-45fb-4549-be3bd4eb3b00",
    56: "93564157-2e8e-4ce7-81df-b264dbee9b00",
    250: "06b26297-fe0c-4733-5d6b-ffa5498aac00",
    10: "ab9c186a-c52f-464b-2906-ca59d760a400",
    137: "41d04d42-da3b-4453-8506-668cc0727900",
    100: "02b53f6a-e3d4-479e-1cb4-21178987d100",
    9001: "f926ff41-260d-4028-635e-91913fc28e00",
    324: "b310f07f-4ef7-49f3-7073-2a0a39685800",
    314: "5a73b3dd-af74-424e-cae0-0de859ee9400",
    4689: "34e68754-e536-40da-c153-6ef2e7188a00",
    1088: "3897a66d-40b9-4833-162f-a2c90531c900",
    1284: "161038da-44ae-4ec7-1208-0ea569454b00",
    1285: "f1d73bb6-5450-4e18-38f7-fb6484264a00",
    7777777: "845c60df-d429-4991-e687-91ae45791600",
    42220: "ab781bbc-ccc6-418d-d32d-789b15da1f00",
    8453: "7289c336-3981-4081-c5f4-efc26ac64a00",
    1313161554: "3ff73439-a619-4894-9262-4470c773a100",
    2020: "b8101fc0-9c19-4b6f-ec65-f6dfff106e00",
    2021: "b8101fc0-9c19-4b6f-ec65-f6dfff106e00",
    "5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp": "a1b58899-f671-4276-6a5e-56ca5bd59700",
    "4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z": "a1b58899-f671-4276-6a5e-56ca5bd59700",
    EtWTRABZaYq6iMfeYKouRu166VU2xqa1: "a1b58899-f671-4276-6a5e-56ca5bd59700"
  },
  ConnectorImageIds: {
    [ConstantsUtil2.COINBASE_CONNECTOR_ID]: "0c2840c3-5b04-4c44-9661-fbd4b49e1800",
    [ConstantsUtil2.COINBASE_SDK_CONNECTOR_ID]: "0c2840c3-5b04-4c44-9661-fbd4b49e1800",
    [ConstantsUtil2.SAFE_CONNECTOR_ID]: "461db637-8616-43ce-035a-d89b8a1d5800",
    [ConstantsUtil2.LEDGER_CONNECTOR_ID]: "54a1aa77-d202-4f8d-0fb2-5d2bb6db0300",
    [ConstantsUtil2.WALLET_CONNECT_CONNECTOR_ID]: "ef1a1fcf-7fe8-4d69-bd6d-fda1345b4400",
    [ConstantsUtil2.INJECTED_CONNECTOR_ID]: "07ba87ed-43aa-4adf-4540-9e6a2b9cae00"
  },
  ConnectorNamesMap: {
    [ConstantsUtil2.INJECTED_CONNECTOR_ID]: "Browser Wallet",
    [ConstantsUtil2.WALLET_CONNECT_CONNECTOR_ID]: "WalletConnect",
    [ConstantsUtil2.COINBASE_CONNECTOR_ID]: "Coinbase",
    [ConstantsUtil2.COINBASE_SDK_CONNECTOR_ID]: "Coinbase",
    [ConstantsUtil2.LEDGER_CONNECTOR_ID]: "Ledger",
    [ConstantsUtil2.SAFE_CONNECTOR_ID]: "Safe"
  },
  ConnectorTypesMap: {
    [ConstantsUtil2.INJECTED_CONNECTOR_ID]: "INJECTED",
    [ConstantsUtil2.WALLET_CONNECT_CONNECTOR_ID]: "WALLET_CONNECT",
    [ConstantsUtil2.EIP6963_CONNECTOR_ID]: "ANNOUNCED",
    [ConstantsUtil2.AUTH_CONNECTOR_ID]: "AUTH"
  },
  WalletConnectRpcChainIds: [
    1,
    5,
    11155111,
    10,
    420,
    42161,
    421613,
    137,
    80001,
    42220,
    1313161554,
    1313161555,
    56,
    97,
    43114,
    43113,
    100,
    8453,
    84531,
    7777777,
    999,
    324,
    280
  ]
};

// node_modules/@web3modal/scaffold-utils/dist/esm/src/HelpersUtil.js
var HelpersUtil = {
  getCaipTokens(tokens) {
    if (!tokens) {
      return void 0;
    }
    const caipTokens = {};
    Object.entries(tokens).forEach(([id, token]) => {
      caipTokens[`${ConstantsUtil2.EIP155}:${id}`] = token;
    });
    return caipTokens;
  }
};

// node_modules/@web3modal/scaffold-utils/dist/esm/src/TypeUtil.js
var SocialProviderEnum;
(function(SocialProviderEnum2) {
  SocialProviderEnum2["Google"] = "google";
  SocialProviderEnum2["Github"] = "github";
  SocialProviderEnum2["Apple"] = "apple";
  SocialProviderEnum2["Facebook"] = "facebook";
  SocialProviderEnum2["X"] = "x";
  SocialProviderEnum2["Discord"] = "discord";
  SocialProviderEnum2["Farcaster"] = "farcaster";
})(SocialProviderEnum || (SocialProviderEnum = {}));

// node_modules/@web3modal/base/node_modules/@walletconnect/utils/dist/index.es.js
var import_time = __toESM(require_cjs());
var import_window_getters = __toESM(require_cjs2());
var import_window_metadata = __toESM(require_cjs3());
var Br = __toESM(require_query_string());
var import_chacha20poly1305 = __toESM(require_chacha20poly1305());
var import_hkdf = __toESM(require_hkdf());
var import_random = __toESM(require_random());
var import_sha256 = __toESM(require_sha256());
var gn = __toESM(require_x25519());
var import_elliptic = __toESM(require_elliptic());
var Rr = ":";
function An(e) {
  const { namespace: t, reference: r } = e;
  return [t, r].join(Rr);
}
function gi(e) {
  const [t, r, i] = e.split(Rr);
  return { namespace: t, reference: r, address: i };
}
function mi(e, t) {
  const r = [];
  return e.forEach((i) => {
    const n = t(i);
    r.includes(n) || r.push(n);
  }), r;
}
function wn(e) {
  const { namespace: t, reference: r } = gi(e);
  return An({ namespace: t, reference: r });
}
function xn(e) {
  return mi(e, wn);
}
var Tn = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {};
function Es(e) {
  var t = e.default;
  if (typeof t == "function") {
    var r = function() {
      return t.apply(this, arguments);
    };
    r.prototype = t.prototype;
  } else r = {};
  return Object.defineProperty(r, "__esModule", { value: true }), Object.keys(e).forEach(function(i) {
    var n = Object.getOwnPropertyDescriptor(e, i);
    Object.defineProperty(r, i, n.get ? n : { enumerable: true, get: function() {
      return e[i];
    } });
  }), r;
}
var Un = { exports: {} };
(function(e) {
  (function() {
    var t = "input is invalid type", r = "finalize already called", i = typeof window == "object", n = i ? window : {};
    n.JS_SHA3_NO_WINDOW && (i = false);
    var o = !i && typeof self == "object", h = !n.JS_SHA3_NO_NODE_JS && typeof process == "object" && process.versions && process.versions.node;
    h ? n = Tn : o && (n = self);
    var p = !n.JS_SHA3_NO_COMMON_JS && true && e.exports, A = !n.JS_SHA3_NO_ARRAY_BUFFER && typeof ArrayBuffer < "u", v = "0123456789abcdef".split(""), w = [31, 7936, 2031616, 520093696], y2 = [4, 1024, 262144, 67108864], S = [1, 256, 65536, 16777216], I = [6, 1536, 393216, 100663296], N = [0, 8, 16, 24], C2 = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649, 0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0, 2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771, 2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648, 2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648], F = [224, 256, 384, 512], U = [128, 256], J = ["hex", "buffer", "arrayBuffer", "array", "digest"], Bt = { 128: 168, 256: 136 };
    (n.JS_SHA3_NO_NODE_JS || !Array.isArray) && (Array.isArray = function(u) {
      return Object.prototype.toString.call(u) === "[object Array]";
    }), A && (n.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView) && (ArrayBuffer.isView = function(u) {
      return typeof u == "object" && u.buffer && u.buffer.constructor === ArrayBuffer;
    });
    for (var G = function(u, E, _) {
      return function(B) {
        return new s(u, E, u).update(B)[_]();
      };
    }, H = function(u, E, _) {
      return function(B, R) {
        return new s(u, E, R).update(B)[_]();
      };
    }, L = function(u, E, _) {
      return function(B, R, T, P) {
        return f["cshake" + u].update(B, R, T, P)[_]();
      };
    }, Pt = function(u, E, _) {
      return function(B, R, T, P) {
        return f["kmac" + u].update(B, R, T, P)[_]();
      };
    }, W = function(u, E, _, B) {
      for (var R = 0; R < J.length; ++R) {
        var T = J[R];
        u[T] = E(_, B, T);
      }
      return u;
    }, Rt = function(u, E) {
      var _ = G(u, E, "hex");
      return _.create = function() {
        return new s(u, E, u);
      }, _.update = function(B) {
        return _.create().update(B);
      }, W(_, G, u, E);
    }, Vt = function(u, E) {
      var _ = H(u, E, "hex");
      return _.create = function(B) {
        return new s(u, E, B);
      }, _.update = function(B, R) {
        return _.create(R).update(B);
      }, W(_, H, u, E);
    }, Y = function(u, E) {
      var _ = Bt[u], B = L(u, E, "hex");
      return B.create = function(R, T, P) {
        return !T && !P ? f["shake" + u].create(R) : new s(u, E, R).bytepad([T, P], _);
      }, B.update = function(R, T, P, O) {
        return B.create(T, P, O).update(R);
      }, W(B, L, u, E);
    }, Wt = function(u, E) {
      var _ = Bt[u], B = Pt(u, E, "hex");
      return B.create = function(R, T, P) {
        return new g(u, E, T).bytepad(["KMAC", P], _).bytepad([R], _);
      }, B.update = function(R, T, P, O) {
        return B.create(R, P, O).update(T);
      }, W(B, Pt, u, E);
    }, b = [{ name: "keccak", padding: S, bits: F, createMethod: Rt }, { name: "sha3", padding: I, bits: F, createMethod: Rt }, { name: "shake", padding: w, bits: U, createMethod: Vt }, { name: "cshake", padding: y2, bits: U, createMethod: Y }, { name: "kmac", padding: y2, bits: U, createMethod: Wt }], f = {}, a = [], c = 0; c < b.length; ++c) for (var d = b[c], m = d.bits, x2 = 0; x2 < m.length; ++x2) {
      var M = d.name + "_" + m[x2];
      if (a.push(M), f[M] = d.createMethod(m[x2], d.padding), d.name !== "sha3") {
        var l = d.name + m[x2];
        a.push(l), f[l] = f[M];
      }
    }
    function s(u, E, _) {
      this.blocks = [], this.s = [], this.padding = E, this.outputBits = _, this.reset = true, this.finalized = false, this.block = 0, this.start = 0, this.blockCount = 1600 - (u << 1) >> 5, this.byteCount = this.blockCount << 2, this.outputBlocks = _ >> 5, this.extraBytes = (_ & 31) >> 3;
      for (var B = 0; B < 50; ++B) this.s[B] = 0;
    }
    s.prototype.update = function(u) {
      if (this.finalized) throw new Error(r);
      var E, _ = typeof u;
      if (_ !== "string") {
        if (_ === "object") {
          if (u === null) throw new Error(t);
          if (A && u.constructor === ArrayBuffer) u = new Uint8Array(u);
          else if (!Array.isArray(u) && (!A || !ArrayBuffer.isView(u))) throw new Error(t);
        } else throw new Error(t);
        E = true;
      }
      for (var B = this.blocks, R = this.byteCount, T = u.length, P = this.blockCount, O = 0, Ct = this.s, D, q; O < T; ) {
        if (this.reset) for (this.reset = false, B[0] = this.block, D = 1; D < P + 1; ++D) B[D] = 0;
        if (E) for (D = this.start; O < T && D < R; ++O) B[D >> 2] |= u[O] << N[D++ & 3];
        else for (D = this.start; O < T && D < R; ++O) q = u.charCodeAt(O), q < 128 ? B[D >> 2] |= q << N[D++ & 3] : q < 2048 ? (B[D >> 2] |= (192 | q >> 6) << N[D++ & 3], B[D >> 2] |= (128 | q & 63) << N[D++ & 3]) : q < 55296 || q >= 57344 ? (B[D >> 2] |= (224 | q >> 12) << N[D++ & 3], B[D >> 2] |= (128 | q >> 6 & 63) << N[D++ & 3], B[D >> 2] |= (128 | q & 63) << N[D++ & 3]) : (q = 65536 + ((q & 1023) << 10 | u.charCodeAt(++O) & 1023), B[D >> 2] |= (240 | q >> 18) << N[D++ & 3], B[D >> 2] |= (128 | q >> 12 & 63) << N[D++ & 3], B[D >> 2] |= (128 | q >> 6 & 63) << N[D++ & 3], B[D >> 2] |= (128 | q & 63) << N[D++ & 3]);
        if (this.lastByteIndex = D, D >= R) {
          for (this.start = D - R, this.block = B[P], D = 0; D < P; ++D) Ct[D] ^= B[D];
          k(Ct), this.reset = true;
        } else this.start = D;
      }
      return this;
    }, s.prototype.encode = function(u, E) {
      var _ = u & 255, B = 1, R = [_];
      for (u = u >> 8, _ = u & 255; _ > 0; ) R.unshift(_), u = u >> 8, _ = u & 255, ++B;
      return E ? R.push(B) : R.unshift(B), this.update(R), R.length;
    }, s.prototype.encodeString = function(u) {
      var E, _ = typeof u;
      if (_ !== "string") {
        if (_ === "object") {
          if (u === null) throw new Error(t);
          if (A && u.constructor === ArrayBuffer) u = new Uint8Array(u);
          else if (!Array.isArray(u) && (!A || !ArrayBuffer.isView(u))) throw new Error(t);
        } else throw new Error(t);
        E = true;
      }
      var B = 0, R = u.length;
      if (E) B = R;
      else for (var T = 0; T < u.length; ++T) {
        var P = u.charCodeAt(T);
        P < 128 ? B += 1 : P < 2048 ? B += 2 : P < 55296 || P >= 57344 ? B += 3 : (P = 65536 + ((P & 1023) << 10 | u.charCodeAt(++T) & 1023), B += 4);
      }
      return B += this.encode(B * 8), this.update(u), B;
    }, s.prototype.bytepad = function(u, E) {
      for (var _ = this.encode(E), B = 0; B < u.length; ++B) _ += this.encodeString(u[B]);
      var R = E - _ % E, T = [];
      return T.length = R, this.update(T), this;
    }, s.prototype.finalize = function() {
      if (!this.finalized) {
        this.finalized = true;
        var u = this.blocks, E = this.lastByteIndex, _ = this.blockCount, B = this.s;
        if (u[E >> 2] |= this.padding[E & 3], this.lastByteIndex === this.byteCount) for (u[0] = u[_], E = 1; E < _ + 1; ++E) u[E] = 0;
        for (u[_ - 1] |= 2147483648, E = 0; E < _; ++E) B[E] ^= u[E];
        k(B);
      }
    }, s.prototype.toString = s.prototype.hex = function() {
      this.finalize();
      for (var u = this.blockCount, E = this.s, _ = this.outputBlocks, B = this.extraBytes, R = 0, T = 0, P = "", O; T < _; ) {
        for (R = 0; R < u && T < _; ++R, ++T) O = E[R], P += v[O >> 4 & 15] + v[O & 15] + v[O >> 12 & 15] + v[O >> 8 & 15] + v[O >> 20 & 15] + v[O >> 16 & 15] + v[O >> 28 & 15] + v[O >> 24 & 15];
        T % u === 0 && (k(E), R = 0);
      }
      return B && (O = E[R], P += v[O >> 4 & 15] + v[O & 15], B > 1 && (P += v[O >> 12 & 15] + v[O >> 8 & 15]), B > 2 && (P += v[O >> 20 & 15] + v[O >> 16 & 15])), P;
    }, s.prototype.arrayBuffer = function() {
      this.finalize();
      var u = this.blockCount, E = this.s, _ = this.outputBlocks, B = this.extraBytes, R = 0, T = 0, P = this.outputBits >> 3, O;
      B ? O = new ArrayBuffer(_ + 1 << 2) : O = new ArrayBuffer(P);
      for (var Ct = new Uint32Array(O); T < _; ) {
        for (R = 0; R < u && T < _; ++R, ++T) Ct[T] = E[R];
        T % u === 0 && k(E);
      }
      return B && (Ct[R] = E[R], O = O.slice(0, P)), O;
    }, s.prototype.buffer = s.prototype.arrayBuffer, s.prototype.digest = s.prototype.array = function() {
      this.finalize();
      for (var u = this.blockCount, E = this.s, _ = this.outputBlocks, B = this.extraBytes, R = 0, T = 0, P = [], O, Ct; T < _; ) {
        for (R = 0; R < u && T < _; ++R, ++T) O = T << 2, Ct = E[R], P[O] = Ct & 255, P[O + 1] = Ct >> 8 & 255, P[O + 2] = Ct >> 16 & 255, P[O + 3] = Ct >> 24 & 255;
        T % u === 0 && k(E);
      }
      return B && (O = T << 2, Ct = E[R], P[O] = Ct & 255, B > 1 && (P[O + 1] = Ct >> 8 & 255), B > 2 && (P[O + 2] = Ct >> 16 & 255)), P;
    };
    function g(u, E, _) {
      s.call(this, u, E, _);
    }
    g.prototype = new s(), g.prototype.finalize = function() {
      return this.encode(this.outputBits, true), s.prototype.finalize.call(this);
    };
    var k = function(u) {
      var E, _, B, R, T, P, O, Ct, D, q, De, X, Z, Fe, $, tt, Te, et, rt, Ue, it, nt, ke, ft, ot, qe, st, at, Ke, ut, ht, He, ct, lt, Le, dt, pt, ze, vt, gt, je, mt, At, Qe, bt, yt, Je, wt, xt, Ge, Mt, Et, Ye, St, Nt, Ve, It, _t, Me, Ee, Se, Ne, Ie;
      for (B = 0; B < 48; B += 2) R = u[0] ^ u[10] ^ u[20] ^ u[30] ^ u[40], T = u[1] ^ u[11] ^ u[21] ^ u[31] ^ u[41], P = u[2] ^ u[12] ^ u[22] ^ u[32] ^ u[42], O = u[3] ^ u[13] ^ u[23] ^ u[33] ^ u[43], Ct = u[4] ^ u[14] ^ u[24] ^ u[34] ^ u[44], D = u[5] ^ u[15] ^ u[25] ^ u[35] ^ u[45], q = u[6] ^ u[16] ^ u[26] ^ u[36] ^ u[46], De = u[7] ^ u[17] ^ u[27] ^ u[37] ^ u[47], X = u[8] ^ u[18] ^ u[28] ^ u[38] ^ u[48], Z = u[9] ^ u[19] ^ u[29] ^ u[39] ^ u[49], E = X ^ (P << 1 | O >>> 31), _ = Z ^ (O << 1 | P >>> 31), u[0] ^= E, u[1] ^= _, u[10] ^= E, u[11] ^= _, u[20] ^= E, u[21] ^= _, u[30] ^= E, u[31] ^= _, u[40] ^= E, u[41] ^= _, E = R ^ (Ct << 1 | D >>> 31), _ = T ^ (D << 1 | Ct >>> 31), u[2] ^= E, u[3] ^= _, u[12] ^= E, u[13] ^= _, u[22] ^= E, u[23] ^= _, u[32] ^= E, u[33] ^= _, u[42] ^= E, u[43] ^= _, E = P ^ (q << 1 | De >>> 31), _ = O ^ (De << 1 | q >>> 31), u[4] ^= E, u[5] ^= _, u[14] ^= E, u[15] ^= _, u[24] ^= E, u[25] ^= _, u[34] ^= E, u[35] ^= _, u[44] ^= E, u[45] ^= _, E = Ct ^ (X << 1 | Z >>> 31), _ = D ^ (Z << 1 | X >>> 31), u[6] ^= E, u[7] ^= _, u[16] ^= E, u[17] ^= _, u[26] ^= E, u[27] ^= _, u[36] ^= E, u[37] ^= _, u[46] ^= E, u[47] ^= _, E = q ^ (R << 1 | T >>> 31), _ = De ^ (T << 1 | R >>> 31), u[8] ^= E, u[9] ^= _, u[18] ^= E, u[19] ^= _, u[28] ^= E, u[29] ^= _, u[38] ^= E, u[39] ^= _, u[48] ^= E, u[49] ^= _, Fe = u[0], $ = u[1], yt = u[11] << 4 | u[10] >>> 28, Je = u[10] << 4 | u[11] >>> 28, at = u[20] << 3 | u[21] >>> 29, Ke = u[21] << 3 | u[20] >>> 29, Ee = u[31] << 9 | u[30] >>> 23, Se = u[30] << 9 | u[31] >>> 23, mt = u[40] << 18 | u[41] >>> 14, At = u[41] << 18 | u[40] >>> 14, lt = u[2] << 1 | u[3] >>> 31, Le = u[3] << 1 | u[2] >>> 31, tt = u[13] << 12 | u[12] >>> 20, Te = u[12] << 12 | u[13] >>> 20, wt = u[22] << 10 | u[23] >>> 22, xt = u[23] << 10 | u[22] >>> 22, ut = u[33] << 13 | u[32] >>> 19, ht = u[32] << 13 | u[33] >>> 19, Ne = u[42] << 2 | u[43] >>> 30, Ie = u[43] << 2 | u[42] >>> 30, St = u[5] << 30 | u[4] >>> 2, Nt = u[4] << 30 | u[5] >>> 2, dt = u[14] << 6 | u[15] >>> 26, pt = u[15] << 6 | u[14] >>> 26, et = u[25] << 11 | u[24] >>> 21, rt = u[24] << 11 | u[25] >>> 21, Ge = u[34] << 15 | u[35] >>> 17, Mt = u[35] << 15 | u[34] >>> 17, He = u[45] << 29 | u[44] >>> 3, ct = u[44] << 29 | u[45] >>> 3, ft = u[6] << 28 | u[7] >>> 4, ot = u[7] << 28 | u[6] >>> 4, Ve = u[17] << 23 | u[16] >>> 9, It = u[16] << 23 | u[17] >>> 9, ze = u[26] << 25 | u[27] >>> 7, vt = u[27] << 25 | u[26] >>> 7, Ue = u[36] << 21 | u[37] >>> 11, it = u[37] << 21 | u[36] >>> 11, Et = u[47] << 24 | u[46] >>> 8, Ye = u[46] << 24 | u[47] >>> 8, Qe = u[8] << 27 | u[9] >>> 5, bt = u[9] << 27 | u[8] >>> 5, qe = u[18] << 20 | u[19] >>> 12, st = u[19] << 20 | u[18] >>> 12, _t = u[29] << 7 | u[28] >>> 25, Me = u[28] << 7 | u[29] >>> 25, gt = u[38] << 8 | u[39] >>> 24, je = u[39] << 8 | u[38] >>> 24, nt = u[48] << 14 | u[49] >>> 18, ke = u[49] << 14 | u[48] >>> 18, u[0] = Fe ^ ~tt & et, u[1] = $ ^ ~Te & rt, u[10] = ft ^ ~qe & at, u[11] = ot ^ ~st & Ke, u[20] = lt ^ ~dt & ze, u[21] = Le ^ ~pt & vt, u[30] = Qe ^ ~yt & wt, u[31] = bt ^ ~Je & xt, u[40] = St ^ ~Ve & _t, u[41] = Nt ^ ~It & Me, u[2] = tt ^ ~et & Ue, u[3] = Te ^ ~rt & it, u[12] = qe ^ ~at & ut, u[13] = st ^ ~Ke & ht, u[22] = dt ^ ~ze & gt, u[23] = pt ^ ~vt & je, u[32] = yt ^ ~wt & Ge, u[33] = Je ^ ~xt & Mt, u[42] = Ve ^ ~_t & Ee, u[43] = It ^ ~Me & Se, u[4] = et ^ ~Ue & nt, u[5] = rt ^ ~it & ke, u[14] = at ^ ~ut & He, u[15] = Ke ^ ~ht & ct, u[24] = ze ^ ~gt & mt, u[25] = vt ^ ~je & At, u[34] = wt ^ ~Ge & Et, u[35] = xt ^ ~Mt & Ye, u[44] = _t ^ ~Ee & Ne, u[45] = Me ^ ~Se & Ie, u[6] = Ue ^ ~nt & Fe, u[7] = it ^ ~ke & $, u[16] = ut ^ ~He & ft, u[17] = ht ^ ~ct & ot, u[26] = gt ^ ~mt & lt, u[27] = je ^ ~At & Le, u[36] = Ge ^ ~Et & Qe, u[37] = Mt ^ ~Ye & bt, u[46] = Ee ^ ~Ne & St, u[47] = Se ^ ~Ie & Nt, u[8] = nt ^ ~Fe & tt, u[9] = ke ^ ~$ & Te, u[18] = He ^ ~ft & qe, u[19] = ct ^ ~ot & st, u[28] = mt ^ ~lt & dt, u[29] = At ^ ~Le & pt, u[38] = Et ^ ~Qe & yt, u[39] = Ye ^ ~bt & Je, u[48] = Ne ^ ~St & Ve, u[49] = Ie ^ ~Nt & It, u[0] ^= C2[B], u[1] ^= C2[B + 1];
    };
    if (p) e.exports = f;
    else for (c = 0; c < a.length; ++c) n[a[c]] = f[a[c]];
  })();
})(Un);
var Ss = Un.exports;
var Ns = "logger/5.7.0";
var kn = false;
var qn = false;
var Dr = { debug: 1, default: 2, info: 2, warning: 3, error: 4, off: 5 };
var Kn = Dr.default;
var xi = null;
function Is() {
  try {
    const e = [];
    if (["NFD", "NFC", "NFKD", "NFKC"].forEach((t) => {
      try {
        if ("test".normalize(t) !== "test") throw new Error("bad normalize");
      } catch {
        e.push(t);
      }
    }), e.length) throw new Error("missing " + e.join(", "));
    if (String.fromCharCode(233).normalize("NFD") !== String.fromCharCode(101, 769)) throw new Error("broken implementation");
  } catch (e) {
    return e.message;
  }
  return null;
}
var Hn = Is();
var Mi;
(function(e) {
  e.DEBUG = "DEBUG", e.INFO = "INFO", e.WARNING = "WARNING", e.ERROR = "ERROR", e.OFF = "OFF";
})(Mi || (Mi = {}));
var re;
(function(e) {
  e.UNKNOWN_ERROR = "UNKNOWN_ERROR", e.NOT_IMPLEMENTED = "NOT_IMPLEMENTED", e.UNSUPPORTED_OPERATION = "UNSUPPORTED_OPERATION", e.NETWORK_ERROR = "NETWORK_ERROR", e.SERVER_ERROR = "SERVER_ERROR", e.TIMEOUT = "TIMEOUT", e.BUFFER_OVERRUN = "BUFFER_OVERRUN", e.NUMERIC_FAULT = "NUMERIC_FAULT", e.MISSING_NEW = "MISSING_NEW", e.INVALID_ARGUMENT = "INVALID_ARGUMENT", e.MISSING_ARGUMENT = "MISSING_ARGUMENT", e.UNEXPECTED_ARGUMENT = "UNEXPECTED_ARGUMENT", e.CALL_EXCEPTION = "CALL_EXCEPTION", e.INSUFFICIENT_FUNDS = "INSUFFICIENT_FUNDS", e.NONCE_EXPIRED = "NONCE_EXPIRED", e.REPLACEMENT_UNDERPRICED = "REPLACEMENT_UNDERPRICED", e.UNPREDICTABLE_GAS_LIMIT = "UNPREDICTABLE_GAS_LIMIT", e.TRANSACTION_REPLACED = "TRANSACTION_REPLACED", e.ACTION_REJECTED = "ACTION_REJECTED";
})(re || (re = {}));
var Ln = "0123456789abcdef";
var z = class _z {
  constructor(t) {
    Object.defineProperty(this, "version", { enumerable: true, value: t, writable: false });
  }
  _log(t, r) {
    const i = t.toLowerCase();
    Dr[i] == null && this.throwArgumentError("invalid log level name", "logLevel", t), !(Kn > Dr[i]) && console.log.apply(console, r);
  }
  debug(...t) {
    this._log(_z.levels.DEBUG, t);
  }
  info(...t) {
    this._log(_z.levels.INFO, t);
  }
  warn(...t) {
    this._log(_z.levels.WARNING, t);
  }
  makeError(t, r, i) {
    if (qn) return this.makeError("censored error", r, {});
    r || (r = _z.errors.UNKNOWN_ERROR), i || (i = {});
    const n = [];
    Object.keys(i).forEach((A) => {
      const v = i[A];
      try {
        if (v instanceof Uint8Array) {
          let w = "";
          for (let y2 = 0; y2 < v.length; y2++) w += Ln[v[y2] >> 4], w += Ln[v[y2] & 15];
          n.push(A + "=Uint8Array(0x" + w + ")");
        } else n.push(A + "=" + JSON.stringify(v));
      } catch {
        n.push(A + "=" + JSON.stringify(i[A].toString()));
      }
    }), n.push(`code=${r}`), n.push(`version=${this.version}`);
    const o = t;
    let h = "";
    switch (r) {
      case re.NUMERIC_FAULT: {
        h = "NUMERIC_FAULT";
        const A = t;
        switch (A) {
          case "overflow":
          case "underflow":
          case "division-by-zero":
            h += "-" + A;
            break;
          case "negative-power":
          case "negative-width":
            h += "-unsupported";
            break;
          case "unbound-bitwise-result":
            h += "-unbound-result";
            break;
        }
        break;
      }
      case re.CALL_EXCEPTION:
      case re.INSUFFICIENT_FUNDS:
      case re.MISSING_NEW:
      case re.NONCE_EXPIRED:
      case re.REPLACEMENT_UNDERPRICED:
      case re.TRANSACTION_REPLACED:
      case re.UNPREDICTABLE_GAS_LIMIT:
        h = r;
        break;
    }
    h && (t += " [ See: https://links.ethers.org/v5-errors-" + h + " ]"), n.length && (t += " (" + n.join(", ") + ")");
    const p = new Error(t);
    return p.reason = o, p.code = r, Object.keys(i).forEach(function(A) {
      p[A] = i[A];
    }), p;
  }
  throwError(t, r, i) {
    throw this.makeError(t, r, i);
  }
  throwArgumentError(t, r, i) {
    return this.throwError(t, _z.errors.INVALID_ARGUMENT, { argument: r, value: i });
  }
  assert(t, r, i, n) {
    t || this.throwError(r, i, n);
  }
  assertArgument(t, r, i, n) {
    t || this.throwArgumentError(r, i, n);
  }
  checkNormalize(t) {
    Hn && this.throwError("platform missing String.prototype.normalize", _z.errors.UNSUPPORTED_OPERATION, { operation: "String.prototype.normalize", form: Hn });
  }
  checkSafeUint53(t, r) {
    typeof t == "number" && (r == null && (r = "value not safe"), (t < 0 || t >= 9007199254740991) && this.throwError(r, _z.errors.NUMERIC_FAULT, { operation: "checkSafeInteger", fault: "out-of-safe-range", value: t }), t % 1 && this.throwError(r, _z.errors.NUMERIC_FAULT, { operation: "checkSafeInteger", fault: "non-integer", value: t }));
  }
  checkArgumentCount(t, r, i) {
    i ? i = ": " + i : i = "", t < r && this.throwError("missing argument" + i, _z.errors.MISSING_ARGUMENT, { count: t, expectedCount: r }), t > r && this.throwError("too many arguments" + i, _z.errors.UNEXPECTED_ARGUMENT, { count: t, expectedCount: r });
  }
  checkNew(t, r) {
    (t === Object || t == null) && this.throwError("missing new", _z.errors.MISSING_NEW, { name: r.name });
  }
  checkAbstract(t, r) {
    t === r ? this.throwError("cannot instantiate abstract class " + JSON.stringify(r.name) + " directly; use a sub-class", _z.errors.UNSUPPORTED_OPERATION, { name: t.name, operation: "new" }) : (t === Object || t == null) && this.throwError("missing new", _z.errors.MISSING_NEW, { name: r.name });
  }
  static globalLogger() {
    return xi || (xi = new _z(Ns)), xi;
  }
  static setCensorship(t, r) {
    if (!t && r && this.globalLogger().throwError("cannot permanently disable censorship", _z.errors.UNSUPPORTED_OPERATION, { operation: "setCensorship" }), kn) {
      if (!t) return;
      this.globalLogger().throwError("error censorship permanent", _z.errors.UNSUPPORTED_OPERATION, { operation: "setCensorship" });
    }
    qn = !!t, kn = !!r;
  }
  static setLogLevel(t) {
    const r = Dr[t.toLowerCase()];
    if (r == null) {
      _z.globalLogger().warn("invalid log level - " + t);
      return;
    }
    Kn = r;
  }
  static from(t) {
    return new _z(t);
  }
};
z.errors = re, z.levels = Mi;
var _s = "bytes/5.7.0";
var Dt = new z(_s);
function zn(e) {
  return !!e.toHexString;
}
function ir(e) {
  return e.slice || (e.slice = function() {
    const t = Array.prototype.slice.call(arguments);
    return ir(new Uint8Array(Array.prototype.slice.apply(e, t)));
  }), e;
}
function jn(e) {
  return typeof e == "number" && e == e && e % 1 === 0;
}
function nr(e) {
  if (e == null) return false;
  if (e.constructor === Uint8Array) return true;
  if (typeof e == "string" || !jn(e.length) || e.length < 0) return false;
  for (let t = 0; t < e.length; t++) {
    const r = e[t];
    if (!jn(r) || r < 0 || r >= 256) return false;
  }
  return true;
}
function Ot(e, t) {
  if (t || (t = {}), typeof e == "number") {
    Dt.checkSafeUint53(e, "invalid arrayify value");
    const r = [];
    for (; e; ) r.unshift(e & 255), e = parseInt(String(e / 256));
    return r.length === 0 && r.push(0), ir(new Uint8Array(r));
  }
  if (t.allowMissingPrefix && typeof e == "string" && e.substring(0, 2) !== "0x" && (e = "0x" + e), zn(e) && (e = e.toHexString()), Jt(e)) {
    let r = e.substring(2);
    r.length % 2 && (t.hexPad === "left" ? r = "0" + r : t.hexPad === "right" ? r += "0" : Dt.throwArgumentError("hex data is odd-length", "value", e));
    const i = [];
    for (let n = 0; n < r.length; n += 2) i.push(parseInt(r.substring(n, n + 2), 16));
    return ir(new Uint8Array(i));
  }
  return nr(e) ? ir(new Uint8Array(e)) : Dt.throwArgumentError("invalid arrayify value", "value", e);
}
function Jt(e, t) {
  return !(typeof e != "string" || !e.match(/^0x[0-9A-Fa-f]*$/) || t && e.length !== 2 + 2 * t);
}
var Ei = "0123456789abcdef";
function Kt(e, t) {
  if (t || (t = {}), typeof e == "number") {
    Dt.checkSafeUint53(e, "invalid hexlify value");
    let r = "";
    for (; e; ) r = Ei[e & 15] + r, e = Math.floor(e / 16);
    return r.length ? (r.length % 2 && (r = "0" + r), "0x" + r) : "0x00";
  }
  if (typeof e == "bigint") return e = e.toString(16), e.length % 2 ? "0x0" + e : "0x" + e;
  if (t.allowMissingPrefix && typeof e == "string" && e.substring(0, 2) !== "0x" && (e = "0x" + e), zn(e)) return e.toHexString();
  if (Jt(e)) return e.length % 2 && (t.hexPad === "left" ? e = "0x0" + e.substring(2) : t.hexPad === "right" ? e += "0" : Dt.throwArgumentError("hex data is odd-length", "value", e)), e.toLowerCase();
  if (nr(e)) {
    let r = "0x";
    for (let i = 0; i < e.length; i++) {
      let n = e[i];
      r += Ei[(n & 240) >> 4] + Ei[n & 15];
    }
    return r;
  }
  return Dt.throwArgumentError("invalid hexlify value", "value", e);
}
function oe(e, t) {
  for (typeof e != "string" ? e = Kt(e) : Jt(e) || Dt.throwArgumentError("invalid hex string", "value", e), e.length > 2 * t + 2 && Dt.throwArgumentError("value out of range", "value", arguments[1]); e.length < 2 * t + 2; ) e = "0x0" + e.substring(2);
  return e;
}
var Gn = { exports: {} };
var Ps = {};
var Ds = Object.freeze({ __proto__: null, default: Ps });
var Fs = Es(Ds);
(function(e) {
  (function(t, r) {
    function i(b, f) {
      if (!b) throw new Error(f || "Assertion failed");
    }
    function n(b, f) {
      b.super_ = f;
      var a = function() {
      };
      a.prototype = f.prototype, b.prototype = new a(), b.prototype.constructor = b;
    }
    function o(b, f, a) {
      if (o.isBN(b)) return b;
      this.negative = 0, this.words = null, this.length = 0, this.red = null, b !== null && ((f === "le" || f === "be") && (a = f, f = 10), this._init(b || 0, f || 10, a || "be"));
    }
    typeof t == "object" ? t.exports = o : r.BN = o, o.BN = o, o.wordSize = 26;
    var h;
    try {
      typeof window < "u" && typeof window.Buffer < "u" ? h = window.Buffer : h = Fs.Buffer;
    } catch {
    }
    o.isBN = function(f) {
      return f instanceof o ? true : f !== null && typeof f == "object" && f.constructor.wordSize === o.wordSize && Array.isArray(f.words);
    }, o.max = function(f, a) {
      return f.cmp(a) > 0 ? f : a;
    }, o.min = function(f, a) {
      return f.cmp(a) < 0 ? f : a;
    }, o.prototype._init = function(f, a, c) {
      if (typeof f == "number") return this._initNumber(f, a, c);
      if (typeof f == "object") return this._initArray(f, a, c);
      a === "hex" && (a = 16), i(a === (a | 0) && a >= 2 && a <= 36), f = f.toString().replace(/\s+/g, "");
      var d = 0;
      f[0] === "-" && (d++, this.negative = 1), d < f.length && (a === 16 ? this._parseHex(f, d, c) : (this._parseBase(f, a, d), c === "le" && this._initArray(this.toArray(), a, c)));
    }, o.prototype._initNumber = function(f, a, c) {
      f < 0 && (this.negative = 1, f = -f), f < 67108864 ? (this.words = [f & 67108863], this.length = 1) : f < 4503599627370496 ? (this.words = [f & 67108863, f / 67108864 & 67108863], this.length = 2) : (i(f < 9007199254740992), this.words = [f & 67108863, f / 67108864 & 67108863, 1], this.length = 3), c === "le" && this._initArray(this.toArray(), a, c);
    }, o.prototype._initArray = function(f, a, c) {
      if (i(typeof f.length == "number"), f.length <= 0) return this.words = [0], this.length = 1, this;
      this.length = Math.ceil(f.length / 3), this.words = new Array(this.length);
      for (var d = 0; d < this.length; d++) this.words[d] = 0;
      var m, x2, M = 0;
      if (c === "be") for (d = f.length - 1, m = 0; d >= 0; d -= 3) x2 = f[d] | f[d - 1] << 8 | f[d - 2] << 16, this.words[m] |= x2 << M & 67108863, this.words[m + 1] = x2 >>> 26 - M & 67108863, M += 24, M >= 26 && (M -= 26, m++);
      else if (c === "le") for (d = 0, m = 0; d < f.length; d += 3) x2 = f[d] | f[d + 1] << 8 | f[d + 2] << 16, this.words[m] |= x2 << M & 67108863, this.words[m + 1] = x2 >>> 26 - M & 67108863, M += 24, M >= 26 && (M -= 26, m++);
      return this._strip();
    };
    function p(b, f) {
      var a = b.charCodeAt(f);
      if (a >= 48 && a <= 57) return a - 48;
      if (a >= 65 && a <= 70) return a - 55;
      if (a >= 97 && a <= 102) return a - 87;
      i(false, "Invalid character in " + b);
    }
    function A(b, f, a) {
      var c = p(b, a);
      return a - 1 >= f && (c |= p(b, a - 1) << 4), c;
    }
    o.prototype._parseHex = function(f, a, c) {
      this.length = Math.ceil((f.length - a) / 6), this.words = new Array(this.length);
      for (var d = 0; d < this.length; d++) this.words[d] = 0;
      var m = 0, x2 = 0, M;
      if (c === "be") for (d = f.length - 1; d >= a; d -= 2) M = A(f, a, d) << m, this.words[x2] |= M & 67108863, m >= 18 ? (m -= 18, x2 += 1, this.words[x2] |= M >>> 26) : m += 8;
      else {
        var l = f.length - a;
        for (d = l % 2 === 0 ? a + 1 : a; d < f.length; d += 2) M = A(f, a, d) << m, this.words[x2] |= M & 67108863, m >= 18 ? (m -= 18, x2 += 1, this.words[x2] |= M >>> 26) : m += 8;
      }
      this._strip();
    };
    function v(b, f, a, c) {
      for (var d = 0, m = 0, x2 = Math.min(b.length, a), M = f; M < x2; M++) {
        var l = b.charCodeAt(M) - 48;
        d *= c, l >= 49 ? m = l - 49 + 10 : l >= 17 ? m = l - 17 + 10 : m = l, i(l >= 0 && m < c, "Invalid character"), d += m;
      }
      return d;
    }
    o.prototype._parseBase = function(f, a, c) {
      this.words = [0], this.length = 1;
      for (var d = 0, m = 1; m <= 67108863; m *= a) d++;
      d--, m = m / a | 0;
      for (var x2 = f.length - c, M = x2 % d, l = Math.min(x2, x2 - M) + c, s = 0, g = c; g < l; g += d) s = v(f, g, g + d, a), this.imuln(m), this.words[0] + s < 67108864 ? this.words[0] += s : this._iaddn(s);
      if (M !== 0) {
        var k = 1;
        for (s = v(f, g, f.length, a), g = 0; g < M; g++) k *= a;
        this.imuln(k), this.words[0] + s < 67108864 ? this.words[0] += s : this._iaddn(s);
      }
      this._strip();
    }, o.prototype.copy = function(f) {
      f.words = new Array(this.length);
      for (var a = 0; a < this.length; a++) f.words[a] = this.words[a];
      f.length = this.length, f.negative = this.negative, f.red = this.red;
    };
    function w(b, f) {
      b.words = f.words, b.length = f.length, b.negative = f.negative, b.red = f.red;
    }
    if (o.prototype._move = function(f) {
      w(f, this);
    }, o.prototype.clone = function() {
      var f = new o(null);
      return this.copy(f), f;
    }, o.prototype._expand = function(f) {
      for (; this.length < f; ) this.words[this.length++] = 0;
      return this;
    }, o.prototype._strip = function() {
      for (; this.length > 1 && this.words[this.length - 1] === 0; ) this.length--;
      return this._normSign();
    }, o.prototype._normSign = function() {
      return this.length === 1 && this.words[0] === 0 && (this.negative = 0), this;
    }, typeof Symbol < "u" && typeof Symbol.for == "function") try {
      o.prototype[Symbol.for("nodejs.util.inspect.custom")] = y2;
    } catch {
      o.prototype.inspect = y2;
    }
    else o.prototype.inspect = y2;
    function y2() {
      return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
    }
    var S = ["", "0", "00", "000", "0000", "00000", "000000", "0000000", "00000000", "000000000", "0000000000", "00000000000", "000000000000", "0000000000000", "00000000000000", "000000000000000", "0000000000000000", "00000000000000000", "000000000000000000", "0000000000000000000", "00000000000000000000", "000000000000000000000", "0000000000000000000000", "00000000000000000000000", "000000000000000000000000", "0000000000000000000000000"], I = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5], N = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 1e7, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64e6, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 243e5, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];
    o.prototype.toString = function(f, a) {
      f = f || 10, a = a | 0 || 1;
      var c;
      if (f === 16 || f === "hex") {
        c = "";
        for (var d = 0, m = 0, x2 = 0; x2 < this.length; x2++) {
          var M = this.words[x2], l = ((M << d | m) & 16777215).toString(16);
          m = M >>> 24 - d & 16777215, d += 2, d >= 26 && (d -= 26, x2--), m !== 0 || x2 !== this.length - 1 ? c = S[6 - l.length] + l + c : c = l + c;
        }
        for (m !== 0 && (c = m.toString(16) + c); c.length % a !== 0; ) c = "0" + c;
        return this.negative !== 0 && (c = "-" + c), c;
      }
      if (f === (f | 0) && f >= 2 && f <= 36) {
        var s = I[f], g = N[f];
        c = "";
        var k = this.clone();
        for (k.negative = 0; !k.isZero(); ) {
          var u = k.modrn(g).toString(f);
          k = k.idivn(g), k.isZero() ? c = u + c : c = S[s - u.length] + u + c;
        }
        for (this.isZero() && (c = "0" + c); c.length % a !== 0; ) c = "0" + c;
        return this.negative !== 0 && (c = "-" + c), c;
      }
      i(false, "Base should be between 2 and 36");
    }, o.prototype.toNumber = function() {
      var f = this.words[0];
      return this.length === 2 ? f += this.words[1] * 67108864 : this.length === 3 && this.words[2] === 1 ? f += 4503599627370496 + this.words[1] * 67108864 : this.length > 2 && i(false, "Number can only safely store up to 53 bits"), this.negative !== 0 ? -f : f;
    }, o.prototype.toJSON = function() {
      return this.toString(16, 2);
    }, h && (o.prototype.toBuffer = function(f, a) {
      return this.toArrayLike(h, f, a);
    }), o.prototype.toArray = function(f, a) {
      return this.toArrayLike(Array, f, a);
    };
    var C2 = function(f, a) {
      return f.allocUnsafe ? f.allocUnsafe(a) : new f(a);
    };
    o.prototype.toArrayLike = function(f, a, c) {
      this._strip();
      var d = this.byteLength(), m = c || Math.max(1, d);
      i(d <= m, "byte array longer than desired length"), i(m > 0, "Requested array length <= 0");
      var x2 = C2(f, m), M = a === "le" ? "LE" : "BE";
      return this["_toArrayLike" + M](x2, d), x2;
    }, o.prototype._toArrayLikeLE = function(f, a) {
      for (var c = 0, d = 0, m = 0, x2 = 0; m < this.length; m++) {
        var M = this.words[m] << x2 | d;
        f[c++] = M & 255, c < f.length && (f[c++] = M >> 8 & 255), c < f.length && (f[c++] = M >> 16 & 255), x2 === 6 ? (c < f.length && (f[c++] = M >> 24 & 255), d = 0, x2 = 0) : (d = M >>> 24, x2 += 2);
      }
      if (c < f.length) for (f[c++] = d; c < f.length; ) f[c++] = 0;
    }, o.prototype._toArrayLikeBE = function(f, a) {
      for (var c = f.length - 1, d = 0, m = 0, x2 = 0; m < this.length; m++) {
        var M = this.words[m] << x2 | d;
        f[c--] = M & 255, c >= 0 && (f[c--] = M >> 8 & 255), c >= 0 && (f[c--] = M >> 16 & 255), x2 === 6 ? (c >= 0 && (f[c--] = M >> 24 & 255), d = 0, x2 = 0) : (d = M >>> 24, x2 += 2);
      }
      if (c >= 0) for (f[c--] = d; c >= 0; ) f[c--] = 0;
    }, Math.clz32 ? o.prototype._countBits = function(f) {
      return 32 - Math.clz32(f);
    } : o.prototype._countBits = function(f) {
      var a = f, c = 0;
      return a >= 4096 && (c += 13, a >>>= 13), a >= 64 && (c += 7, a >>>= 7), a >= 8 && (c += 4, a >>>= 4), a >= 2 && (c += 2, a >>>= 2), c + a;
    }, o.prototype._zeroBits = function(f) {
      if (f === 0) return 26;
      var a = f, c = 0;
      return a & 8191 || (c += 13, a >>>= 13), a & 127 || (c += 7, a >>>= 7), a & 15 || (c += 4, a >>>= 4), a & 3 || (c += 2, a >>>= 2), a & 1 || c++, c;
    }, o.prototype.bitLength = function() {
      var f = this.words[this.length - 1], a = this._countBits(f);
      return (this.length - 1) * 26 + a;
    };
    function F(b) {
      for (var f = new Array(b.bitLength()), a = 0; a < f.length; a++) {
        var c = a / 26 | 0, d = a % 26;
        f[a] = b.words[c] >>> d & 1;
      }
      return f;
    }
    o.prototype.zeroBits = function() {
      if (this.isZero()) return 0;
      for (var f = 0, a = 0; a < this.length; a++) {
        var c = this._zeroBits(this.words[a]);
        if (f += c, c !== 26) break;
      }
      return f;
    }, o.prototype.byteLength = function() {
      return Math.ceil(this.bitLength() / 8);
    }, o.prototype.toTwos = function(f) {
      return this.negative !== 0 ? this.abs().inotn(f).iaddn(1) : this.clone();
    }, o.prototype.fromTwos = function(f) {
      return this.testn(f - 1) ? this.notn(f).iaddn(1).ineg() : this.clone();
    }, o.prototype.isNeg = function() {
      return this.negative !== 0;
    }, o.prototype.neg = function() {
      return this.clone().ineg();
    }, o.prototype.ineg = function() {
      return this.isZero() || (this.negative ^= 1), this;
    }, o.prototype.iuor = function(f) {
      for (; this.length < f.length; ) this.words[this.length++] = 0;
      for (var a = 0; a < f.length; a++) this.words[a] = this.words[a] | f.words[a];
      return this._strip();
    }, o.prototype.ior = function(f) {
      return i((this.negative | f.negative) === 0), this.iuor(f);
    }, o.prototype.or = function(f) {
      return this.length > f.length ? this.clone().ior(f) : f.clone().ior(this);
    }, o.prototype.uor = function(f) {
      return this.length > f.length ? this.clone().iuor(f) : f.clone().iuor(this);
    }, o.prototype.iuand = function(f) {
      var a;
      this.length > f.length ? a = f : a = this;
      for (var c = 0; c < a.length; c++) this.words[c] = this.words[c] & f.words[c];
      return this.length = a.length, this._strip();
    }, o.prototype.iand = function(f) {
      return i((this.negative | f.negative) === 0), this.iuand(f);
    }, o.prototype.and = function(f) {
      return this.length > f.length ? this.clone().iand(f) : f.clone().iand(this);
    }, o.prototype.uand = function(f) {
      return this.length > f.length ? this.clone().iuand(f) : f.clone().iuand(this);
    }, o.prototype.iuxor = function(f) {
      var a, c;
      this.length > f.length ? (a = this, c = f) : (a = f, c = this);
      for (var d = 0; d < c.length; d++) this.words[d] = a.words[d] ^ c.words[d];
      if (this !== a) for (; d < a.length; d++) this.words[d] = a.words[d];
      return this.length = a.length, this._strip();
    }, o.prototype.ixor = function(f) {
      return i((this.negative | f.negative) === 0), this.iuxor(f);
    }, o.prototype.xor = function(f) {
      return this.length > f.length ? this.clone().ixor(f) : f.clone().ixor(this);
    }, o.prototype.uxor = function(f) {
      return this.length > f.length ? this.clone().iuxor(f) : f.clone().iuxor(this);
    }, o.prototype.inotn = function(f) {
      i(typeof f == "number" && f >= 0);
      var a = Math.ceil(f / 26) | 0, c = f % 26;
      this._expand(a), c > 0 && a--;
      for (var d = 0; d < a; d++) this.words[d] = ~this.words[d] & 67108863;
      return c > 0 && (this.words[d] = ~this.words[d] & 67108863 >> 26 - c), this._strip();
    }, o.prototype.notn = function(f) {
      return this.clone().inotn(f);
    }, o.prototype.setn = function(f, a) {
      i(typeof f == "number" && f >= 0);
      var c = f / 26 | 0, d = f % 26;
      return this._expand(c + 1), a ? this.words[c] = this.words[c] | 1 << d : this.words[c] = this.words[c] & ~(1 << d), this._strip();
    }, o.prototype.iadd = function(f) {
      var a;
      if (this.negative !== 0 && f.negative === 0) return this.negative = 0, a = this.isub(f), this.negative ^= 1, this._normSign();
      if (this.negative === 0 && f.negative !== 0) return f.negative = 0, a = this.isub(f), f.negative = 1, a._normSign();
      var c, d;
      this.length > f.length ? (c = this, d = f) : (c = f, d = this);
      for (var m = 0, x2 = 0; x2 < d.length; x2++) a = (c.words[x2] | 0) + (d.words[x2] | 0) + m, this.words[x2] = a & 67108863, m = a >>> 26;
      for (; m !== 0 && x2 < c.length; x2++) a = (c.words[x2] | 0) + m, this.words[x2] = a & 67108863, m = a >>> 26;
      if (this.length = c.length, m !== 0) this.words[this.length] = m, this.length++;
      else if (c !== this) for (; x2 < c.length; x2++) this.words[x2] = c.words[x2];
      return this;
    }, o.prototype.add = function(f) {
      var a;
      return f.negative !== 0 && this.negative === 0 ? (f.negative = 0, a = this.sub(f), f.negative ^= 1, a) : f.negative === 0 && this.negative !== 0 ? (this.negative = 0, a = f.sub(this), this.negative = 1, a) : this.length > f.length ? this.clone().iadd(f) : f.clone().iadd(this);
    }, o.prototype.isub = function(f) {
      if (f.negative !== 0) {
        f.negative = 0;
        var a = this.iadd(f);
        return f.negative = 1, a._normSign();
      } else if (this.negative !== 0) return this.negative = 0, this.iadd(f), this.negative = 1, this._normSign();
      var c = this.cmp(f);
      if (c === 0) return this.negative = 0, this.length = 1, this.words[0] = 0, this;
      var d, m;
      c > 0 ? (d = this, m = f) : (d = f, m = this);
      for (var x2 = 0, M = 0; M < m.length; M++) a = (d.words[M] | 0) - (m.words[M] | 0) + x2, x2 = a >> 26, this.words[M] = a & 67108863;
      for (; x2 !== 0 && M < d.length; M++) a = (d.words[M] | 0) + x2, x2 = a >> 26, this.words[M] = a & 67108863;
      if (x2 === 0 && M < d.length && d !== this) for (; M < d.length; M++) this.words[M] = d.words[M];
      return this.length = Math.max(this.length, M), d !== this && (this.negative = 1), this._strip();
    }, o.prototype.sub = function(f) {
      return this.clone().isub(f);
    };
    function U(b, f, a) {
      a.negative = f.negative ^ b.negative;
      var c = b.length + f.length | 0;
      a.length = c, c = c - 1 | 0;
      var d = b.words[0] | 0, m = f.words[0] | 0, x2 = d * m, M = x2 & 67108863, l = x2 / 67108864 | 0;
      a.words[0] = M;
      for (var s = 1; s < c; s++) {
        for (var g = l >>> 26, k = l & 67108863, u = Math.min(s, f.length - 1), E = Math.max(0, s - b.length + 1); E <= u; E++) {
          var _ = s - E | 0;
          d = b.words[_] | 0, m = f.words[E] | 0, x2 = d * m + k, g += x2 / 67108864 | 0, k = x2 & 67108863;
        }
        a.words[s] = k | 0, l = g | 0;
      }
      return l !== 0 ? a.words[s] = l | 0 : a.length--, a._strip();
    }
    var J = function(f, a, c) {
      var d = f.words, m = a.words, x2 = c.words, M = 0, l, s, g, k = d[0] | 0, u = k & 8191, E = k >>> 13, _ = d[1] | 0, B = _ & 8191, R = _ >>> 13, T = d[2] | 0, P = T & 8191, O = T >>> 13, Ct = d[3] | 0, D = Ct & 8191, q = Ct >>> 13, De = d[4] | 0, X = De & 8191, Z = De >>> 13, Fe = d[5] | 0, $ = Fe & 8191, tt = Fe >>> 13, Te = d[6] | 0, et = Te & 8191, rt = Te >>> 13, Ue = d[7] | 0, it = Ue & 8191, nt = Ue >>> 13, ke = d[8] | 0, ft = ke & 8191, ot = ke >>> 13, qe = d[9] | 0, st = qe & 8191, at = qe >>> 13, Ke = m[0] | 0, ut = Ke & 8191, ht = Ke >>> 13, He = m[1] | 0, ct = He & 8191, lt = He >>> 13, Le = m[2] | 0, dt = Le & 8191, pt = Le >>> 13, ze = m[3] | 0, vt = ze & 8191, gt = ze >>> 13, je = m[4] | 0, mt = je & 8191, At = je >>> 13, Qe = m[5] | 0, bt = Qe & 8191, yt = Qe >>> 13, Je = m[6] | 0, wt = Je & 8191, xt = Je >>> 13, Ge = m[7] | 0, Mt = Ge & 8191, Et = Ge >>> 13, Ye = m[8] | 0, St = Ye & 8191, Nt = Ye >>> 13, Ve = m[9] | 0, It = Ve & 8191, _t = Ve >>> 13;
      c.negative = f.negative ^ a.negative, c.length = 19, l = Math.imul(u, ut), s = Math.imul(u, ht), s = s + Math.imul(E, ut) | 0, g = Math.imul(E, ht);
      var Me = (M + l | 0) + ((s & 8191) << 13) | 0;
      M = (g + (s >>> 13) | 0) + (Me >>> 26) | 0, Me &= 67108863, l = Math.imul(B, ut), s = Math.imul(B, ht), s = s + Math.imul(R, ut) | 0, g = Math.imul(R, ht), l = l + Math.imul(u, ct) | 0, s = s + Math.imul(u, lt) | 0, s = s + Math.imul(E, ct) | 0, g = g + Math.imul(E, lt) | 0;
      var Ee = (M + l | 0) + ((s & 8191) << 13) | 0;
      M = (g + (s >>> 13) | 0) + (Ee >>> 26) | 0, Ee &= 67108863, l = Math.imul(P, ut), s = Math.imul(P, ht), s = s + Math.imul(O, ut) | 0, g = Math.imul(O, ht), l = l + Math.imul(B, ct) | 0, s = s + Math.imul(B, lt) | 0, s = s + Math.imul(R, ct) | 0, g = g + Math.imul(R, lt) | 0, l = l + Math.imul(u, dt) | 0, s = s + Math.imul(u, pt) | 0, s = s + Math.imul(E, dt) | 0, g = g + Math.imul(E, pt) | 0;
      var Se = (M + l | 0) + ((s & 8191) << 13) | 0;
      M = (g + (s >>> 13) | 0) + (Se >>> 26) | 0, Se &= 67108863, l = Math.imul(D, ut), s = Math.imul(D, ht), s = s + Math.imul(q, ut) | 0, g = Math.imul(q, ht), l = l + Math.imul(P, ct) | 0, s = s + Math.imul(P, lt) | 0, s = s + Math.imul(O, ct) | 0, g = g + Math.imul(O, lt) | 0, l = l + Math.imul(B, dt) | 0, s = s + Math.imul(B, pt) | 0, s = s + Math.imul(R, dt) | 0, g = g + Math.imul(R, pt) | 0, l = l + Math.imul(u, vt) | 0, s = s + Math.imul(u, gt) | 0, s = s + Math.imul(E, vt) | 0, g = g + Math.imul(E, gt) | 0;
      var Ne = (M + l | 0) + ((s & 8191) << 13) | 0;
      M = (g + (s >>> 13) | 0) + (Ne >>> 26) | 0, Ne &= 67108863, l = Math.imul(X, ut), s = Math.imul(X, ht), s = s + Math.imul(Z, ut) | 0, g = Math.imul(Z, ht), l = l + Math.imul(D, ct) | 0, s = s + Math.imul(D, lt) | 0, s = s + Math.imul(q, ct) | 0, g = g + Math.imul(q, lt) | 0, l = l + Math.imul(P, dt) | 0, s = s + Math.imul(P, pt) | 0, s = s + Math.imul(O, dt) | 0, g = g + Math.imul(O, pt) | 0, l = l + Math.imul(B, vt) | 0, s = s + Math.imul(B, gt) | 0, s = s + Math.imul(R, vt) | 0, g = g + Math.imul(R, gt) | 0, l = l + Math.imul(u, mt) | 0, s = s + Math.imul(u, At) | 0, s = s + Math.imul(E, mt) | 0, g = g + Math.imul(E, At) | 0;
      var Ie = (M + l | 0) + ((s & 8191) << 13) | 0;
      M = (g + (s >>> 13) | 0) + (Ie >>> 26) | 0, Ie &= 67108863, l = Math.imul($, ut), s = Math.imul($, ht), s = s + Math.imul(tt, ut) | 0, g = Math.imul(tt, ht), l = l + Math.imul(X, ct) | 0, s = s + Math.imul(X, lt) | 0, s = s + Math.imul(Z, ct) | 0, g = g + Math.imul(Z, lt) | 0, l = l + Math.imul(D, dt) | 0, s = s + Math.imul(D, pt) | 0, s = s + Math.imul(q, dt) | 0, g = g + Math.imul(q, pt) | 0, l = l + Math.imul(P, vt) | 0, s = s + Math.imul(P, gt) | 0, s = s + Math.imul(O, vt) | 0, g = g + Math.imul(O, gt) | 0, l = l + Math.imul(B, mt) | 0, s = s + Math.imul(B, At) | 0, s = s + Math.imul(R, mt) | 0, g = g + Math.imul(R, At) | 0, l = l + Math.imul(u, bt) | 0, s = s + Math.imul(u, yt) | 0, s = s + Math.imul(E, bt) | 0, g = g + Math.imul(E, yt) | 0;
      var $r = (M + l | 0) + ((s & 8191) << 13) | 0;
      M = (g + (s >>> 13) | 0) + ($r >>> 26) | 0, $r &= 67108863, l = Math.imul(et, ut), s = Math.imul(et, ht), s = s + Math.imul(rt, ut) | 0, g = Math.imul(rt, ht), l = l + Math.imul($, ct) | 0, s = s + Math.imul($, lt) | 0, s = s + Math.imul(tt, ct) | 0, g = g + Math.imul(tt, lt) | 0, l = l + Math.imul(X, dt) | 0, s = s + Math.imul(X, pt) | 0, s = s + Math.imul(Z, dt) | 0, g = g + Math.imul(Z, pt) | 0, l = l + Math.imul(D, vt) | 0, s = s + Math.imul(D, gt) | 0, s = s + Math.imul(q, vt) | 0, g = g + Math.imul(q, gt) | 0, l = l + Math.imul(P, mt) | 0, s = s + Math.imul(P, At) | 0, s = s + Math.imul(O, mt) | 0, g = g + Math.imul(O, At) | 0, l = l + Math.imul(B, bt) | 0, s = s + Math.imul(B, yt) | 0, s = s + Math.imul(R, bt) | 0, g = g + Math.imul(R, yt) | 0, l = l + Math.imul(u, wt) | 0, s = s + Math.imul(u, xt) | 0, s = s + Math.imul(E, wt) | 0, g = g + Math.imul(E, xt) | 0;
      var ti = (M + l | 0) + ((s & 8191) << 13) | 0;
      M = (g + (s >>> 13) | 0) + (ti >>> 26) | 0, ti &= 67108863, l = Math.imul(it, ut), s = Math.imul(it, ht), s = s + Math.imul(nt, ut) | 0, g = Math.imul(nt, ht), l = l + Math.imul(et, ct) | 0, s = s + Math.imul(et, lt) | 0, s = s + Math.imul(rt, ct) | 0, g = g + Math.imul(rt, lt) | 0, l = l + Math.imul($, dt) | 0, s = s + Math.imul($, pt) | 0, s = s + Math.imul(tt, dt) | 0, g = g + Math.imul(tt, pt) | 0, l = l + Math.imul(X, vt) | 0, s = s + Math.imul(X, gt) | 0, s = s + Math.imul(Z, vt) | 0, g = g + Math.imul(Z, gt) | 0, l = l + Math.imul(D, mt) | 0, s = s + Math.imul(D, At) | 0, s = s + Math.imul(q, mt) | 0, g = g + Math.imul(q, At) | 0, l = l + Math.imul(P, bt) | 0, s = s + Math.imul(P, yt) | 0, s = s + Math.imul(O, bt) | 0, g = g + Math.imul(O, yt) | 0, l = l + Math.imul(B, wt) | 0, s = s + Math.imul(B, xt) | 0, s = s + Math.imul(R, wt) | 0, g = g + Math.imul(R, xt) | 0, l = l + Math.imul(u, Mt) | 0, s = s + Math.imul(u, Et) | 0, s = s + Math.imul(E, Mt) | 0, g = g + Math.imul(E, Et) | 0;
      var ei = (M + l | 0) + ((s & 8191) << 13) | 0;
      M = (g + (s >>> 13) | 0) + (ei >>> 26) | 0, ei &= 67108863, l = Math.imul(ft, ut), s = Math.imul(ft, ht), s = s + Math.imul(ot, ut) | 0, g = Math.imul(ot, ht), l = l + Math.imul(it, ct) | 0, s = s + Math.imul(it, lt) | 0, s = s + Math.imul(nt, ct) | 0, g = g + Math.imul(nt, lt) | 0, l = l + Math.imul(et, dt) | 0, s = s + Math.imul(et, pt) | 0, s = s + Math.imul(rt, dt) | 0, g = g + Math.imul(rt, pt) | 0, l = l + Math.imul($, vt) | 0, s = s + Math.imul($, gt) | 0, s = s + Math.imul(tt, vt) | 0, g = g + Math.imul(tt, gt) | 0, l = l + Math.imul(X, mt) | 0, s = s + Math.imul(X, At) | 0, s = s + Math.imul(Z, mt) | 0, g = g + Math.imul(Z, At) | 0, l = l + Math.imul(D, bt) | 0, s = s + Math.imul(D, yt) | 0, s = s + Math.imul(q, bt) | 0, g = g + Math.imul(q, yt) | 0, l = l + Math.imul(P, wt) | 0, s = s + Math.imul(P, xt) | 0, s = s + Math.imul(O, wt) | 0, g = g + Math.imul(O, xt) | 0, l = l + Math.imul(B, Mt) | 0, s = s + Math.imul(B, Et) | 0, s = s + Math.imul(R, Mt) | 0, g = g + Math.imul(R, Et) | 0, l = l + Math.imul(u, St) | 0, s = s + Math.imul(u, Nt) | 0, s = s + Math.imul(E, St) | 0, g = g + Math.imul(E, Nt) | 0;
      var ri = (M + l | 0) + ((s & 8191) << 13) | 0;
      M = (g + (s >>> 13) | 0) + (ri >>> 26) | 0, ri &= 67108863, l = Math.imul(st, ut), s = Math.imul(st, ht), s = s + Math.imul(at, ut) | 0, g = Math.imul(at, ht), l = l + Math.imul(ft, ct) | 0, s = s + Math.imul(ft, lt) | 0, s = s + Math.imul(ot, ct) | 0, g = g + Math.imul(ot, lt) | 0, l = l + Math.imul(it, dt) | 0, s = s + Math.imul(it, pt) | 0, s = s + Math.imul(nt, dt) | 0, g = g + Math.imul(nt, pt) | 0, l = l + Math.imul(et, vt) | 0, s = s + Math.imul(et, gt) | 0, s = s + Math.imul(rt, vt) | 0, g = g + Math.imul(rt, gt) | 0, l = l + Math.imul($, mt) | 0, s = s + Math.imul($, At) | 0, s = s + Math.imul(tt, mt) | 0, g = g + Math.imul(tt, At) | 0, l = l + Math.imul(X, bt) | 0, s = s + Math.imul(X, yt) | 0, s = s + Math.imul(Z, bt) | 0, g = g + Math.imul(Z, yt) | 0, l = l + Math.imul(D, wt) | 0, s = s + Math.imul(D, xt) | 0, s = s + Math.imul(q, wt) | 0, g = g + Math.imul(q, xt) | 0, l = l + Math.imul(P, Mt) | 0, s = s + Math.imul(P, Et) | 0, s = s + Math.imul(O, Mt) | 0, g = g + Math.imul(O, Et) | 0, l = l + Math.imul(B, St) | 0, s = s + Math.imul(B, Nt) | 0, s = s + Math.imul(R, St) | 0, g = g + Math.imul(R, Nt) | 0, l = l + Math.imul(u, It) | 0, s = s + Math.imul(u, _t) | 0, s = s + Math.imul(E, It) | 0, g = g + Math.imul(E, _t) | 0;
      var ii = (M + l | 0) + ((s & 8191) << 13) | 0;
      M = (g + (s >>> 13) | 0) + (ii >>> 26) | 0, ii &= 67108863, l = Math.imul(st, ct), s = Math.imul(st, lt), s = s + Math.imul(at, ct) | 0, g = Math.imul(at, lt), l = l + Math.imul(ft, dt) | 0, s = s + Math.imul(ft, pt) | 0, s = s + Math.imul(ot, dt) | 0, g = g + Math.imul(ot, pt) | 0, l = l + Math.imul(it, vt) | 0, s = s + Math.imul(it, gt) | 0, s = s + Math.imul(nt, vt) | 0, g = g + Math.imul(nt, gt) | 0, l = l + Math.imul(et, mt) | 0, s = s + Math.imul(et, At) | 0, s = s + Math.imul(rt, mt) | 0, g = g + Math.imul(rt, At) | 0, l = l + Math.imul($, bt) | 0, s = s + Math.imul($, yt) | 0, s = s + Math.imul(tt, bt) | 0, g = g + Math.imul(tt, yt) | 0, l = l + Math.imul(X, wt) | 0, s = s + Math.imul(X, xt) | 0, s = s + Math.imul(Z, wt) | 0, g = g + Math.imul(Z, xt) | 0, l = l + Math.imul(D, Mt) | 0, s = s + Math.imul(D, Et) | 0, s = s + Math.imul(q, Mt) | 0, g = g + Math.imul(q, Et) | 0, l = l + Math.imul(P, St) | 0, s = s + Math.imul(P, Nt) | 0, s = s + Math.imul(O, St) | 0, g = g + Math.imul(O, Nt) | 0, l = l + Math.imul(B, It) | 0, s = s + Math.imul(B, _t) | 0, s = s + Math.imul(R, It) | 0, g = g + Math.imul(R, _t) | 0;
      var ni = (M + l | 0) + ((s & 8191) << 13) | 0;
      M = (g + (s >>> 13) | 0) + (ni >>> 26) | 0, ni &= 67108863, l = Math.imul(st, dt), s = Math.imul(st, pt), s = s + Math.imul(at, dt) | 0, g = Math.imul(at, pt), l = l + Math.imul(ft, vt) | 0, s = s + Math.imul(ft, gt) | 0, s = s + Math.imul(ot, vt) | 0, g = g + Math.imul(ot, gt) | 0, l = l + Math.imul(it, mt) | 0, s = s + Math.imul(it, At) | 0, s = s + Math.imul(nt, mt) | 0, g = g + Math.imul(nt, At) | 0, l = l + Math.imul(et, bt) | 0, s = s + Math.imul(et, yt) | 0, s = s + Math.imul(rt, bt) | 0, g = g + Math.imul(rt, yt) | 0, l = l + Math.imul($, wt) | 0, s = s + Math.imul($, xt) | 0, s = s + Math.imul(tt, wt) | 0, g = g + Math.imul(tt, xt) | 0, l = l + Math.imul(X, Mt) | 0, s = s + Math.imul(X, Et) | 0, s = s + Math.imul(Z, Mt) | 0, g = g + Math.imul(Z, Et) | 0, l = l + Math.imul(D, St) | 0, s = s + Math.imul(D, Nt) | 0, s = s + Math.imul(q, St) | 0, g = g + Math.imul(q, Nt) | 0, l = l + Math.imul(P, It) | 0, s = s + Math.imul(P, _t) | 0, s = s + Math.imul(O, It) | 0, g = g + Math.imul(O, _t) | 0;
      var fi = (M + l | 0) + ((s & 8191) << 13) | 0;
      M = (g + (s >>> 13) | 0) + (fi >>> 26) | 0, fi &= 67108863, l = Math.imul(st, vt), s = Math.imul(st, gt), s = s + Math.imul(at, vt) | 0, g = Math.imul(at, gt), l = l + Math.imul(ft, mt) | 0, s = s + Math.imul(ft, At) | 0, s = s + Math.imul(ot, mt) | 0, g = g + Math.imul(ot, At) | 0, l = l + Math.imul(it, bt) | 0, s = s + Math.imul(it, yt) | 0, s = s + Math.imul(nt, bt) | 0, g = g + Math.imul(nt, yt) | 0, l = l + Math.imul(et, wt) | 0, s = s + Math.imul(et, xt) | 0, s = s + Math.imul(rt, wt) | 0, g = g + Math.imul(rt, xt) | 0, l = l + Math.imul($, Mt) | 0, s = s + Math.imul($, Et) | 0, s = s + Math.imul(tt, Mt) | 0, g = g + Math.imul(tt, Et) | 0, l = l + Math.imul(X, St) | 0, s = s + Math.imul(X, Nt) | 0, s = s + Math.imul(Z, St) | 0, g = g + Math.imul(Z, Nt) | 0, l = l + Math.imul(D, It) | 0, s = s + Math.imul(D, _t) | 0, s = s + Math.imul(q, It) | 0, g = g + Math.imul(q, _t) | 0;
      var oi = (M + l | 0) + ((s & 8191) << 13) | 0;
      M = (g + (s >>> 13) | 0) + (oi >>> 26) | 0, oi &= 67108863, l = Math.imul(st, mt), s = Math.imul(st, At), s = s + Math.imul(at, mt) | 0, g = Math.imul(at, At), l = l + Math.imul(ft, bt) | 0, s = s + Math.imul(ft, yt) | 0, s = s + Math.imul(ot, bt) | 0, g = g + Math.imul(ot, yt) | 0, l = l + Math.imul(it, wt) | 0, s = s + Math.imul(it, xt) | 0, s = s + Math.imul(nt, wt) | 0, g = g + Math.imul(nt, xt) | 0, l = l + Math.imul(et, Mt) | 0, s = s + Math.imul(et, Et) | 0, s = s + Math.imul(rt, Mt) | 0, g = g + Math.imul(rt, Et) | 0, l = l + Math.imul($, St) | 0, s = s + Math.imul($, Nt) | 0, s = s + Math.imul(tt, St) | 0, g = g + Math.imul(tt, Nt) | 0, l = l + Math.imul(X, It) | 0, s = s + Math.imul(X, _t) | 0, s = s + Math.imul(Z, It) | 0, g = g + Math.imul(Z, _t) | 0;
      var si = (M + l | 0) + ((s & 8191) << 13) | 0;
      M = (g + (s >>> 13) | 0) + (si >>> 26) | 0, si &= 67108863, l = Math.imul(st, bt), s = Math.imul(st, yt), s = s + Math.imul(at, bt) | 0, g = Math.imul(at, yt), l = l + Math.imul(ft, wt) | 0, s = s + Math.imul(ft, xt) | 0, s = s + Math.imul(ot, wt) | 0, g = g + Math.imul(ot, xt) | 0, l = l + Math.imul(it, Mt) | 0, s = s + Math.imul(it, Et) | 0, s = s + Math.imul(nt, Mt) | 0, g = g + Math.imul(nt, Et) | 0, l = l + Math.imul(et, St) | 0, s = s + Math.imul(et, Nt) | 0, s = s + Math.imul(rt, St) | 0, g = g + Math.imul(rt, Nt) | 0, l = l + Math.imul($, It) | 0, s = s + Math.imul($, _t) | 0, s = s + Math.imul(tt, It) | 0, g = g + Math.imul(tt, _t) | 0;
      var ai = (M + l | 0) + ((s & 8191) << 13) | 0;
      M = (g + (s >>> 13) | 0) + (ai >>> 26) | 0, ai &= 67108863, l = Math.imul(st, wt), s = Math.imul(st, xt), s = s + Math.imul(at, wt) | 0, g = Math.imul(at, xt), l = l + Math.imul(ft, Mt) | 0, s = s + Math.imul(ft, Et) | 0, s = s + Math.imul(ot, Mt) | 0, g = g + Math.imul(ot, Et) | 0, l = l + Math.imul(it, St) | 0, s = s + Math.imul(it, Nt) | 0, s = s + Math.imul(nt, St) | 0, g = g + Math.imul(nt, Nt) | 0, l = l + Math.imul(et, It) | 0, s = s + Math.imul(et, _t) | 0, s = s + Math.imul(rt, It) | 0, g = g + Math.imul(rt, _t) | 0;
      var ui = (M + l | 0) + ((s & 8191) << 13) | 0;
      M = (g + (s >>> 13) | 0) + (ui >>> 26) | 0, ui &= 67108863, l = Math.imul(st, Mt), s = Math.imul(st, Et), s = s + Math.imul(at, Mt) | 0, g = Math.imul(at, Et), l = l + Math.imul(ft, St) | 0, s = s + Math.imul(ft, Nt) | 0, s = s + Math.imul(ot, St) | 0, g = g + Math.imul(ot, Nt) | 0, l = l + Math.imul(it, It) | 0, s = s + Math.imul(it, _t) | 0, s = s + Math.imul(nt, It) | 0, g = g + Math.imul(nt, _t) | 0;
      var hi = (M + l | 0) + ((s & 8191) << 13) | 0;
      M = (g + (s >>> 13) | 0) + (hi >>> 26) | 0, hi &= 67108863, l = Math.imul(st, St), s = Math.imul(st, Nt), s = s + Math.imul(at, St) | 0, g = Math.imul(at, Nt), l = l + Math.imul(ft, It) | 0, s = s + Math.imul(ft, _t) | 0, s = s + Math.imul(ot, It) | 0, g = g + Math.imul(ot, _t) | 0;
      var ci = (M + l | 0) + ((s & 8191) << 13) | 0;
      M = (g + (s >>> 13) | 0) + (ci >>> 26) | 0, ci &= 67108863, l = Math.imul(st, It), s = Math.imul(st, _t), s = s + Math.imul(at, It) | 0, g = Math.imul(at, _t);
      var li = (M + l | 0) + ((s & 8191) << 13) | 0;
      return M = (g + (s >>> 13) | 0) + (li >>> 26) | 0, li &= 67108863, x2[0] = Me, x2[1] = Ee, x2[2] = Se, x2[3] = Ne, x2[4] = Ie, x2[5] = $r, x2[6] = ti, x2[7] = ei, x2[8] = ri, x2[9] = ii, x2[10] = ni, x2[11] = fi, x2[12] = oi, x2[13] = si, x2[14] = ai, x2[15] = ui, x2[16] = hi, x2[17] = ci, x2[18] = li, M !== 0 && (x2[19] = M, c.length++), c;
    };
    Math.imul || (J = U);
    function Bt(b, f, a) {
      a.negative = f.negative ^ b.negative, a.length = b.length + f.length;
      for (var c = 0, d = 0, m = 0; m < a.length - 1; m++) {
        var x2 = d;
        d = 0;
        for (var M = c & 67108863, l = Math.min(m, f.length - 1), s = Math.max(0, m - b.length + 1); s <= l; s++) {
          var g = m - s, k = b.words[g] | 0, u = f.words[s] | 0, E = k * u, _ = E & 67108863;
          x2 = x2 + (E / 67108864 | 0) | 0, _ = _ + M | 0, M = _ & 67108863, x2 = x2 + (_ >>> 26) | 0, d += x2 >>> 26, x2 &= 67108863;
        }
        a.words[m] = M, c = x2, x2 = d;
      }
      return c !== 0 ? a.words[m] = c : a.length--, a._strip();
    }
    function G(b, f, a) {
      return Bt(b, f, a);
    }
    o.prototype.mulTo = function(f, a) {
      var c, d = this.length + f.length;
      return this.length === 10 && f.length === 10 ? c = J(this, f, a) : d < 63 ? c = U(this, f, a) : d < 1024 ? c = Bt(this, f, a) : c = G(this, f, a), c;
    }, o.prototype.mul = function(f) {
      var a = new o(null);
      return a.words = new Array(this.length + f.length), this.mulTo(f, a);
    }, o.prototype.mulf = function(f) {
      var a = new o(null);
      return a.words = new Array(this.length + f.length), G(this, f, a);
    }, o.prototype.imul = function(f) {
      return this.clone().mulTo(f, this);
    }, o.prototype.imuln = function(f) {
      var a = f < 0;
      a && (f = -f), i(typeof f == "number"), i(f < 67108864);
      for (var c = 0, d = 0; d < this.length; d++) {
        var m = (this.words[d] | 0) * f, x2 = (m & 67108863) + (c & 67108863);
        c >>= 26, c += m / 67108864 | 0, c += x2 >>> 26, this.words[d] = x2 & 67108863;
      }
      return c !== 0 && (this.words[d] = c, this.length++), a ? this.ineg() : this;
    }, o.prototype.muln = function(f) {
      return this.clone().imuln(f);
    }, o.prototype.sqr = function() {
      return this.mul(this);
    }, o.prototype.isqr = function() {
      return this.imul(this.clone());
    }, o.prototype.pow = function(f) {
      var a = F(f);
      if (a.length === 0) return new o(1);
      for (var c = this, d = 0; d < a.length && a[d] === 0; d++, c = c.sqr()) ;
      if (++d < a.length) for (var m = c.sqr(); d < a.length; d++, m = m.sqr()) a[d] !== 0 && (c = c.mul(m));
      return c;
    }, o.prototype.iushln = function(f) {
      i(typeof f == "number" && f >= 0);
      var a = f % 26, c = (f - a) / 26, d = 67108863 >>> 26 - a << 26 - a, m;
      if (a !== 0) {
        var x2 = 0;
        for (m = 0; m < this.length; m++) {
          var M = this.words[m] & d, l = (this.words[m] | 0) - M << a;
          this.words[m] = l | x2, x2 = M >>> 26 - a;
        }
        x2 && (this.words[m] = x2, this.length++);
      }
      if (c !== 0) {
        for (m = this.length - 1; m >= 0; m--) this.words[m + c] = this.words[m];
        for (m = 0; m < c; m++) this.words[m] = 0;
        this.length += c;
      }
      return this._strip();
    }, o.prototype.ishln = function(f) {
      return i(this.negative === 0), this.iushln(f);
    }, o.prototype.iushrn = function(f, a, c) {
      i(typeof f == "number" && f >= 0);
      var d;
      a ? d = (a - a % 26) / 26 : d = 0;
      var m = f % 26, x2 = Math.min((f - m) / 26, this.length), M = 67108863 ^ 67108863 >>> m << m, l = c;
      if (d -= x2, d = Math.max(0, d), l) {
        for (var s = 0; s < x2; s++) l.words[s] = this.words[s];
        l.length = x2;
      }
      if (x2 !== 0) if (this.length > x2) for (this.length -= x2, s = 0; s < this.length; s++) this.words[s] = this.words[s + x2];
      else this.words[0] = 0, this.length = 1;
      var g = 0;
      for (s = this.length - 1; s >= 0 && (g !== 0 || s >= d); s--) {
        var k = this.words[s] | 0;
        this.words[s] = g << 26 - m | k >>> m, g = k & M;
      }
      return l && g !== 0 && (l.words[l.length++] = g), this.length === 0 && (this.words[0] = 0, this.length = 1), this._strip();
    }, o.prototype.ishrn = function(f, a, c) {
      return i(this.negative === 0), this.iushrn(f, a, c);
    }, o.prototype.shln = function(f) {
      return this.clone().ishln(f);
    }, o.prototype.ushln = function(f) {
      return this.clone().iushln(f);
    }, o.prototype.shrn = function(f) {
      return this.clone().ishrn(f);
    }, o.prototype.ushrn = function(f) {
      return this.clone().iushrn(f);
    }, o.prototype.testn = function(f) {
      i(typeof f == "number" && f >= 0);
      var a = f % 26, c = (f - a) / 26, d = 1 << a;
      if (this.length <= c) return false;
      var m = this.words[c];
      return !!(m & d);
    }, o.prototype.imaskn = function(f) {
      i(typeof f == "number" && f >= 0);
      var a = f % 26, c = (f - a) / 26;
      if (i(this.negative === 0, "imaskn works only with positive numbers"), this.length <= c) return this;
      if (a !== 0 && c++, this.length = Math.min(c, this.length), a !== 0) {
        var d = 67108863 ^ 67108863 >>> a << a;
        this.words[this.length - 1] &= d;
      }
      return this._strip();
    }, o.prototype.maskn = function(f) {
      return this.clone().imaskn(f);
    }, o.prototype.iaddn = function(f) {
      return i(typeof f == "number"), i(f < 67108864), f < 0 ? this.isubn(-f) : this.negative !== 0 ? this.length === 1 && (this.words[0] | 0) <= f ? (this.words[0] = f - (this.words[0] | 0), this.negative = 0, this) : (this.negative = 0, this.isubn(f), this.negative = 1, this) : this._iaddn(f);
    }, o.prototype._iaddn = function(f) {
      this.words[0] += f;
      for (var a = 0; a < this.length && this.words[a] >= 67108864; a++) this.words[a] -= 67108864, a === this.length - 1 ? this.words[a + 1] = 1 : this.words[a + 1]++;
      return this.length = Math.max(this.length, a + 1), this;
    }, o.prototype.isubn = function(f) {
      if (i(typeof f == "number"), i(f < 67108864), f < 0) return this.iaddn(-f);
      if (this.negative !== 0) return this.negative = 0, this.iaddn(f), this.negative = 1, this;
      if (this.words[0] -= f, this.length === 1 && this.words[0] < 0) this.words[0] = -this.words[0], this.negative = 1;
      else for (var a = 0; a < this.length && this.words[a] < 0; a++) this.words[a] += 67108864, this.words[a + 1] -= 1;
      return this._strip();
    }, o.prototype.addn = function(f) {
      return this.clone().iaddn(f);
    }, o.prototype.subn = function(f) {
      return this.clone().isubn(f);
    }, o.prototype.iabs = function() {
      return this.negative = 0, this;
    }, o.prototype.abs = function() {
      return this.clone().iabs();
    }, o.prototype._ishlnsubmul = function(f, a, c) {
      var d = f.length + c, m;
      this._expand(d);
      var x2, M = 0;
      for (m = 0; m < f.length; m++) {
        x2 = (this.words[m + c] | 0) + M;
        var l = (f.words[m] | 0) * a;
        x2 -= l & 67108863, M = (x2 >> 26) - (l / 67108864 | 0), this.words[m + c] = x2 & 67108863;
      }
      for (; m < this.length - c; m++) x2 = (this.words[m + c] | 0) + M, M = x2 >> 26, this.words[m + c] = x2 & 67108863;
      if (M === 0) return this._strip();
      for (i(M === -1), M = 0, m = 0; m < this.length; m++) x2 = -(this.words[m] | 0) + M, M = x2 >> 26, this.words[m] = x2 & 67108863;
      return this.negative = 1, this._strip();
    }, o.prototype._wordDiv = function(f, a) {
      var c = this.length - f.length, d = this.clone(), m = f, x2 = m.words[m.length - 1] | 0, M = this._countBits(x2);
      c = 26 - M, c !== 0 && (m = m.ushln(c), d.iushln(c), x2 = m.words[m.length - 1] | 0);
      var l = d.length - m.length, s;
      if (a !== "mod") {
        s = new o(null), s.length = l + 1, s.words = new Array(s.length);
        for (var g = 0; g < s.length; g++) s.words[g] = 0;
      }
      var k = d.clone()._ishlnsubmul(m, 1, l);
      k.negative === 0 && (d = k, s && (s.words[l] = 1));
      for (var u = l - 1; u >= 0; u--) {
        var E = (d.words[m.length + u] | 0) * 67108864 + (d.words[m.length + u - 1] | 0);
        for (E = Math.min(E / x2 | 0, 67108863), d._ishlnsubmul(m, E, u); d.negative !== 0; ) E--, d.negative = 0, d._ishlnsubmul(m, 1, u), d.isZero() || (d.negative ^= 1);
        s && (s.words[u] = E);
      }
      return s && s._strip(), d._strip(), a !== "div" && c !== 0 && d.iushrn(c), { div: s || null, mod: d };
    }, o.prototype.divmod = function(f, a, c) {
      if (i(!f.isZero()), this.isZero()) return { div: new o(0), mod: new o(0) };
      var d, m, x2;
      return this.negative !== 0 && f.negative === 0 ? (x2 = this.neg().divmod(f, a), a !== "mod" && (d = x2.div.neg()), a !== "div" && (m = x2.mod.neg(), c && m.negative !== 0 && m.iadd(f)), { div: d, mod: m }) : this.negative === 0 && f.negative !== 0 ? (x2 = this.divmod(f.neg(), a), a !== "mod" && (d = x2.div.neg()), { div: d, mod: x2.mod }) : this.negative & f.negative ? (x2 = this.neg().divmod(f.neg(), a), a !== "div" && (m = x2.mod.neg(), c && m.negative !== 0 && m.isub(f)), { div: x2.div, mod: m }) : f.length > this.length || this.cmp(f) < 0 ? { div: new o(0), mod: this } : f.length === 1 ? a === "div" ? { div: this.divn(f.words[0]), mod: null } : a === "mod" ? { div: null, mod: new o(this.modrn(f.words[0])) } : { div: this.divn(f.words[0]), mod: new o(this.modrn(f.words[0])) } : this._wordDiv(f, a);
    }, o.prototype.div = function(f) {
      return this.divmod(f, "div", false).div;
    }, o.prototype.mod = function(f) {
      return this.divmod(f, "mod", false).mod;
    }, o.prototype.umod = function(f) {
      return this.divmod(f, "mod", true).mod;
    }, o.prototype.divRound = function(f) {
      var a = this.divmod(f);
      if (a.mod.isZero()) return a.div;
      var c = a.div.negative !== 0 ? a.mod.isub(f) : a.mod, d = f.ushrn(1), m = f.andln(1), x2 = c.cmp(d);
      return x2 < 0 || m === 1 && x2 === 0 ? a.div : a.div.negative !== 0 ? a.div.isubn(1) : a.div.iaddn(1);
    }, o.prototype.modrn = function(f) {
      var a = f < 0;
      a && (f = -f), i(f <= 67108863);
      for (var c = (1 << 26) % f, d = 0, m = this.length - 1; m >= 0; m--) d = (c * d + (this.words[m] | 0)) % f;
      return a ? -d : d;
    }, o.prototype.modn = function(f) {
      return this.modrn(f);
    }, o.prototype.idivn = function(f) {
      var a = f < 0;
      a && (f = -f), i(f <= 67108863);
      for (var c = 0, d = this.length - 1; d >= 0; d--) {
        var m = (this.words[d] | 0) + c * 67108864;
        this.words[d] = m / f | 0, c = m % f;
      }
      return this._strip(), a ? this.ineg() : this;
    }, o.prototype.divn = function(f) {
      return this.clone().idivn(f);
    }, o.prototype.egcd = function(f) {
      i(f.negative === 0), i(!f.isZero());
      var a = this, c = f.clone();
      a.negative !== 0 ? a = a.umod(f) : a = a.clone();
      for (var d = new o(1), m = new o(0), x2 = new o(0), M = new o(1), l = 0; a.isEven() && c.isEven(); ) a.iushrn(1), c.iushrn(1), ++l;
      for (var s = c.clone(), g = a.clone(); !a.isZero(); ) {
        for (var k = 0, u = 1; !(a.words[0] & u) && k < 26; ++k, u <<= 1) ;
        if (k > 0) for (a.iushrn(k); k-- > 0; ) (d.isOdd() || m.isOdd()) && (d.iadd(s), m.isub(g)), d.iushrn(1), m.iushrn(1);
        for (var E = 0, _ = 1; !(c.words[0] & _) && E < 26; ++E, _ <<= 1) ;
        if (E > 0) for (c.iushrn(E); E-- > 0; ) (x2.isOdd() || M.isOdd()) && (x2.iadd(s), M.isub(g)), x2.iushrn(1), M.iushrn(1);
        a.cmp(c) >= 0 ? (a.isub(c), d.isub(x2), m.isub(M)) : (c.isub(a), x2.isub(d), M.isub(m));
      }
      return { a: x2, b: M, gcd: c.iushln(l) };
    }, o.prototype._invmp = function(f) {
      i(f.negative === 0), i(!f.isZero());
      var a = this, c = f.clone();
      a.negative !== 0 ? a = a.umod(f) : a = a.clone();
      for (var d = new o(1), m = new o(0), x2 = c.clone(); a.cmpn(1) > 0 && c.cmpn(1) > 0; ) {
        for (var M = 0, l = 1; !(a.words[0] & l) && M < 26; ++M, l <<= 1) ;
        if (M > 0) for (a.iushrn(M); M-- > 0; ) d.isOdd() && d.iadd(x2), d.iushrn(1);
        for (var s = 0, g = 1; !(c.words[0] & g) && s < 26; ++s, g <<= 1) ;
        if (s > 0) for (c.iushrn(s); s-- > 0; ) m.isOdd() && m.iadd(x2), m.iushrn(1);
        a.cmp(c) >= 0 ? (a.isub(c), d.isub(m)) : (c.isub(a), m.isub(d));
      }
      var k;
      return a.cmpn(1) === 0 ? k = d : k = m, k.cmpn(0) < 0 && k.iadd(f), k;
    }, o.prototype.gcd = function(f) {
      if (this.isZero()) return f.abs();
      if (f.isZero()) return this.abs();
      var a = this.clone(), c = f.clone();
      a.negative = 0, c.negative = 0;
      for (var d = 0; a.isEven() && c.isEven(); d++) a.iushrn(1), c.iushrn(1);
      do {
        for (; a.isEven(); ) a.iushrn(1);
        for (; c.isEven(); ) c.iushrn(1);
        var m = a.cmp(c);
        if (m < 0) {
          var x2 = a;
          a = c, c = x2;
        } else if (m === 0 || c.cmpn(1) === 0) break;
        a.isub(c);
      } while (true);
      return c.iushln(d);
    }, o.prototype.invm = function(f) {
      return this.egcd(f).a.umod(f);
    }, o.prototype.isEven = function() {
      return (this.words[0] & 1) === 0;
    }, o.prototype.isOdd = function() {
      return (this.words[0] & 1) === 1;
    }, o.prototype.andln = function(f) {
      return this.words[0] & f;
    }, o.prototype.bincn = function(f) {
      i(typeof f == "number");
      var a = f % 26, c = (f - a) / 26, d = 1 << a;
      if (this.length <= c) return this._expand(c + 1), this.words[c] |= d, this;
      for (var m = d, x2 = c; m !== 0 && x2 < this.length; x2++) {
        var M = this.words[x2] | 0;
        M += m, m = M >>> 26, M &= 67108863, this.words[x2] = M;
      }
      return m !== 0 && (this.words[x2] = m, this.length++), this;
    }, o.prototype.isZero = function() {
      return this.length === 1 && this.words[0] === 0;
    }, o.prototype.cmpn = function(f) {
      var a = f < 0;
      if (this.negative !== 0 && !a) return -1;
      if (this.negative === 0 && a) return 1;
      this._strip();
      var c;
      if (this.length > 1) c = 1;
      else {
        a && (f = -f), i(f <= 67108863, "Number is too big");
        var d = this.words[0] | 0;
        c = d === f ? 0 : d < f ? -1 : 1;
      }
      return this.negative !== 0 ? -c | 0 : c;
    }, o.prototype.cmp = function(f) {
      if (this.negative !== 0 && f.negative === 0) return -1;
      if (this.negative === 0 && f.negative !== 0) return 1;
      var a = this.ucmp(f);
      return this.negative !== 0 ? -a | 0 : a;
    }, o.prototype.ucmp = function(f) {
      if (this.length > f.length) return 1;
      if (this.length < f.length) return -1;
      for (var a = 0, c = this.length - 1; c >= 0; c--) {
        var d = this.words[c] | 0, m = f.words[c] | 0;
        if (d !== m) {
          d < m ? a = -1 : d > m && (a = 1);
          break;
        }
      }
      return a;
    }, o.prototype.gtn = function(f) {
      return this.cmpn(f) === 1;
    }, o.prototype.gt = function(f) {
      return this.cmp(f) === 1;
    }, o.prototype.gten = function(f) {
      return this.cmpn(f) >= 0;
    }, o.prototype.gte = function(f) {
      return this.cmp(f) >= 0;
    }, o.prototype.ltn = function(f) {
      return this.cmpn(f) === -1;
    }, o.prototype.lt = function(f) {
      return this.cmp(f) === -1;
    }, o.prototype.lten = function(f) {
      return this.cmpn(f) <= 0;
    }, o.prototype.lte = function(f) {
      return this.cmp(f) <= 0;
    }, o.prototype.eqn = function(f) {
      return this.cmpn(f) === 0;
    }, o.prototype.eq = function(f) {
      return this.cmp(f) === 0;
    }, o.red = function(f) {
      return new Y(f);
    }, o.prototype.toRed = function(f) {
      return i(!this.red, "Already a number in reduction context"), i(this.negative === 0, "red works only with positives"), f.convertTo(this)._forceRed(f);
    }, o.prototype.fromRed = function() {
      return i(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this);
    }, o.prototype._forceRed = function(f) {
      return this.red = f, this;
    }, o.prototype.forceRed = function(f) {
      return i(!this.red, "Already a number in reduction context"), this._forceRed(f);
    }, o.prototype.redAdd = function(f) {
      return i(this.red, "redAdd works only with red numbers"), this.red.add(this, f);
    }, o.prototype.redIAdd = function(f) {
      return i(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, f);
    }, o.prototype.redSub = function(f) {
      return i(this.red, "redSub works only with red numbers"), this.red.sub(this, f);
    }, o.prototype.redISub = function(f) {
      return i(this.red, "redISub works only with red numbers"), this.red.isub(this, f);
    }, o.prototype.redShl = function(f) {
      return i(this.red, "redShl works only with red numbers"), this.red.shl(this, f);
    }, o.prototype.redMul = function(f) {
      return i(this.red, "redMul works only with red numbers"), this.red._verify2(this, f), this.red.mul(this, f);
    }, o.prototype.redIMul = function(f) {
      return i(this.red, "redMul works only with red numbers"), this.red._verify2(this, f), this.red.imul(this, f);
    }, o.prototype.redSqr = function() {
      return i(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this);
    }, o.prototype.redISqr = function() {
      return i(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this);
    }, o.prototype.redSqrt = function() {
      return i(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this);
    }, o.prototype.redInvm = function() {
      return i(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this);
    }, o.prototype.redNeg = function() {
      return i(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this);
    }, o.prototype.redPow = function(f) {
      return i(this.red && !f.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, f);
    };
    var H = { k256: null, p224: null, p192: null, p25519: null };
    function L(b, f) {
      this.name = b, this.p = new o(f, 16), this.n = this.p.bitLength(), this.k = new o(1).iushln(this.n).isub(this.p), this.tmp = this._tmp();
    }
    L.prototype._tmp = function() {
      var f = new o(null);
      return f.words = new Array(Math.ceil(this.n / 13)), f;
    }, L.prototype.ireduce = function(f) {
      var a = f, c;
      do
        this.split(a, this.tmp), a = this.imulK(a), a = a.iadd(this.tmp), c = a.bitLength();
      while (c > this.n);
      var d = c < this.n ? -1 : a.ucmp(this.p);
      return d === 0 ? (a.words[0] = 0, a.length = 1) : d > 0 ? a.isub(this.p) : a.strip !== void 0 ? a.strip() : a._strip(), a;
    }, L.prototype.split = function(f, a) {
      f.iushrn(this.n, 0, a);
    }, L.prototype.imulK = function(f) {
      return f.imul(this.k);
    };
    function Pt() {
      L.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f");
    }
    n(Pt, L), Pt.prototype.split = function(f, a) {
      for (var c = 4194303, d = Math.min(f.length, 9), m = 0; m < d; m++) a.words[m] = f.words[m];
      if (a.length = d, f.length <= 9) {
        f.words[0] = 0, f.length = 1;
        return;
      }
      var x2 = f.words[9];
      for (a.words[a.length++] = x2 & c, m = 10; m < f.length; m++) {
        var M = f.words[m] | 0;
        f.words[m - 10] = (M & c) << 4 | x2 >>> 22, x2 = M;
      }
      x2 >>>= 22, f.words[m - 10] = x2, x2 === 0 && f.length > 10 ? f.length -= 10 : f.length -= 9;
    }, Pt.prototype.imulK = function(f) {
      f.words[f.length] = 0, f.words[f.length + 1] = 0, f.length += 2;
      for (var a = 0, c = 0; c < f.length; c++) {
        var d = f.words[c] | 0;
        a += d * 977, f.words[c] = a & 67108863, a = d * 64 + (a / 67108864 | 0);
      }
      return f.words[f.length - 1] === 0 && (f.length--, f.words[f.length - 1] === 0 && f.length--), f;
    };
    function W() {
      L.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001");
    }
    n(W, L);
    function Rt() {
      L.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff");
    }
    n(Rt, L);
    function Vt() {
      L.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed");
    }
    n(Vt, L), Vt.prototype.imulK = function(f) {
      for (var a = 0, c = 0; c < f.length; c++) {
        var d = (f.words[c] | 0) * 19 + a, m = d & 67108863;
        d >>>= 26, f.words[c] = m, a = d;
      }
      return a !== 0 && (f.words[f.length++] = a), f;
    }, o._prime = function(f) {
      if (H[f]) return H[f];
      var a;
      if (f === "k256") a = new Pt();
      else if (f === "p224") a = new W();
      else if (f === "p192") a = new Rt();
      else if (f === "p25519") a = new Vt();
      else throw new Error("Unknown prime " + f);
      return H[f] = a, a;
    };
    function Y(b) {
      if (typeof b == "string") {
        var f = o._prime(b);
        this.m = f.p, this.prime = f;
      } else i(b.gtn(1), "modulus must be greater than 1"), this.m = b, this.prime = null;
    }
    Y.prototype._verify1 = function(f) {
      i(f.negative === 0, "red works only with positives"), i(f.red, "red works only with red numbers");
    }, Y.prototype._verify2 = function(f, a) {
      i((f.negative | a.negative) === 0, "red works only with positives"), i(f.red && f.red === a.red, "red works only with red numbers");
    }, Y.prototype.imod = function(f) {
      return this.prime ? this.prime.ireduce(f)._forceRed(this) : (w(f, f.umod(this.m)._forceRed(this)), f);
    }, Y.prototype.neg = function(f) {
      return f.isZero() ? f.clone() : this.m.sub(f)._forceRed(this);
    }, Y.prototype.add = function(f, a) {
      this._verify2(f, a);
      var c = f.add(a);
      return c.cmp(this.m) >= 0 && c.isub(this.m), c._forceRed(this);
    }, Y.prototype.iadd = function(f, a) {
      this._verify2(f, a);
      var c = f.iadd(a);
      return c.cmp(this.m) >= 0 && c.isub(this.m), c;
    }, Y.prototype.sub = function(f, a) {
      this._verify2(f, a);
      var c = f.sub(a);
      return c.cmpn(0) < 0 && c.iadd(this.m), c._forceRed(this);
    }, Y.prototype.isub = function(f, a) {
      this._verify2(f, a);
      var c = f.isub(a);
      return c.cmpn(0) < 0 && c.iadd(this.m), c;
    }, Y.prototype.shl = function(f, a) {
      return this._verify1(f), this.imod(f.ushln(a));
    }, Y.prototype.imul = function(f, a) {
      return this._verify2(f, a), this.imod(f.imul(a));
    }, Y.prototype.mul = function(f, a) {
      return this._verify2(f, a), this.imod(f.mul(a));
    }, Y.prototype.isqr = function(f) {
      return this.imul(f, f.clone());
    }, Y.prototype.sqr = function(f) {
      return this.mul(f, f);
    }, Y.prototype.sqrt = function(f) {
      if (f.isZero()) return f.clone();
      var a = this.m.andln(3);
      if (i(a % 2 === 1), a === 3) {
        var c = this.m.add(new o(1)).iushrn(2);
        return this.pow(f, c);
      }
      for (var d = this.m.subn(1), m = 0; !d.isZero() && d.andln(1) === 0; ) m++, d.iushrn(1);
      i(!d.isZero());
      var x2 = new o(1).toRed(this), M = x2.redNeg(), l = this.m.subn(1).iushrn(1), s = this.m.bitLength();
      for (s = new o(2 * s * s).toRed(this); this.pow(s, l).cmp(M) !== 0; ) s.redIAdd(M);
      for (var g = this.pow(s, d), k = this.pow(f, d.addn(1).iushrn(1)), u = this.pow(f, d), E = m; u.cmp(x2) !== 0; ) {
        for (var _ = u, B = 0; _.cmp(x2) !== 0; B++) _ = _.redSqr();
        i(B < E);
        var R = this.pow(g, new o(1).iushln(E - B - 1));
        k = k.redMul(R), g = R.redSqr(), u = u.redMul(g), E = B;
      }
      return k;
    }, Y.prototype.invm = function(f) {
      var a = f._invmp(this.m);
      return a.negative !== 0 ? (a.negative = 0, this.imod(a).redNeg()) : this.imod(a);
    }, Y.prototype.pow = function(f, a) {
      if (a.isZero()) return new o(1).toRed(this);
      if (a.cmpn(1) === 0) return f.clone();
      var c = 4, d = new Array(1 << c);
      d[0] = new o(1).toRed(this), d[1] = f;
      for (var m = 2; m < d.length; m++) d[m] = this.mul(d[m - 1], f);
      var x2 = d[0], M = 0, l = 0, s = a.bitLength() % 26;
      for (s === 0 && (s = 26), m = a.length - 1; m >= 0; m--) {
        for (var g = a.words[m], k = s - 1; k >= 0; k--) {
          var u = g >> k & 1;
          if (x2 !== d[0] && (x2 = this.sqr(x2)), u === 0 && M === 0) {
            l = 0;
            continue;
          }
          M <<= 1, M |= u, l++, !(l !== c && (m !== 0 || k !== 0)) && (x2 = this.mul(x2, d[M]), l = 0, M = 0);
        }
        s = 26;
      }
      return x2;
    }, Y.prototype.convertTo = function(f) {
      var a = f.umod(this.m);
      return a === f ? a.clone() : a;
    }, Y.prototype.convertFrom = function(f) {
      var a = f.clone();
      return a.red = null, a;
    }, o.mont = function(f) {
      return new Wt(f);
    };
    function Wt(b) {
      Y.call(this, b), this.shift = this.m.bitLength(), this.shift % 26 !== 0 && (this.shift += 26 - this.shift % 26), this.r = new o(1).iushln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv = this.minv.umod(this.r), this.minv = this.r.sub(this.minv);
    }
    n(Wt, Y), Wt.prototype.convertTo = function(f) {
      return this.imod(f.ushln(this.shift));
    }, Wt.prototype.convertFrom = function(f) {
      var a = this.imod(f.mul(this.rinv));
      return a.red = null, a;
    }, Wt.prototype.imul = function(f, a) {
      if (f.isZero() || a.isZero()) return f.words[0] = 0, f.length = 1, f;
      var c = f.imul(a), d = c.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), m = c.isub(d).iushrn(this.shift), x2 = m;
      return m.cmp(this.m) >= 0 ? x2 = m.isub(this.m) : m.cmpn(0) < 0 && (x2 = m.iadd(this.m)), x2._forceRed(this);
    }, Wt.prototype.mul = function(f, a) {
      if (f.isZero() || a.isZero()) return new o(0)._forceRed(this);
      var c = f.mul(a), d = c.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), m = c.isub(d).iushrn(this.shift), x2 = m;
      return m.cmp(this.m) >= 0 ? x2 = m.isub(this.m) : m.cmpn(0) < 0 && (x2 = m.iadd(this.m)), x2._forceRed(this);
    }, Wt.prototype.invm = function(f) {
      var a = this.imod(f._invmp(this.m).mul(this.r2));
      return a._forceRed(this);
    };
  })(e, Tn);
})(Gn);
var K = Gn.exports;
var Yn = "bignumber/5.7.0";
var Fr = K.BN;
var Ae = new z(Yn);
var Ni = {};
var Vn = 9007199254740991;
function Ts(e) {
  return e != null && (V.isBigNumber(e) || typeof e == "number" && e % 1 === 0 || typeof e == "string" && !!e.match(/^-?[0-9]+$/) || Jt(e) || typeof e == "bigint" || nr(e));
}
var Wn = false;
var V = class _V {
  constructor(t, r) {
    t !== Ni && Ae.throwError("cannot call constructor directly; use BigNumber.from", z.errors.UNSUPPORTED_OPERATION, { operation: "new (BigNumber)" }), this._hex = r, this._isBigNumber = true, Object.freeze(this);
  }
  fromTwos(t) {
    return zt(j(this).fromTwos(t));
  }
  toTwos(t) {
    return zt(j(this).toTwos(t));
  }
  abs() {
    return this._hex[0] === "-" ? _V.from(this._hex.substring(1)) : this;
  }
  add(t) {
    return zt(j(this).add(j(t)));
  }
  sub(t) {
    return zt(j(this).sub(j(t)));
  }
  div(t) {
    return _V.from(t).isZero() && Zt("division-by-zero", "div"), zt(j(this).div(j(t)));
  }
  mul(t) {
    return zt(j(this).mul(j(t)));
  }
  mod(t) {
    const r = j(t);
    return r.isNeg() && Zt("division-by-zero", "mod"), zt(j(this).umod(r));
  }
  pow(t) {
    const r = j(t);
    return r.isNeg() && Zt("negative-power", "pow"), zt(j(this).pow(r));
  }
  and(t) {
    const r = j(t);
    return (this.isNegative() || r.isNeg()) && Zt("unbound-bitwise-result", "and"), zt(j(this).and(r));
  }
  or(t) {
    const r = j(t);
    return (this.isNegative() || r.isNeg()) && Zt("unbound-bitwise-result", "or"), zt(j(this).or(r));
  }
  xor(t) {
    const r = j(t);
    return (this.isNegative() || r.isNeg()) && Zt("unbound-bitwise-result", "xor"), zt(j(this).xor(r));
  }
  mask(t) {
    return (this.isNegative() || t < 0) && Zt("negative-width", "mask"), zt(j(this).maskn(t));
  }
  shl(t) {
    return (this.isNegative() || t < 0) && Zt("negative-width", "shl"), zt(j(this).shln(t));
  }
  shr(t) {
    return (this.isNegative() || t < 0) && Zt("negative-width", "shr"), zt(j(this).shrn(t));
  }
  eq(t) {
    return j(this).eq(j(t));
  }
  lt(t) {
    return j(this).lt(j(t));
  }
  lte(t) {
    return j(this).lte(j(t));
  }
  gt(t) {
    return j(this).gt(j(t));
  }
  gte(t) {
    return j(this).gte(j(t));
  }
  isNegative() {
    return this._hex[0] === "-";
  }
  isZero() {
    return j(this).isZero();
  }
  toNumber() {
    try {
      return j(this).toNumber();
    } catch {
      Zt("overflow", "toNumber", this.toString());
    }
    return null;
  }
  toBigInt() {
    try {
      return BigInt(this.toString());
    } catch {
    }
    return Ae.throwError("this platform does not support BigInt", z.errors.UNSUPPORTED_OPERATION, { value: this.toString() });
  }
  toString() {
    return arguments.length > 0 && (arguments[0] === 10 ? Wn || (Wn = true, Ae.warn("BigNumber.toString does not accept any parameters; base-10 is assumed")) : arguments[0] === 16 ? Ae.throwError("BigNumber.toString does not accept any parameters; use bigNumber.toHexString()", z.errors.UNEXPECTED_ARGUMENT, {}) : Ae.throwError("BigNumber.toString does not accept parameters", z.errors.UNEXPECTED_ARGUMENT, {})), j(this).toString(10);
  }
  toHexString() {
    return this._hex;
  }
  toJSON(t) {
    return { type: "BigNumber", hex: this.toHexString() };
  }
  static from(t) {
    if (t instanceof _V) return t;
    if (typeof t == "string") return t.match(/^-?0x[0-9a-f]+$/i) ? new _V(Ni, mr(t)) : t.match(/^-?[0-9]+$/) ? new _V(Ni, mr(new Fr(t))) : Ae.throwArgumentError("invalid BigNumber string", "value", t);
    if (typeof t == "number") return t % 1 && Zt("underflow", "BigNumber.from", t), (t >= Vn || t <= -Vn) && Zt("overflow", "BigNumber.from", t), _V.from(String(t));
    const r = t;
    if (typeof r == "bigint") return _V.from(r.toString());
    if (nr(r)) return _V.from(Kt(r));
    if (r) if (r.toHexString) {
      const i = r.toHexString();
      if (typeof i == "string") return _V.from(i);
    } else {
      let i = r._hex;
      if (i == null && r.type === "BigNumber" && (i = r.hex), typeof i == "string" && (Jt(i) || i[0] === "-" && Jt(i.substring(1)))) return _V.from(i);
    }
    return Ae.throwArgumentError("invalid BigNumber value", "value", t);
  }
  static isBigNumber(t) {
    return !!(t && t._isBigNumber);
  }
};
function mr(e) {
  if (typeof e != "string") return mr(e.toString(16));
  if (e[0] === "-") return e = e.substring(1), e[0] === "-" && Ae.throwArgumentError("invalid hex", "value", e), e = mr(e), e === "0x00" ? e : "-" + e;
  if (e.substring(0, 2) !== "0x" && (e = "0x" + e), e === "0x") return "0x00";
  for (e.length % 2 && (e = "0x0" + e.substring(2)); e.length > 4 && e.substring(0, 4) === "0x00"; ) e = "0x" + e.substring(4);
  return e;
}
function zt(e) {
  return V.from(mr(e));
}
function j(e) {
  const t = V.from(e).toHexString();
  return t[0] === "-" ? new Fr("-" + t.substring(3), 16) : new Fr(t.substring(2), 16);
}
function Zt(e, t, r) {
  const i = { fault: e, operation: t };
  return r != null && (i.value = r), Ae.throwError(e, z.errors.NUMERIC_FAULT, i);
}
var Ht = new z(Yn);
var Ar = {};
var Xn = V.from(0);
var Zn = V.from(-1);
function $n(e, t, r, i) {
  const n = { fault: t, operation: r };
  return i !== void 0 && (n.value = i), Ht.throwError(e, z.errors.NUMERIC_FAULT, n);
}
var br = "0";
for (; br.length < 256; ) br += br;
function Ii(e) {
  if (typeof e != "number") try {
    e = V.from(e).toNumber();
  } catch {
  }
  return typeof e == "number" && e >= 0 && e <= 256 && !(e % 1) ? "1" + br.substring(0, e) : Ht.throwArgumentError("invalid decimal size", "decimals", e);
}
function _i(e, t) {
  t == null && (t = 0);
  const r = Ii(t);
  e = V.from(e);
  const i = e.lt(Xn);
  i && (e = e.mul(Zn));
  let n = e.mod(r).toString();
  for (; n.length < r.length - 1; ) n = "0" + n;
  n = n.match(/^([0-9]*[1-9]|0)(0*)/)[1];
  const o = e.div(r).toString();
  return r.length === 1 ? e = o : e = o + "." + n, i && (e = "-" + e), e;
}
function be(e, t) {
  t == null && (t = 0);
  const r = Ii(t);
  (typeof e != "string" || !e.match(/^-?[0-9.]+$/)) && Ht.throwArgumentError("invalid decimal value", "value", e);
  const i = e.substring(0, 1) === "-";
  i && (e = e.substring(1)), e === "." && Ht.throwArgumentError("missing value", "value", e);
  const n = e.split(".");
  n.length > 2 && Ht.throwArgumentError("too many decimal points", "value", e);
  let o = n[0], h = n[1];
  for (o || (o = "0"), h || (h = "0"); h[h.length - 1] === "0"; ) h = h.substring(0, h.length - 1);
  for (h.length > r.length - 1 && $n("fractional component exceeds decimals", "underflow", "parseFixed"), h === "" && (h = "0"); h.length < r.length - 1; ) h += "0";
  const p = V.from(o), A = V.from(h);
  let v = p.mul(r).add(A);
  return i && (v = v.mul(Zn)), v;
}
var vr = class _vr {
  constructor(t, r, i, n) {
    t !== Ar && Ht.throwError("cannot use FixedFormat constructor; use FixedFormat.from", z.errors.UNSUPPORTED_OPERATION, { operation: "new FixedFormat" }), this.signed = r, this.width = i, this.decimals = n, this.name = (r ? "" : "u") + "fixed" + String(i) + "x" + String(n), this._multiplier = Ii(n), Object.freeze(this);
  }
  static from(t) {
    if (t instanceof _vr) return t;
    typeof t == "number" && (t = `fixed128x${t}`);
    let r = true, i = 128, n = 18;
    if (typeof t == "string") {
      if (t !== "fixed") if (t === "ufixed") r = false;
      else {
        const o = t.match(/^(u?)fixed([0-9]+)x([0-9]+)$/);
        o || Ht.throwArgumentError("invalid fixed format", "format", t), r = o[1] !== "u", i = parseInt(o[2]), n = parseInt(o[3]);
      }
    } else if (t) {
      const o = (h, p, A) => t[h] == null ? A : (typeof t[h] !== p && Ht.throwArgumentError("invalid fixed format (" + h + " not " + p + ")", "format." + h, t[h]), t[h]);
      r = o("signed", "boolean", r), i = o("width", "number", i), n = o("decimals", "number", n);
    }
    return i % 8 && Ht.throwArgumentError("invalid fixed format width (not byte aligned)", "format.width", i), n > 80 && Ht.throwArgumentError("invalid fixed format (decimals too large)", "format.decimals", n), new _vr(Ar, r, i, n);
  }
};
var Ut = class _Ut {
  constructor(t, r, i, n) {
    t !== Ar && Ht.throwError("cannot use FixedNumber constructor; use FixedNumber.from", z.errors.UNSUPPORTED_OPERATION, { operation: "new FixedFormat" }), this.format = n, this._hex = r, this._value = i, this._isFixedNumber = true, Object.freeze(this);
  }
  _checkFormat(t) {
    this.format.name !== t.format.name && Ht.throwArgumentError("incompatible format; use fixedNumber.toFormat", "other", t);
  }
  addUnsafe(t) {
    this._checkFormat(t);
    const r = be(this._value, this.format.decimals), i = be(t._value, t.format.decimals);
    return _Ut.fromValue(r.add(i), this.format.decimals, this.format);
  }
  subUnsafe(t) {
    this._checkFormat(t);
    const r = be(this._value, this.format.decimals), i = be(t._value, t.format.decimals);
    return _Ut.fromValue(r.sub(i), this.format.decimals, this.format);
  }
  mulUnsafe(t) {
    this._checkFormat(t);
    const r = be(this._value, this.format.decimals), i = be(t._value, t.format.decimals);
    return _Ut.fromValue(r.mul(i).div(this.format._multiplier), this.format.decimals, this.format);
  }
  divUnsafe(t) {
    this._checkFormat(t);
    const r = be(this._value, this.format.decimals), i = be(t._value, t.format.decimals);
    return _Ut.fromValue(r.mul(this.format._multiplier).div(i), this.format.decimals, this.format);
  }
  floor() {
    const t = this.toString().split(".");
    t.length === 1 && t.push("0");
    let r = _Ut.from(t[0], this.format);
    const i = !t[1].match(/^(0*)$/);
    return this.isNegative() && i && (r = r.subUnsafe(tf.toFormat(r.format))), r;
  }
  ceiling() {
    const t = this.toString().split(".");
    t.length === 1 && t.push("0");
    let r = _Ut.from(t[0], this.format);
    const i = !t[1].match(/^(0*)$/);
    return !this.isNegative() && i && (r = r.addUnsafe(tf.toFormat(r.format))), r;
  }
  round(t) {
    t == null && (t = 0);
    const r = this.toString().split(".");
    if (r.length === 1 && r.push("0"), (t < 0 || t > 80 || t % 1) && Ht.throwArgumentError("invalid decimal count", "decimals", t), r[1].length <= t) return this;
    const i = _Ut.from("1" + br.substring(0, t), this.format), n = ks.toFormat(this.format);
    return this.mulUnsafe(i).addUnsafe(n).floor().divUnsafe(i);
  }
  isZero() {
    return this._value === "0.0" || this._value === "0";
  }
  isNegative() {
    return this._value[0] === "-";
  }
  toString() {
    return this._value;
  }
  toHexString(t) {
    if (t == null) return this._hex;
    t % 8 && Ht.throwArgumentError("invalid byte width", "width", t);
    const r = V.from(this._hex).fromTwos(this.format.width).toTwos(t).toHexString();
    return oe(r, t / 8);
  }
  toUnsafeFloat() {
    return parseFloat(this.toString());
  }
  toFormat(t) {
    return _Ut.fromString(this._value, t);
  }
  static fromValue(t, r, i) {
    return i == null && r != null && !Ts(r) && (i = r, r = null), r == null && (r = 0), i == null && (i = "fixed"), _Ut.fromString(_i(t, r), vr.from(i));
  }
  static fromString(t, r) {
    r == null && (r = "fixed");
    const i = vr.from(r), n = be(t, i.decimals);
    !i.signed && n.lt(Xn) && $n("unsigned value cannot be negative", "overflow", "value", t);
    let o = null;
    i.signed ? o = n.toTwos(i.width).toHexString() : (o = n.toHexString(), o = oe(o, i.width / 8));
    const h = _i(n, i.decimals);
    return new _Ut(Ar, o, h, i);
  }
  static fromBytes(t, r) {
    r == null && (r = "fixed");
    const i = vr.from(r);
    if (Ot(t).length > i.width / 8) throw new Error("overflow");
    let n = V.from(t);
    i.signed && (n = n.fromTwos(i.width));
    const o = n.toTwos((i.signed ? 0 : 1) + i.width).toHexString(), h = _i(n, i.decimals);
    return new _Ut(Ar, o, h, i);
  }
  static from(t, r) {
    if (typeof t == "string") return _Ut.fromString(t, r);
    if (nr(t)) return _Ut.fromBytes(t, r);
    try {
      return _Ut.fromValue(t, 0, r);
    } catch (i) {
      if (i.code !== z.errors.INVALID_ARGUMENT) throw i;
    }
    return Ht.throwArgumentError("invalid FixedNumber value", "value", t);
  }
  static isFixedNumber(t) {
    return !!(t && t._isFixedNumber);
  }
};
var tf = Ut.from(1);
var ks = Ut.from("0.5");
var qs = "strings/5.7.0";
var ef = new z(qs);
var Tr;
(function(e) {
  e.current = "", e.NFC = "NFC", e.NFD = "NFD", e.NFKC = "NFKC", e.NFKD = "NFKD";
})(Tr || (Tr = {}));
var fr;
(function(e) {
  e.UNEXPECTED_CONTINUE = "unexpected continuation byte", e.BAD_PREFIX = "bad codepoint prefix", e.OVERRUN = "string overrun", e.MISSING_CONTINUE = "missing continuation byte", e.OUT_OF_RANGE = "out of UTF-8 range", e.UTF16_SURROGATE = "UTF-16 surrogate", e.OVERLONG = "overlong representation";
})(fr || (fr = {}));
function Ks(e, t, r, i, n) {
  return ef.throwArgumentError(`invalid codepoint at offset ${t}; ${e}`, "bytes", r);
}
function rf(e, t, r, i, n) {
  if (e === fr.BAD_PREFIX || e === fr.UNEXPECTED_CONTINUE) {
    let o = 0;
    for (let h = t + 1; h < r.length && r[h] >> 6 === 2; h++) o++;
    return o;
  }
  return e === fr.OVERRUN ? r.length - t - 1 : 0;
}
function Hs(e, t, r, i, n) {
  return e === fr.OVERLONG ? (i.push(n), 0) : (i.push(65533), rf(e, t, r));
}
Object.freeze({ error: Ks, ignore: rf, replace: Hs });
function Ls(e) {
  if (e.length % 4 !== 0) throw new Error("bad data");
  let t = [];
  for (let r = 0; r < e.length; r += 4) t.push(parseInt(e.substring(r, r + 4), 16));
  return t;
}
function Ci(e, t) {
  t || (t = function(n) {
    return [parseInt(n, 16)];
  });
  let r = 0, i = {};
  return e.split(",").forEach((n) => {
    let o = n.split(":");
    r += parseInt(o[0], 16), i[r] = t(o[1]);
  }), i;
}
function nf(e) {
  let t = 0;
  return e.split(",").map((r) => {
    let i = r.split("-");
    i.length === 1 ? i[1] = "0" : i[1] === "" && (i[1] = "1");
    let n = t + parseInt(i[0], 16);
    return t = parseInt(i[1], 16), { l: n, h: t };
  });
}
nf("221,13-1b,5f-,40-10,51-f,11-3,3-3,2-2,2-4,8,2,15,2d,28-8,88,48,27-,3-5,11-20,27-,8,28,3-5,12,18,b-a,1c-4,6-16,2-d,2-2,2,1b-4,17-9,8f-,10,f,1f-2,1c-34,33-14e,4,36-,13-,6-2,1a-f,4,9-,3-,17,8,2-2,5-,2,8-,3-,4-8,2-3,3,6-,16-6,2-,7-3,3-,17,8,3,3,3-,2,6-3,3-,4-a,5,2-6,10-b,4,8,2,4,17,8,3,6-,b,4,4-,2-e,2-4,b-10,4,9-,3-,17,8,3-,5-,9-2,3-,4-7,3-3,3,4-3,c-10,3,7-2,4,5-2,3,2,3-2,3-2,4-2,9,4-3,6-2,4,5-8,2-e,d-d,4,9,4,18,b,6-3,8,4,5-6,3-8,3-3,b-11,3,9,4,18,b,6-3,8,4,5-6,3-6,2,3-3,b-11,3,9,4,18,11-3,7-,4,5-8,2-7,3-3,b-11,3,13-2,19,a,2-,8-2,2-3,7,2,9-11,4-b,3b-3,1e-24,3,2-,3,2-,2-5,5,8,4,2,2-,3,e,4-,6,2,7-,b-,3-21,49,23-5,1c-3,9,25,10-,2-2f,23,6,3,8-2,5-5,1b-45,27-9,2a-,2-3,5b-4,45-4,53-5,8,40,2,5-,8,2,5-,28,2,5-,20,2,5-,8,2,5-,8,8,18,20,2,5-,8,28,14-5,1d-22,56-b,277-8,1e-2,52-e,e,8-a,18-8,15-b,e,4,3-b,5e-2,b-15,10,b-5,59-7,2b-555,9d-3,5b-5,17-,7-,27-,7-,9,2,2,2,20-,36,10,f-,7,14-,4,a,54-3,2-6,6-5,9-,1c-10,13-1d,1c-14,3c-,10-6,32-b,240-30,28-18,c-14,a0,115-,3,66-,b-76,5,5-,1d,24,2,5-2,2,8-,35-2,19,f-10,1d-3,311-37f,1b,5a-b,d7-19,d-3,41,57-,68-4,29-3,5f,29-37,2e-2,25-c,2c-2,4e-3,30,78-3,64-,20,19b7-49,51a7-59,48e-2,38-738,2ba5-5b,222f-,3c-94,8-b,6-4,1b,6,2,3,3,6d-20,16e-f,41-,37-7,2e-2,11-f,5-b,18-,b,14,5-3,6,88-,2,bf-2,7-,7-,7-,4-2,8,8-9,8-2ff,20,5-b,1c-b4,27-,27-cbb1,f7-9,28-2,b5-221,56,48,3-,2-,3-,5,d,2,5,3,42,5-,9,8,1d,5,6,2-2,8,153-3,123-3,33-27fd,a6da-5128,21f-5df,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3,2-1d,61-ff7d"), "ad,34f,1806,180b,180c,180d,200b,200c,200d,2060,feff".split(",").map((e) => parseInt(e, 16)), Ci("b5:3bc,c3:ff,7:73,2:253,5:254,3:256,1:257,5:259,1:25b,3:260,1:263,2:269,1:268,5:26f,1:272,2:275,7:280,3:283,5:288,3:28a,1:28b,5:292,3f:195,1:1bf,29:19e,125:3b9,8b:3b2,1:3b8,1:3c5,3:3c6,1:3c0,1a:3ba,1:3c1,1:3c3,2:3b8,1:3b5,1bc9:3b9,1c:1f76,1:1f77,f:1f7a,1:1f7b,d:1f78,1:1f79,1:1f7c,1:1f7d,107:63,5:25b,4:68,1:68,1:68,3:69,1:69,1:6c,3:6e,4:70,1:71,1:72,1:72,1:72,7:7a,2:3c9,2:7a,2:6b,1:e5,1:62,1:63,3:65,1:66,2:6d,b:3b3,1:3c0,6:64,1b574:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3"), Ci("179:1,2:1,2:1,5:1,2:1,a:4f,a:1,8:1,2:1,2:1,3:1,5:1,3:1,4:1,2:1,3:1,4:1,8:2,1:1,2:2,1:1,2:2,27:2,195:26,2:25,1:25,1:25,2:40,2:3f,1:3f,33:1,11:-6,1:-9,1ac7:-3a,6d:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,b:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,c:-8,2:-8,2:-8,2:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,49:-8,1:-8,1:-4a,1:-4a,d:-56,1:-56,1:-56,1:-56,d:-8,1:-8,f:-8,1:-8,3:-7"), Ci("df:00730073,51:00690307,19:02BC006E,a7:006A030C,18a:002003B9,16:03B903080301,20:03C503080301,1d7:05650582,190f:00680331,1:00740308,1:0077030A,1:0079030A,1:006102BE,b6:03C50313,2:03C503130300,2:03C503130301,2:03C503130342,2a:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,3:1F7003B9,1:03B103B9,1:03AC03B9,2:03B10342,1:03B1034203B9,5:03B103B9,6:1F7403B9,1:03B703B9,1:03AE03B9,2:03B70342,1:03B7034203B9,5:03B703B9,6:03B903080300,1:03B903080301,3:03B90342,1:03B903080342,b:03C503080300,1:03C503080301,1:03C10313,2:03C50342,1:03C503080342,b:1F7C03B9,1:03C903B9,1:03CE03B9,2:03C90342,1:03C9034203B9,5:03C903B9,ac:00720073,5b:00B00063,6:00B00066,d:006E006F,a:0073006D,1:00740065006C,1:0074006D,124f:006800700061,2:00610075,2:006F0076,b:00700061,1:006E0061,1:03BC0061,1:006D0061,1:006B0061,1:006B0062,1:006D0062,1:00670062,3:00700066,1:006E0066,1:03BC0066,4:0068007A,1:006B0068007A,1:006D0068007A,1:00670068007A,1:00740068007A,15:00700061,1:006B00700061,1:006D00700061,1:006700700061,8:00700076,1:006E0076,1:03BC0076,1:006D0076,1:006B0076,1:006D0076,1:00700077,1:006E0077,1:03BC0077,1:006D0077,1:006B0077,1:006D0077,1:006B03C9,1:006D03C9,2:00620071,3:00632215006B0067,1:0063006F002E,1:00640062,1:00670079,2:00680070,2:006B006B,1:006B006D,9:00700068,2:00700070006D,1:00700072,2:00730076,1:00770062,c723:00660066,1:00660069,1:0066006C,1:006600660069,1:00660066006C,1:00730074,1:00730074,d:05740576,1:05740565,1:0574056B,1:057E0576,1:0574056D", Ls), nf("80-20,2a0-,39c,32,f71,18e,7f2-f,19-7,30-4,7-5,f81-b,5,a800-20ff,4d1-1f,110,fa-6,d174-7,2e84-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,2,1f-5f,ff7f-20001");
var ff = "hash/5.7.0";
function zs(e) {
  e = atob(e);
  const t = [];
  for (let r = 0; r < e.length; r++) t.push(e.charCodeAt(r));
  return Ot(t);
}
function of(e, t) {
  t == null && (t = 1);
  const r = [], i = r.forEach, n = function(o, h) {
    i.call(o, function(p) {
      h > 0 && Array.isArray(p) ? n(p, h - 1) : r.push(p);
    });
  };
  return n(e, t), r;
}
function js(e) {
  const t = {};
  for (let r = 0; r < e.length; r++) {
    const i = e[r];
    t[i[0]] = i[1];
  }
  return t;
}
function Qs(e) {
  let t = 0;
  function r() {
    return e[t++] << 8 | e[t++];
  }
  let i = r(), n = 1, o = [0, 1];
  for (let H = 1; H < i; H++) o.push(n += r());
  let h = r(), p = t;
  t += h;
  let A = 0, v = 0;
  function w() {
    return A == 0 && (v = v << 8 | e[t++], A = 8), v >> --A & 1;
  }
  const y2 = 31, S = Math.pow(2, y2), I = S >>> 1, N = I >> 1, C2 = S - 1;
  let F = 0;
  for (let H = 0; H < y2; H++) F = F << 1 | w();
  let U = [], J = 0, Bt = S;
  for (; ; ) {
    let H = Math.floor(((F - J + 1) * n - 1) / Bt), L = 0, Pt = i;
    for (; Pt - L > 1; ) {
      let Vt = L + Pt >>> 1;
      H < o[Vt] ? Pt = Vt : L = Vt;
    }
    if (L == 0) break;
    U.push(L);
    let W = J + Math.floor(Bt * o[L] / n), Rt = J + Math.floor(Bt * o[L + 1] / n) - 1;
    for (; !((W ^ Rt) & I); ) F = F << 1 & C2 | w(), W = W << 1 & C2, Rt = Rt << 1 & C2 | 1;
    for (; W & ~Rt & N; ) F = F & I | F << 1 & C2 >>> 1 | w(), W = W << 1 ^ I, Rt = (Rt ^ I) << 1 | I | 1;
    J = W, Bt = 1 + Rt - W;
  }
  let G = i - 4;
  return U.map((H) => {
    switch (H - G) {
      case 3:
        return G + 65792 + (e[p++] << 16 | e[p++] << 8 | e[p++]);
      case 2:
        return G + 256 + (e[p++] << 8 | e[p++]);
      case 1:
        return G + e[p++];
      default:
        return H - 1;
    }
  });
}
function Js(e) {
  let t = 0;
  return () => e[t++];
}
function Gs(e) {
  return Js(Qs(e));
}
function Ys(e) {
  return e & 1 ? ~e >> 1 : e >> 1;
}
function Vs(e, t) {
  let r = Array(e);
  for (let i = 0; i < e; i++) r[i] = 1 + t();
  return r;
}
function sf(e, t) {
  let r = Array(e);
  for (let i = 0, n = -1; i < e; i++) r[i] = n += 1 + t();
  return r;
}
function Ws(e, t) {
  let r = Array(e);
  for (let i = 0, n = 0; i < e; i++) r[i] = n += Ys(t());
  return r;
}
function Ur(e, t) {
  let r = sf(e(), e), i = e(), n = sf(i, e), o = Vs(i, e);
  for (let h = 0; h < i; h++) for (let p = 0; p < o[h]; p++) r.push(n[h] + p);
  return t ? r.map((h) => t[h]) : r;
}
function Xs(e) {
  let t = [];
  for (; ; ) {
    let r = e();
    if (r == 0) break;
    t.push($s(r, e));
  }
  for (; ; ) {
    let r = e() - 1;
    if (r < 0) break;
    t.push(t0(r, e));
  }
  return js(of(t));
}
function Zs(e) {
  let t = [];
  for (; ; ) {
    let r = e();
    if (r == 0) break;
    t.push(r);
  }
  return t;
}
function af(e, t, r) {
  let i = Array(e).fill(void 0).map(() => []);
  for (let n = 0; n < t; n++) Ws(e, r).forEach((o, h) => i[h].push(o));
  return i;
}
function $s(e, t) {
  let r = 1 + t(), i = t(), n = Zs(t), o = af(n.length, 1 + e, t);
  return of(o.map((h, p) => {
    const A = h[0], v = h.slice(1);
    return Array(n[p]).fill(void 0).map((w, y2) => {
      let S = y2 * i;
      return [A + y2 * r, v.map((I) => I + S)];
    });
  }));
}
function t0(e, t) {
  let r = 1 + t();
  return af(r, 1 + e, t).map((n) => [n[0], n.slice(1)]);
}
function e0(e) {
  let t = Ur(e).sort((i, n) => i - n);
  return r();
  function r() {
    let i = [];
    for (; ; ) {
      let v = Ur(e, t);
      if (v.length == 0) break;
      i.push({ set: new Set(v), node: r() });
    }
    i.sort((v, w) => w.set.size - v.set.size);
    let n = e(), o = n % 3;
    n = n / 3 | 0;
    let h = !!(n & 1);
    n >>= 1;
    let p = n == 1, A = n == 2;
    return { branches: i, valid: o, fe0f: h, save: p, check: A };
  }
}
function r0() {
  return Gs(zs(""));
}
var kr = r0();
new Set(Ur(kr)), new Set(Ur(kr)), Xs(kr), e0(kr), new z(ff);
var i0 = new Uint8Array(32);
i0.fill(0);
var f0 = "rlp/5.7.0";
new z(f0);
var o0 = "address/5.7.0";
var yr = new z(o0);
var s0 = 9007199254740991;
function a0(e) {
  return Math.log10 ? Math.log10(e) : Math.log(e) / Math.LN10;
}
var Ri = {};
for (let e = 0; e < 10; e++) Ri[String(e)] = String(e);
for (let e = 0; e < 26; e++) Ri[String.fromCharCode(65 + e)] = String(10 + e);
var cf = Math.floor(a0(s0));
var c0 = "properties/5.7.0";
new z(c0);
new z(ff);
var l0 = new Uint8Array(32);
l0.fill(0), V.from(-1);
var d0 = V.from(0);
var p0 = V.from(1);
V.from("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"), oe(p0.toHexString(), 32), oe(d0.toHexString(), 32);
var se = {};
var Q = {};
var xr = lf;
function lf(e, t) {
  if (!e) throw new Error(t || "Assertion failed");
}
lf.equal = function(t, r, i) {
  if (t != r) throw new Error(i || "Assertion failed: " + t + " != " + r);
};
var Oi = { exports: {} };
typeof Object.create == "function" ? Oi.exports = function(t, r) {
  r && (t.super_ = r, t.prototype = Object.create(r.prototype, { constructor: { value: t, enumerable: false, writable: true, configurable: true } }));
} : Oi.exports = function(t, r) {
  if (r) {
    t.super_ = r;
    var i = function() {
    };
    i.prototype = r.prototype, t.prototype = new i(), t.prototype.constructor = t;
  }
};
var v0 = xr;
var g0 = Oi.exports;
Q.inherits = g0;
function m0(e, t) {
  return (e.charCodeAt(t) & 64512) !== 55296 || t < 0 || t + 1 >= e.length ? false : (e.charCodeAt(t + 1) & 64512) === 56320;
}
function A0(e, t) {
  if (Array.isArray(e)) return e.slice();
  if (!e) return [];
  var r = [];
  if (typeof e == "string") if (t) {
    if (t === "hex") for (e = e.replace(/[^a-z0-9]+/ig, ""), e.length % 2 !== 0 && (e = "0" + e), n = 0; n < e.length; n += 2) r.push(parseInt(e[n] + e[n + 1], 16));
  } else for (var i = 0, n = 0; n < e.length; n++) {
    var o = e.charCodeAt(n);
    o < 128 ? r[i++] = o : o < 2048 ? (r[i++] = o >> 6 | 192, r[i++] = o & 63 | 128) : m0(e, n) ? (o = 65536 + ((o & 1023) << 10) + (e.charCodeAt(++n) & 1023), r[i++] = o >> 18 | 240, r[i++] = o >> 12 & 63 | 128, r[i++] = o >> 6 & 63 | 128, r[i++] = o & 63 | 128) : (r[i++] = o >> 12 | 224, r[i++] = o >> 6 & 63 | 128, r[i++] = o & 63 | 128);
  }
  else for (n = 0; n < e.length; n++) r[n] = e[n] | 0;
  return r;
}
Q.toArray = A0;
function b0(e) {
  for (var t = "", r = 0; r < e.length; r++) t += pf(e[r].toString(16));
  return t;
}
Q.toHex = b0;
function df(e) {
  var t = e >>> 24 | e >>> 8 & 65280 | e << 8 & 16711680 | (e & 255) << 24;
  return t >>> 0;
}
Q.htonl = df;
function y0(e, t) {
  for (var r = "", i = 0; i < e.length; i++) {
    var n = e[i];
    t === "little" && (n = df(n)), r += vf(n.toString(16));
  }
  return r;
}
Q.toHex32 = y0;
function pf(e) {
  return e.length === 1 ? "0" + e : e;
}
Q.zero2 = pf;
function vf(e) {
  return e.length === 7 ? "0" + e : e.length === 6 ? "00" + e : e.length === 5 ? "000" + e : e.length === 4 ? "0000" + e : e.length === 3 ? "00000" + e : e.length === 2 ? "000000" + e : e.length === 1 ? "0000000" + e : e;
}
Q.zero8 = vf;
function w0(e, t, r, i) {
  var n = r - t;
  v0(n % 4 === 0);
  for (var o = new Array(n / 4), h = 0, p = t; h < o.length; h++, p += 4) {
    var A;
    i === "big" ? A = e[p] << 24 | e[p + 1] << 16 | e[p + 2] << 8 | e[p + 3] : A = e[p + 3] << 24 | e[p + 2] << 16 | e[p + 1] << 8 | e[p], o[h] = A >>> 0;
  }
  return o;
}
Q.join32 = w0;
function x0(e, t) {
  for (var r = new Array(e.length * 4), i = 0, n = 0; i < e.length; i++, n += 4) {
    var o = e[i];
    t === "big" ? (r[n] = o >>> 24, r[n + 1] = o >>> 16 & 255, r[n + 2] = o >>> 8 & 255, r[n + 3] = o & 255) : (r[n + 3] = o >>> 24, r[n + 2] = o >>> 16 & 255, r[n + 1] = o >>> 8 & 255, r[n] = o & 255);
  }
  return r;
}
Q.split32 = x0;
function M0(e, t) {
  return e >>> t | e << 32 - t;
}
Q.rotr32 = M0;
function E0(e, t) {
  return e << t | e >>> 32 - t;
}
Q.rotl32 = E0;
function S0(e, t) {
  return e + t >>> 0;
}
Q.sum32 = S0;
function N0(e, t, r) {
  return e + t + r >>> 0;
}
Q.sum32_3 = N0;
function I0(e, t, r, i) {
  return e + t + r + i >>> 0;
}
Q.sum32_4 = I0;
function _0(e, t, r, i, n) {
  return e + t + r + i + n >>> 0;
}
Q.sum32_5 = _0;
function B0(e, t, r, i) {
  var n = e[t], o = e[t + 1], h = i + o >>> 0, p = (h < i ? 1 : 0) + r + n;
  e[t] = p >>> 0, e[t + 1] = h;
}
Q.sum64 = B0;
function C0(e, t, r, i) {
  var n = t + i >>> 0, o = (n < t ? 1 : 0) + e + r;
  return o >>> 0;
}
Q.sum64_hi = C0;
function R0(e, t, r, i) {
  var n = t + i;
  return n >>> 0;
}
Q.sum64_lo = R0;
function O0(e, t, r, i, n, o, h, p) {
  var A = 0, v = t;
  v = v + i >>> 0, A += v < t ? 1 : 0, v = v + o >>> 0, A += v < o ? 1 : 0, v = v + p >>> 0, A += v < p ? 1 : 0;
  var w = e + r + n + h + A;
  return w >>> 0;
}
Q.sum64_4_hi = O0;
function P0(e, t, r, i, n, o, h, p) {
  var A = t + i + o + p;
  return A >>> 0;
}
Q.sum64_4_lo = P0;
function D0(e, t, r, i, n, o, h, p, A, v) {
  var w = 0, y2 = t;
  y2 = y2 + i >>> 0, w += y2 < t ? 1 : 0, y2 = y2 + o >>> 0, w += y2 < o ? 1 : 0, y2 = y2 + p >>> 0, w += y2 < p ? 1 : 0, y2 = y2 + v >>> 0, w += y2 < v ? 1 : 0;
  var S = e + r + n + h + A + w;
  return S >>> 0;
}
Q.sum64_5_hi = D0;
function F0(e, t, r, i, n, o, h, p, A, v) {
  var w = t + i + o + p + v;
  return w >>> 0;
}
Q.sum64_5_lo = F0;
function T0(e, t, r) {
  var i = t << 32 - r | e >>> r;
  return i >>> 0;
}
Q.rotr64_hi = T0;
function U0(e, t, r) {
  var i = e << 32 - r | t >>> r;
  return i >>> 0;
}
Q.rotr64_lo = U0;
function k0(e, t, r) {
  return e >>> r;
}
Q.shr64_hi = k0;
function q0(e, t, r) {
  var i = e << 32 - r | t >>> r;
  return i >>> 0;
}
Q.shr64_lo = q0;
var or = {};
var gf = Q;
var K0 = xr;
function qr() {
  this.pending = null, this.pendingTotal = 0, this.blockSize = this.constructor.blockSize, this.outSize = this.constructor.outSize, this.hmacStrength = this.constructor.hmacStrength, this.padLength = this.constructor.padLength / 8, this.endian = "big", this._delta8 = this.blockSize / 8, this._delta32 = this.blockSize / 32;
}
or.BlockHash = qr, qr.prototype.update = function(t, r) {
  if (t = gf.toArray(t, r), this.pending ? this.pending = this.pending.concat(t) : this.pending = t, this.pendingTotal += t.length, this.pending.length >= this._delta8) {
    t = this.pending;
    var i = t.length % this._delta8;
    this.pending = t.slice(t.length - i, t.length), this.pending.length === 0 && (this.pending = null), t = gf.join32(t, 0, t.length - i, this.endian);
    for (var n = 0; n < t.length; n += this._delta32) this._update(t, n, n + this._delta32);
  }
  return this;
}, qr.prototype.digest = function(t) {
  return this.update(this._pad()), K0(this.pending === null), this._digest(t);
}, qr.prototype._pad = function() {
  var t = this.pendingTotal, r = this._delta8, i = r - (t + this.padLength) % r, n = new Array(i + this.padLength);
  n[0] = 128;
  for (var o = 1; o < i; o++) n[o] = 0;
  if (t <<= 3, this.endian === "big") {
    for (var h = 8; h < this.padLength; h++) n[o++] = 0;
    n[o++] = 0, n[o++] = 0, n[o++] = 0, n[o++] = 0, n[o++] = t >>> 24 & 255, n[o++] = t >>> 16 & 255, n[o++] = t >>> 8 & 255, n[o++] = t & 255;
  } else for (n[o++] = t & 255, n[o++] = t >>> 8 & 255, n[o++] = t >>> 16 & 255, n[o++] = t >>> 24 & 255, n[o++] = 0, n[o++] = 0, n[o++] = 0, n[o++] = 0, h = 8; h < this.padLength; h++) n[o++] = 0;
  return n;
};
var sr = {};
var ae = {};
var H0 = Q;
var ue = H0.rotr32;
function L0(e, t, r, i) {
  if (e === 0) return mf(t, r, i);
  if (e === 1 || e === 3) return bf(t, r, i);
  if (e === 2) return Af(t, r, i);
}
ae.ft_1 = L0;
function mf(e, t, r) {
  return e & t ^ ~e & r;
}
ae.ch32 = mf;
function Af(e, t, r) {
  return e & t ^ e & r ^ t & r;
}
ae.maj32 = Af;
function bf(e, t, r) {
  return e ^ t ^ r;
}
ae.p32 = bf;
function z0(e) {
  return ue(e, 2) ^ ue(e, 13) ^ ue(e, 22);
}
ae.s0_256 = z0;
function j0(e) {
  return ue(e, 6) ^ ue(e, 11) ^ ue(e, 25);
}
ae.s1_256 = j0;
function Q0(e) {
  return ue(e, 7) ^ ue(e, 18) ^ e >>> 3;
}
ae.g0_256 = Q0;
function J0(e) {
  return ue(e, 17) ^ ue(e, 19) ^ e >>> 10;
}
ae.g1_256 = J0;
var ar = Q;
var G0 = or;
var Y0 = ae;
var Pi = ar.rotl32;
var Mr = ar.sum32;
var V0 = ar.sum32_5;
var W0 = Y0.ft_1;
var yf = G0.BlockHash;
var X0 = [1518500249, 1859775393, 2400959708, 3395469782];
function he() {
  if (!(this instanceof he)) return new he();
  yf.call(this), this.h = [1732584193, 4023233417, 2562383102, 271733878, 3285377520], this.W = new Array(80);
}
ar.inherits(he, yf);
var Z0 = he;
he.blockSize = 512, he.outSize = 160, he.hmacStrength = 80, he.padLength = 64, he.prototype._update = function(t, r) {
  for (var i = this.W, n = 0; n < 16; n++) i[n] = t[r + n];
  for (; n < i.length; n++) i[n] = Pi(i[n - 3] ^ i[n - 8] ^ i[n - 14] ^ i[n - 16], 1);
  var o = this.h[0], h = this.h[1], p = this.h[2], A = this.h[3], v = this.h[4];
  for (n = 0; n < i.length; n++) {
    var w = ~~(n / 20), y2 = V0(Pi(o, 5), W0(w, h, p, A), v, i[n], X0[w]);
    v = A, A = p, p = Pi(h, 30), h = o, o = y2;
  }
  this.h[0] = Mr(this.h[0], o), this.h[1] = Mr(this.h[1], h), this.h[2] = Mr(this.h[2], p), this.h[3] = Mr(this.h[3], A), this.h[4] = Mr(this.h[4], v);
}, he.prototype._digest = function(t) {
  return t === "hex" ? ar.toHex32(this.h, "big") : ar.split32(this.h, "big");
};
var ur = Q;
var $0 = or;
var hr = ae;
var ta = xr;
var ie = ur.sum32;
var ea = ur.sum32_4;
var ra = ur.sum32_5;
var ia = hr.ch32;
var na = hr.maj32;
var fa = hr.s0_256;
var oa = hr.s1_256;
var sa = hr.g0_256;
var aa = hr.g1_256;
var wf = $0.BlockHash;
var ua = [1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298];
function ce() {
  if (!(this instanceof ce)) return new ce();
  wf.call(this), this.h = [1779033703, 3144134277, 1013904242, 2773480762, 1359893119, 2600822924, 528734635, 1541459225], this.k = ua, this.W = new Array(64);
}
ur.inherits(ce, wf);
var xf = ce;
ce.blockSize = 512, ce.outSize = 256, ce.hmacStrength = 192, ce.padLength = 64, ce.prototype._update = function(t, r) {
  for (var i = this.W, n = 0; n < 16; n++) i[n] = t[r + n];
  for (; n < i.length; n++) i[n] = ea(aa(i[n - 2]), i[n - 7], sa(i[n - 15]), i[n - 16]);
  var o = this.h[0], h = this.h[1], p = this.h[2], A = this.h[3], v = this.h[4], w = this.h[5], y2 = this.h[6], S = this.h[7];
  for (ta(this.k.length === i.length), n = 0; n < i.length; n++) {
    var I = ra(S, oa(v), ia(v, w, y2), this.k[n], i[n]), N = ie(fa(o), na(o, h, p));
    S = y2, y2 = w, w = v, v = ie(A, I), A = p, p = h, h = o, o = ie(I, N);
  }
  this.h[0] = ie(this.h[0], o), this.h[1] = ie(this.h[1], h), this.h[2] = ie(this.h[2], p), this.h[3] = ie(this.h[3], A), this.h[4] = ie(this.h[4], v), this.h[5] = ie(this.h[5], w), this.h[6] = ie(this.h[6], y2), this.h[7] = ie(this.h[7], S);
}, ce.prototype._digest = function(t) {
  return t === "hex" ? ur.toHex32(this.h, "big") : ur.split32(this.h, "big");
};
var Di = Q;
var Mf = xf;
function ye() {
  if (!(this instanceof ye)) return new ye();
  Mf.call(this), this.h = [3238371032, 914150663, 812702999, 4144912697, 4290775857, 1750603025, 1694076839, 3204075428];
}
Di.inherits(ye, Mf);
var ha = ye;
ye.blockSize = 512, ye.outSize = 224, ye.hmacStrength = 192, ye.padLength = 64, ye.prototype._digest = function(t) {
  return t === "hex" ? Di.toHex32(this.h.slice(0, 7), "big") : Di.split32(this.h.slice(0, 7), "big");
};
var jt = Q;
var ca = or;
var la = xr;
var le = jt.rotr64_hi;
var de = jt.rotr64_lo;
var Ef = jt.shr64_hi;
var Sf = jt.shr64_lo;
var Be = jt.sum64;
var Fi = jt.sum64_hi;
var Ti = jt.sum64_lo;
var da = jt.sum64_4_hi;
var pa = jt.sum64_4_lo;
var va = jt.sum64_5_hi;
var ga = jt.sum64_5_lo;
var Nf = ca.BlockHash;
var ma = [1116352408, 3609767458, 1899447441, 602891725, 3049323471, 3964484399, 3921009573, 2173295548, 961987163, 4081628472, 1508970993, 3053834265, 2453635748, 2937671579, 2870763221, 3664609560, 3624381080, 2734883394, 310598401, 1164996542, 607225278, 1323610764, 1426881987, 3590304994, 1925078388, 4068182383, 2162078206, 991336113, 2614888103, 633803317, 3248222580, 3479774868, 3835390401, 2666613458, 4022224774, 944711139, 264347078, 2341262773, 604807628, 2007800933, 770255983, 1495990901, 1249150122, 1856431235, 1555081692, 3175218132, 1996064986, 2198950837, 2554220882, 3999719339, 2821834349, 766784016, 2952996808, 2566594879, 3210313671, 3203337956, 3336571891, 1034457026, 3584528711, 2466948901, 113926993, 3758326383, 338241895, 168717936, 666307205, 1188179964, 773529912, 1546045734, 1294757372, 1522805485, 1396182291, 2643833823, 1695183700, 2343527390, 1986661051, 1014477480, 2177026350, 1206759142, 2456956037, 344077627, 2730485921, 1290863460, 2820302411, 3158454273, 3259730800, 3505952657, 3345764771, 106217008, 3516065817, 3606008344, 3600352804, 1432725776, 4094571909, 1467031594, 275423344, 851169720, 430227734, 3100823752, 506948616, 1363258195, 659060556, 3750685593, 883997877, 3785050280, 958139571, 3318307427, 1322822218, 3812723403, 1537002063, 2003034995, 1747873779, 3602036899, 1955562222, 1575990012, 2024104815, 1125592928, 2227730452, 2716904306, 2361852424, 442776044, 2428436474, 593698344, 2756734187, 3733110249, 3204031479, 2999351573, 3329325298, 3815920427, 3391569614, 3928383900, 3515267271, 566280711, 3940187606, 3454069534, 4118630271, 4000239992, 116418474, 1914138554, 174292421, 2731055270, 289380356, 3203993006, 460393269, 320620315, 685471733, 587496836, 852142971, 1086792851, 1017036298, 365543100, 1126000580, 2618297676, 1288033470, 3409855158, 1501505948, 4234509866, 1607167915, 987167468, 1816402316, 1246189591];
function ne() {
  if (!(this instanceof ne)) return new ne();
  Nf.call(this), this.h = [1779033703, 4089235720, 3144134277, 2227873595, 1013904242, 4271175723, 2773480762, 1595750129, 1359893119, 2917565137, 2600822924, 725511199, 528734635, 4215389547, 1541459225, 327033209], this.k = ma, this.W = new Array(160);
}
jt.inherits(ne, Nf);
var If = ne;
ne.blockSize = 1024, ne.outSize = 512, ne.hmacStrength = 192, ne.padLength = 128, ne.prototype._prepareBlock = function(t, r) {
  for (var i = this.W, n = 0; n < 32; n++) i[n] = t[r + n];
  for (; n < i.length; n += 2) {
    var o = _a(i[n - 4], i[n - 3]), h = Ba(i[n - 4], i[n - 3]), p = i[n - 14], A = i[n - 13], v = Na(i[n - 30], i[n - 29]), w = Ia(i[n - 30], i[n - 29]), y2 = i[n - 32], S = i[n - 31];
    i[n] = da(o, h, p, A, v, w, y2, S), i[n + 1] = pa(o, h, p, A, v, w, y2, S);
  }
}, ne.prototype._update = function(t, r) {
  this._prepareBlock(t, r);
  var i = this.W, n = this.h[0], o = this.h[1], h = this.h[2], p = this.h[3], A = this.h[4], v = this.h[5], w = this.h[6], y2 = this.h[7], S = this.h[8], I = this.h[9], N = this.h[10], C2 = this.h[11], F = this.h[12], U = this.h[13], J = this.h[14], Bt = this.h[15];
  la(this.k.length === i.length);
  for (var G = 0; G < i.length; G += 2) {
    var H = J, L = Bt, Pt = Ea(S, I), W = Sa(S, I), Rt = Aa(S, I, N, C2, F), Vt = ba(S, I, N, C2, F, U), Y = this.k[G], Wt = this.k[G + 1], b = i[G], f = i[G + 1], a = va(H, L, Pt, W, Rt, Vt, Y, Wt, b, f), c = ga(H, L, Pt, W, Rt, Vt, Y, Wt, b, f);
    H = xa(n, o), L = Ma(n, o), Pt = ya(n, o, h, p, A), W = wa(n, o, h, p, A, v);
    var d = Fi(H, L, Pt, W), m = Ti(H, L, Pt, W);
    J = F, Bt = U, F = N, U = C2, N = S, C2 = I, S = Fi(w, y2, a, c), I = Ti(y2, y2, a, c), w = A, y2 = v, A = h, v = p, h = n, p = o, n = Fi(a, c, d, m), o = Ti(a, c, d, m);
  }
  Be(this.h, 0, n, o), Be(this.h, 2, h, p), Be(this.h, 4, A, v), Be(this.h, 6, w, y2), Be(this.h, 8, S, I), Be(this.h, 10, N, C2), Be(this.h, 12, F, U), Be(this.h, 14, J, Bt);
}, ne.prototype._digest = function(t) {
  return t === "hex" ? jt.toHex32(this.h, "big") : jt.split32(this.h, "big");
};
function Aa(e, t, r, i, n) {
  var o = e & r ^ ~e & n;
  return o < 0 && (o += 4294967296), o;
}
function ba(e, t, r, i, n, o) {
  var h = t & i ^ ~t & o;
  return h < 0 && (h += 4294967296), h;
}
function ya(e, t, r, i, n) {
  var o = e & r ^ e & n ^ r & n;
  return o < 0 && (o += 4294967296), o;
}
function wa(e, t, r, i, n, o) {
  var h = t & i ^ t & o ^ i & o;
  return h < 0 && (h += 4294967296), h;
}
function xa(e, t) {
  var r = le(e, t, 28), i = le(t, e, 2), n = le(t, e, 7), o = r ^ i ^ n;
  return o < 0 && (o += 4294967296), o;
}
function Ma(e, t) {
  var r = de(e, t, 28), i = de(t, e, 2), n = de(t, e, 7), o = r ^ i ^ n;
  return o < 0 && (o += 4294967296), o;
}
function Ea(e, t) {
  var r = le(e, t, 14), i = le(e, t, 18), n = le(t, e, 9), o = r ^ i ^ n;
  return o < 0 && (o += 4294967296), o;
}
function Sa(e, t) {
  var r = de(e, t, 14), i = de(e, t, 18), n = de(t, e, 9), o = r ^ i ^ n;
  return o < 0 && (o += 4294967296), o;
}
function Na(e, t) {
  var r = le(e, t, 1), i = le(e, t, 8), n = Ef(e, t, 7), o = r ^ i ^ n;
  return o < 0 && (o += 4294967296), o;
}
function Ia(e, t) {
  var r = de(e, t, 1), i = de(e, t, 8), n = Sf(e, t, 7), o = r ^ i ^ n;
  return o < 0 && (o += 4294967296), o;
}
function _a(e, t) {
  var r = le(e, t, 19), i = le(t, e, 29), n = Ef(e, t, 6), o = r ^ i ^ n;
  return o < 0 && (o += 4294967296), o;
}
function Ba(e, t) {
  var r = de(e, t, 19), i = de(t, e, 29), n = Sf(e, t, 6), o = r ^ i ^ n;
  return o < 0 && (o += 4294967296), o;
}
var Ui = Q;
var _f = If;
function we() {
  if (!(this instanceof we)) return new we();
  _f.call(this), this.h = [3418070365, 3238371032, 1654270250, 914150663, 2438529370, 812702999, 355462360, 4144912697, 1731405415, 4290775857, 2394180231, 1750603025, 3675008525, 1694076839, 1203062813, 3204075428];
}
Ui.inherits(we, _f);
var Ca = we;
we.blockSize = 1024, we.outSize = 384, we.hmacStrength = 192, we.padLength = 128, we.prototype._digest = function(t) {
  return t === "hex" ? Ui.toHex32(this.h.slice(0, 12), "big") : Ui.split32(this.h.slice(0, 12), "big");
}, sr.sha1 = Z0, sr.sha224 = ha, sr.sha256 = xf, sr.sha384 = Ca, sr.sha512 = If;
var Bf = {};
var Xe = Q;
var Ra = or;
var Kr = Xe.rotl32;
var Cf = Xe.sum32;
var Er = Xe.sum32_3;
var Rf = Xe.sum32_4;
var Of = Ra.BlockHash;
function pe() {
  if (!(this instanceof pe)) return new pe();
  Of.call(this), this.h = [1732584193, 4023233417, 2562383102, 271733878, 3285377520], this.endian = "little";
}
Xe.inherits(pe, Of), Bf.ripemd160 = pe, pe.blockSize = 512, pe.outSize = 160, pe.hmacStrength = 192, pe.padLength = 64, pe.prototype._update = function(t, r) {
  for (var i = this.h[0], n = this.h[1], o = this.h[2], h = this.h[3], p = this.h[4], A = i, v = n, w = o, y2 = h, S = p, I = 0; I < 80; I++) {
    var N = Cf(Kr(Rf(i, Pf(I, n, o, h), t[Da[I] + r], Oa(I)), Ta[I]), p);
    i = p, p = h, h = Kr(o, 10), o = n, n = N, N = Cf(Kr(Rf(A, Pf(79 - I, v, w, y2), t[Fa[I] + r], Pa(I)), Ua[I]), S), A = S, S = y2, y2 = Kr(w, 10), w = v, v = N;
  }
  N = Er(this.h[1], o, y2), this.h[1] = Er(this.h[2], h, S), this.h[2] = Er(this.h[3], p, A), this.h[3] = Er(this.h[4], i, v), this.h[4] = Er(this.h[0], n, w), this.h[0] = N;
}, pe.prototype._digest = function(t) {
  return t === "hex" ? Xe.toHex32(this.h, "little") : Xe.split32(this.h, "little");
};
function Pf(e, t, r, i) {
  return e <= 15 ? t ^ r ^ i : e <= 31 ? t & r | ~t & i : e <= 47 ? (t | ~r) ^ i : e <= 63 ? t & i | r & ~i : t ^ (r | ~i);
}
function Oa(e) {
  return e <= 15 ? 0 : e <= 31 ? 1518500249 : e <= 47 ? 1859775393 : e <= 63 ? 2400959708 : 2840853838;
}
function Pa(e) {
  return e <= 15 ? 1352829926 : e <= 31 ? 1548603684 : e <= 47 ? 1836072691 : e <= 63 ? 2053994217 : 0;
}
var Da = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13];
var Fa = [5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14, 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11];
var Ta = [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12, 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6];
var Ua = [8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8, 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11];
var ka = Q;
var qa = xr;
function cr(e, t, r) {
  if (!(this instanceof cr)) return new cr(e, t, r);
  this.Hash = e, this.blockSize = e.blockSize / 8, this.outSize = e.outSize / 8, this.inner = null, this.outer = null, this._init(ka.toArray(t, r));
}
var Ka = cr;
cr.prototype._init = function(t) {
  t.length > this.blockSize && (t = new this.Hash().update(t).digest()), qa(t.length <= this.blockSize);
  for (var r = t.length; r < this.blockSize; r++) t.push(0);
  for (r = 0; r < t.length; r++) t[r] ^= 54;
  for (this.inner = new this.Hash().update(t), r = 0; r < t.length; r++) t[r] ^= 106;
  this.outer = new this.Hash().update(t);
}, cr.prototype.update = function(t, r) {
  return this.inner.update(t, r), this;
}, cr.prototype.digest = function(t) {
  return this.outer.update(this.inner.digest()), this.outer.digest(t);
}, function(e) {
  var t = e;
  t.utils = Q, t.common = or, t.sha = sr, t.ripemd = Bf, t.hmac = Ka, t.sha1 = t.sha.sha1, t.sha256 = t.sha.sha256, t.sha224 = t.sha.sha224, t.sha384 = t.sha.sha384, t.sha512 = t.sha.sha512, t.ripemd160 = t.ripemd.ripemd160;
}(se);
function lr(e, t, r) {
  return r = { path: t, exports: {}, require: function(i, n) {
    return Ha(i, n ?? r.path);
  } }, e(r, r.exports), r.exports;
}
function Ha() {
  throw new Error("Dynamic requires are not currently supported by @rollup/plugin-commonjs");
}
var ki = Df;
function Df(e, t) {
  if (!e) throw new Error(t || "Assertion failed");
}
Df.equal = function(t, r, i) {
  if (t != r) throw new Error(i || "Assertion failed: " + t + " != " + r);
};
var fe = lr(function(e, t) {
  var r = t;
  function i(h, p) {
    if (Array.isArray(h)) return h.slice();
    if (!h) return [];
    var A = [];
    if (typeof h != "string") {
      for (var v = 0; v < h.length; v++) A[v] = h[v] | 0;
      return A;
    }
    if (p === "hex") {
      h = h.replace(/[^a-z0-9]+/ig, ""), h.length % 2 !== 0 && (h = "0" + h);
      for (var v = 0; v < h.length; v += 2) A.push(parseInt(h[v] + h[v + 1], 16));
    } else for (var v = 0; v < h.length; v++) {
      var w = h.charCodeAt(v), y2 = w >> 8, S = w & 255;
      y2 ? A.push(y2, S) : A.push(S);
    }
    return A;
  }
  r.toArray = i;
  function n(h) {
    return h.length === 1 ? "0" + h : h;
  }
  r.zero2 = n;
  function o(h) {
    for (var p = "", A = 0; A < h.length; A++) p += n(h[A].toString(16));
    return p;
  }
  r.toHex = o, r.encode = function(p, A) {
    return A === "hex" ? o(p) : p;
  };
});
var Gt = lr(function(e, t) {
  var r = t;
  r.assert = ki, r.toArray = fe.toArray, r.zero2 = fe.zero2, r.toHex = fe.toHex, r.encode = fe.encode;
  function i(A, v, w) {
    var y2 = new Array(Math.max(A.bitLength(), w) + 1);
    y2.fill(0);
    for (var S = 1 << v + 1, I = A.clone(), N = 0; N < y2.length; N++) {
      var C2, F = I.andln(S - 1);
      I.isOdd() ? (F > (S >> 1) - 1 ? C2 = (S >> 1) - F : C2 = F, I.isubn(C2)) : C2 = 0, y2[N] = C2, I.iushrn(1);
    }
    return y2;
  }
  r.getNAF = i;
  function n(A, v) {
    var w = [[], []];
    A = A.clone(), v = v.clone();
    for (var y2 = 0, S = 0, I; A.cmpn(-y2) > 0 || v.cmpn(-S) > 0; ) {
      var N = A.andln(3) + y2 & 3, C2 = v.andln(3) + S & 3;
      N === 3 && (N = -1), C2 === 3 && (C2 = -1);
      var F;
      N & 1 ? (I = A.andln(7) + y2 & 7, (I === 3 || I === 5) && C2 === 2 ? F = -N : F = N) : F = 0, w[0].push(F);
      var U;
      C2 & 1 ? (I = v.andln(7) + S & 7, (I === 3 || I === 5) && N === 2 ? U = -C2 : U = C2) : U = 0, w[1].push(U), 2 * y2 === F + 1 && (y2 = 1 - y2), 2 * S === U + 1 && (S = 1 - S), A.iushrn(1), v.iushrn(1);
    }
    return w;
  }
  r.getJSF = n;
  function o(A, v, w) {
    var y2 = "_" + v;
    A.prototype[v] = function() {
      return this[y2] !== void 0 ? this[y2] : this[y2] = w.call(this);
    };
  }
  r.cachedProperty = o;
  function h(A) {
    return typeof A == "string" ? r.toArray(A, "hex") : A;
  }
  r.parseBytes = h;
  function p(A) {
    return new K(A, "hex", "le");
  }
  r.intFromLE = p;
});
var Hr = Gt.getNAF;
var La = Gt.getJSF;
var Lr = Gt.assert;
function Ce(e, t) {
  this.type = e, this.p = new K(t.p, 16), this.red = t.prime ? K.red(t.prime) : K.mont(this.p), this.zero = new K(0).toRed(this.red), this.one = new K(1).toRed(this.red), this.two = new K(2).toRed(this.red), this.n = t.n && new K(t.n, 16), this.g = t.g && this.pointFromJSON(t.g, t.gRed), this._wnafT1 = new Array(4), this._wnafT2 = new Array(4), this._wnafT3 = new Array(4), this._wnafT4 = new Array(4), this._bitLength = this.n ? this.n.bitLength() : 0;
  var r = this.n && this.p.div(this.n);
  !r || r.cmpn(100) > 0 ? this.redN = null : (this._maxwellTrick = true, this.redN = this.n.toRed(this.red));
}
var Ze = Ce;
Ce.prototype.point = function() {
  throw new Error("Not implemented");
}, Ce.prototype.validate = function() {
  throw new Error("Not implemented");
}, Ce.prototype._fixedNafMul = function(t, r) {
  Lr(t.precomputed);
  var i = t._getDoubles(), n = Hr(r, 1, this._bitLength), o = (1 << i.step + 1) - (i.step % 2 === 0 ? 2 : 1);
  o /= 3;
  var h = [], p, A;
  for (p = 0; p < n.length; p += i.step) {
    A = 0;
    for (var v = p + i.step - 1; v >= p; v--) A = (A << 1) + n[v];
    h.push(A);
  }
  for (var w = this.jpoint(null, null, null), y2 = this.jpoint(null, null, null), S = o; S > 0; S--) {
    for (p = 0; p < h.length; p++) A = h[p], A === S ? y2 = y2.mixedAdd(i.points[p]) : A === -S && (y2 = y2.mixedAdd(i.points[p].neg()));
    w = w.add(y2);
  }
  return w.toP();
}, Ce.prototype._wnafMul = function(t, r) {
  var i = 4, n = t._getNAFPoints(i);
  i = n.wnd;
  for (var o = n.points, h = Hr(r, i, this._bitLength), p = this.jpoint(null, null, null), A = h.length - 1; A >= 0; A--) {
    for (var v = 0; A >= 0 && h[A] === 0; A--) v++;
    if (A >= 0 && v++, p = p.dblp(v), A < 0) break;
    var w = h[A];
    Lr(w !== 0), t.type === "affine" ? w > 0 ? p = p.mixedAdd(o[w - 1 >> 1]) : p = p.mixedAdd(o[-w - 1 >> 1].neg()) : w > 0 ? p = p.add(o[w - 1 >> 1]) : p = p.add(o[-w - 1 >> 1].neg());
  }
  return t.type === "affine" ? p.toP() : p;
}, Ce.prototype._wnafMulAdd = function(t, r, i, n, o) {
  var h = this._wnafT1, p = this._wnafT2, A = this._wnafT3, v = 0, w, y2, S;
  for (w = 0; w < n; w++) {
    S = r[w];
    var I = S._getNAFPoints(t);
    h[w] = I.wnd, p[w] = I.points;
  }
  for (w = n - 1; w >= 1; w -= 2) {
    var N = w - 1, C2 = w;
    if (h[N] !== 1 || h[C2] !== 1) {
      A[N] = Hr(i[N], h[N], this._bitLength), A[C2] = Hr(i[C2], h[C2], this._bitLength), v = Math.max(A[N].length, v), v = Math.max(A[C2].length, v);
      continue;
    }
    var F = [r[N], null, null, r[C2]];
    r[N].y.cmp(r[C2].y) === 0 ? (F[1] = r[N].add(r[C2]), F[2] = r[N].toJ().mixedAdd(r[C2].neg())) : r[N].y.cmp(r[C2].y.redNeg()) === 0 ? (F[1] = r[N].toJ().mixedAdd(r[C2]), F[2] = r[N].add(r[C2].neg())) : (F[1] = r[N].toJ().mixedAdd(r[C2]), F[2] = r[N].toJ().mixedAdd(r[C2].neg()));
    var U = [-3, -1, -5, -7, 0, 7, 5, 1, 3], J = La(i[N], i[C2]);
    for (v = Math.max(J[0].length, v), A[N] = new Array(v), A[C2] = new Array(v), y2 = 0; y2 < v; y2++) {
      var Bt = J[0][y2] | 0, G = J[1][y2] | 0;
      A[N][y2] = U[(Bt + 1) * 3 + (G + 1)], A[C2][y2] = 0, p[N] = F;
    }
  }
  var H = this.jpoint(null, null, null), L = this._wnafT4;
  for (w = v; w >= 0; w--) {
    for (var Pt = 0; w >= 0; ) {
      var W = true;
      for (y2 = 0; y2 < n; y2++) L[y2] = A[y2][w] | 0, L[y2] !== 0 && (W = false);
      if (!W) break;
      Pt++, w--;
    }
    if (w >= 0 && Pt++, H = H.dblp(Pt), w < 0) break;
    for (y2 = 0; y2 < n; y2++) {
      var Rt = L[y2];
      Rt !== 0 && (Rt > 0 ? S = p[y2][Rt - 1 >> 1] : Rt < 0 && (S = p[y2][-Rt - 1 >> 1].neg()), S.type === "affine" ? H = H.mixedAdd(S) : H = H.add(S));
    }
  }
  for (w = 0; w < n; w++) p[w] = null;
  return o ? H : H.toP();
};
function $t(e, t) {
  this.curve = e, this.type = t, this.precomputed = null;
}
Ce.BasePoint = $t, $t.prototype.eq = function() {
  throw new Error("Not implemented");
}, $t.prototype.validate = function() {
  return this.curve.validate(this);
}, Ce.prototype.decodePoint = function(t, r) {
  t = Gt.toArray(t, r);
  var i = this.p.byteLength();
  if ((t[0] === 4 || t[0] === 6 || t[0] === 7) && t.length - 1 === 2 * i) {
    t[0] === 6 ? Lr(t[t.length - 1] % 2 === 0) : t[0] === 7 && Lr(t[t.length - 1] % 2 === 1);
    var n = this.point(t.slice(1, 1 + i), t.slice(1 + i, 1 + 2 * i));
    return n;
  } else if ((t[0] === 2 || t[0] === 3) && t.length - 1 === i) return this.pointFromX(t.slice(1, 1 + i), t[0] === 3);
  throw new Error("Unknown point format");
}, $t.prototype.encodeCompressed = function(t) {
  return this.encode(t, true);
}, $t.prototype._encode = function(t) {
  var r = this.curve.p.byteLength(), i = this.getX().toArray("be", r);
  return t ? [this.getY().isEven() ? 2 : 3].concat(i) : [4].concat(i, this.getY().toArray("be", r));
}, $t.prototype.encode = function(t, r) {
  return Gt.encode(this._encode(r), t);
}, $t.prototype.precompute = function(t) {
  if (this.precomputed) return this;
  var r = { doubles: null, naf: null, beta: null };
  return r.naf = this._getNAFPoints(8), r.doubles = this._getDoubles(4, t), r.beta = this._getBeta(), this.precomputed = r, this;
}, $t.prototype._hasDoubles = function(t) {
  if (!this.precomputed) return false;
  var r = this.precomputed.doubles;
  return r ? r.points.length >= Math.ceil((t.bitLength() + 1) / r.step) : false;
}, $t.prototype._getDoubles = function(t, r) {
  if (this.precomputed && this.precomputed.doubles) return this.precomputed.doubles;
  for (var i = [this], n = this, o = 0; o < r; o += t) {
    for (var h = 0; h < t; h++) n = n.dbl();
    i.push(n);
  }
  return { step: t, points: i };
}, $t.prototype._getNAFPoints = function(t) {
  if (this.precomputed && this.precomputed.naf) return this.precomputed.naf;
  for (var r = [this], i = (1 << t) - 1, n = i === 1 ? null : this.dbl(), o = 1; o < i; o++) r[o] = r[o - 1].add(n);
  return { wnd: t, points: r };
}, $t.prototype._getBeta = function() {
  return null;
}, $t.prototype.dblp = function(t) {
  for (var r = this, i = 0; i < t; i++) r = r.dbl();
  return r;
};
var qi = lr(function(e) {
  typeof Object.create == "function" ? e.exports = function(r, i) {
    i && (r.super_ = i, r.prototype = Object.create(i.prototype, { constructor: { value: r, enumerable: false, writable: true, configurable: true } }));
  } : e.exports = function(r, i) {
    if (i) {
      r.super_ = i;
      var n = function() {
      };
      n.prototype = i.prototype, r.prototype = new n(), r.prototype.constructor = r;
    }
  };
});
var za = Gt.assert;
function te(e) {
  Ze.call(this, "short", e), this.a = new K(e.a, 16).toRed(this.red), this.b = new K(e.b, 16).toRed(this.red), this.tinv = this.two.redInvm(), this.zeroA = this.a.fromRed().cmpn(0) === 0, this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0, this.endo = this._getEndomorphism(e), this._endoWnafT1 = new Array(4), this._endoWnafT2 = new Array(4);
}
qi(te, Ze);
var ja = te;
te.prototype._getEndomorphism = function(t) {
  if (!(!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)) {
    var r, i;
    if (t.beta) r = new K(t.beta, 16).toRed(this.red);
    else {
      var n = this._getEndoRoots(this.p);
      r = n[0].cmp(n[1]) < 0 ? n[0] : n[1], r = r.toRed(this.red);
    }
    if (t.lambda) i = new K(t.lambda, 16);
    else {
      var o = this._getEndoRoots(this.n);
      this.g.mul(o[0]).x.cmp(this.g.x.redMul(r)) === 0 ? i = o[0] : (i = o[1], za(this.g.mul(i).x.cmp(this.g.x.redMul(r)) === 0));
    }
    var h;
    return t.basis ? h = t.basis.map(function(p) {
      return { a: new K(p.a, 16), b: new K(p.b, 16) };
    }) : h = this._getEndoBasis(i), { beta: r, lambda: i, basis: h };
  }
}, te.prototype._getEndoRoots = function(t) {
  var r = t === this.p ? this.red : K.mont(t), i = new K(2).toRed(r).redInvm(), n = i.redNeg(), o = new K(3).toRed(r).redNeg().redSqrt().redMul(i), h = n.redAdd(o).fromRed(), p = n.redSub(o).fromRed();
  return [h, p];
}, te.prototype._getEndoBasis = function(t) {
  for (var r = this.n.ushrn(Math.floor(this.n.bitLength() / 2)), i = t, n = this.n.clone(), o = new K(1), h = new K(0), p = new K(0), A = new K(1), v, w, y2, S, I, N, C2, F = 0, U, J; i.cmpn(0) !== 0; ) {
    var Bt = n.div(i);
    U = n.sub(Bt.mul(i)), J = p.sub(Bt.mul(o));
    var G = A.sub(Bt.mul(h));
    if (!y2 && U.cmp(r) < 0) v = C2.neg(), w = o, y2 = U.neg(), S = J;
    else if (y2 && ++F === 2) break;
    C2 = U, n = i, i = U, p = o, o = J, A = h, h = G;
  }
  I = U.neg(), N = J;
  var H = y2.sqr().add(S.sqr()), L = I.sqr().add(N.sqr());
  return L.cmp(H) >= 0 && (I = v, N = w), y2.negative && (y2 = y2.neg(), S = S.neg()), I.negative && (I = I.neg(), N = N.neg()), [{ a: y2, b: S }, { a: I, b: N }];
}, te.prototype._endoSplit = function(t) {
  var r = this.endo.basis, i = r[0], n = r[1], o = n.b.mul(t).divRound(this.n), h = i.b.neg().mul(t).divRound(this.n), p = o.mul(i.a), A = h.mul(n.a), v = o.mul(i.b), w = h.mul(n.b), y2 = t.sub(p).sub(A), S = v.add(w).neg();
  return { k1: y2, k2: S };
}, te.prototype.pointFromX = function(t, r) {
  t = new K(t, 16), t.red || (t = t.toRed(this.red));
  var i = t.redSqr().redMul(t).redIAdd(t.redMul(this.a)).redIAdd(this.b), n = i.redSqrt();
  if (n.redSqr().redSub(i).cmp(this.zero) !== 0) throw new Error("invalid point");
  var o = n.fromRed().isOdd();
  return (r && !o || !r && o) && (n = n.redNeg()), this.point(t, n);
}, te.prototype.validate = function(t) {
  if (t.inf) return true;
  var r = t.x, i = t.y, n = this.a.redMul(r), o = r.redSqr().redMul(r).redIAdd(n).redIAdd(this.b);
  return i.redSqr().redISub(o).cmpn(0) === 0;
}, te.prototype._endoWnafMulAdd = function(t, r, i) {
  for (var n = this._endoWnafT1, o = this._endoWnafT2, h = 0; h < t.length; h++) {
    var p = this._endoSplit(r[h]), A = t[h], v = A._getBeta();
    p.k1.negative && (p.k1.ineg(), A = A.neg(true)), p.k2.negative && (p.k2.ineg(), v = v.neg(true)), n[h * 2] = A, n[h * 2 + 1] = v, o[h * 2] = p.k1, o[h * 2 + 1] = p.k2;
  }
  for (var w = this._wnafMulAdd(1, n, o, h * 2, i), y2 = 0; y2 < h * 2; y2++) n[y2] = null, o[y2] = null;
  return w;
};
function Ft(e, t, r, i) {
  Ze.BasePoint.call(this, e, "affine"), t === null && r === null ? (this.x = null, this.y = null, this.inf = true) : (this.x = new K(t, 16), this.y = new K(r, 16), i && (this.x.forceRed(this.curve.red), this.y.forceRed(this.curve.red)), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.inf = false);
}
qi(Ft, Ze.BasePoint), te.prototype.point = function(t, r, i) {
  return new Ft(this, t, r, i);
}, te.prototype.pointFromJSON = function(t, r) {
  return Ft.fromJSON(this, t, r);
}, Ft.prototype._getBeta = function() {
  if (this.curve.endo) {
    var t = this.precomputed;
    if (t && t.beta) return t.beta;
    var r = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);
    if (t) {
      var i = this.curve, n = function(o) {
        return i.point(o.x.redMul(i.endo.beta), o.y);
      };
      t.beta = r, r.precomputed = { beta: null, naf: t.naf && { wnd: t.naf.wnd, points: t.naf.points.map(n) }, doubles: t.doubles && { step: t.doubles.step, points: t.doubles.points.map(n) } };
    }
    return r;
  }
}, Ft.prototype.toJSON = function() {
  return this.precomputed ? [this.x, this.y, this.precomputed && { doubles: this.precomputed.doubles && { step: this.precomputed.doubles.step, points: this.precomputed.doubles.points.slice(1) }, naf: this.precomputed.naf && { wnd: this.precomputed.naf.wnd, points: this.precomputed.naf.points.slice(1) } }] : [this.x, this.y];
}, Ft.fromJSON = function(t, r, i) {
  typeof r == "string" && (r = JSON.parse(r));
  var n = t.point(r[0], r[1], i);
  if (!r[2]) return n;
  function o(p) {
    return t.point(p[0], p[1], i);
  }
  var h = r[2];
  return n.precomputed = { beta: null, doubles: h.doubles && { step: h.doubles.step, points: [n].concat(h.doubles.points.map(o)) }, naf: h.naf && { wnd: h.naf.wnd, points: [n].concat(h.naf.points.map(o)) } }, n;
}, Ft.prototype.inspect = function() {
  return this.isInfinity() ? "<EC Point Infinity>" : "<EC Point x: " + this.x.fromRed().toString(16, 2) + " y: " + this.y.fromRed().toString(16, 2) + ">";
}, Ft.prototype.isInfinity = function() {
  return this.inf;
}, Ft.prototype.add = function(t) {
  if (this.inf) return t;
  if (t.inf) return this;
  if (this.eq(t)) return this.dbl();
  if (this.neg().eq(t)) return this.curve.point(null, null);
  if (this.x.cmp(t.x) === 0) return this.curve.point(null, null);
  var r = this.y.redSub(t.y);
  r.cmpn(0) !== 0 && (r = r.redMul(this.x.redSub(t.x).redInvm()));
  var i = r.redSqr().redISub(this.x).redISub(t.x), n = r.redMul(this.x.redSub(i)).redISub(this.y);
  return this.curve.point(i, n);
}, Ft.prototype.dbl = function() {
  if (this.inf) return this;
  var t = this.y.redAdd(this.y);
  if (t.cmpn(0) === 0) return this.curve.point(null, null);
  var r = this.curve.a, i = this.x.redSqr(), n = t.redInvm(), o = i.redAdd(i).redIAdd(i).redIAdd(r).redMul(n), h = o.redSqr().redISub(this.x.redAdd(this.x)), p = o.redMul(this.x.redSub(h)).redISub(this.y);
  return this.curve.point(h, p);
}, Ft.prototype.getX = function() {
  return this.x.fromRed();
}, Ft.prototype.getY = function() {
  return this.y.fromRed();
}, Ft.prototype.mul = function(t) {
  return t = new K(t, 16), this.isInfinity() ? this : this._hasDoubles(t) ? this.curve._fixedNafMul(this, t) : this.curve.endo ? this.curve._endoWnafMulAdd([this], [t]) : this.curve._wnafMul(this, t);
}, Ft.prototype.mulAdd = function(t, r, i) {
  var n = [this, r], o = [t, i];
  return this.curve.endo ? this.curve._endoWnafMulAdd(n, o) : this.curve._wnafMulAdd(1, n, o, 2);
}, Ft.prototype.jmulAdd = function(t, r, i) {
  var n = [this, r], o = [t, i];
  return this.curve.endo ? this.curve._endoWnafMulAdd(n, o, true) : this.curve._wnafMulAdd(1, n, o, 2, true);
}, Ft.prototype.eq = function(t) {
  return this === t || this.inf === t.inf && (this.inf || this.x.cmp(t.x) === 0 && this.y.cmp(t.y) === 0);
}, Ft.prototype.neg = function(t) {
  if (this.inf) return this;
  var r = this.curve.point(this.x, this.y.redNeg());
  if (t && this.precomputed) {
    var i = this.precomputed, n = function(o) {
      return o.neg();
    };
    r.precomputed = { naf: i.naf && { wnd: i.naf.wnd, points: i.naf.points.map(n) }, doubles: i.doubles && { step: i.doubles.step, points: i.doubles.points.map(n) } };
  }
  return r;
}, Ft.prototype.toJ = function() {
  if (this.inf) return this.curve.jpoint(null, null, null);
  var t = this.curve.jpoint(this.x, this.y, this.curve.one);
  return t;
};
function Tt(e, t, r, i) {
  Ze.BasePoint.call(this, e, "jacobian"), t === null && r === null && i === null ? (this.x = this.curve.one, this.y = this.curve.one, this.z = new K(0)) : (this.x = new K(t, 16), this.y = new K(r, 16), this.z = new K(i, 16)), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.z.red || (this.z = this.z.toRed(this.curve.red)), this.zOne = this.z === this.curve.one;
}
qi(Tt, Ze.BasePoint), te.prototype.jpoint = function(t, r, i) {
  return new Tt(this, t, r, i);
}, Tt.prototype.toP = function() {
  if (this.isInfinity()) return this.curve.point(null, null);
  var t = this.z.redInvm(), r = t.redSqr(), i = this.x.redMul(r), n = this.y.redMul(r).redMul(t);
  return this.curve.point(i, n);
}, Tt.prototype.neg = function() {
  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);
}, Tt.prototype.add = function(t) {
  if (this.isInfinity()) return t;
  if (t.isInfinity()) return this;
  var r = t.z.redSqr(), i = this.z.redSqr(), n = this.x.redMul(r), o = t.x.redMul(i), h = this.y.redMul(r.redMul(t.z)), p = t.y.redMul(i.redMul(this.z)), A = n.redSub(o), v = h.redSub(p);
  if (A.cmpn(0) === 0) return v.cmpn(0) !== 0 ? this.curve.jpoint(null, null, null) : this.dbl();
  var w = A.redSqr(), y2 = w.redMul(A), S = n.redMul(w), I = v.redSqr().redIAdd(y2).redISub(S).redISub(S), N = v.redMul(S.redISub(I)).redISub(h.redMul(y2)), C2 = this.z.redMul(t.z).redMul(A);
  return this.curve.jpoint(I, N, C2);
}, Tt.prototype.mixedAdd = function(t) {
  if (this.isInfinity()) return t.toJ();
  if (t.isInfinity()) return this;
  var r = this.z.redSqr(), i = this.x, n = t.x.redMul(r), o = this.y, h = t.y.redMul(r).redMul(this.z), p = i.redSub(n), A = o.redSub(h);
  if (p.cmpn(0) === 0) return A.cmpn(0) !== 0 ? this.curve.jpoint(null, null, null) : this.dbl();
  var v = p.redSqr(), w = v.redMul(p), y2 = i.redMul(v), S = A.redSqr().redIAdd(w).redISub(y2).redISub(y2), I = A.redMul(y2.redISub(S)).redISub(o.redMul(w)), N = this.z.redMul(p);
  return this.curve.jpoint(S, I, N);
}, Tt.prototype.dblp = function(t) {
  if (t === 0) return this;
  if (this.isInfinity()) return this;
  if (!t) return this.dbl();
  var r;
  if (this.curve.zeroA || this.curve.threeA) {
    var i = this;
    for (r = 0; r < t; r++) i = i.dbl();
    return i;
  }
  var n = this.curve.a, o = this.curve.tinv, h = this.x, p = this.y, A = this.z, v = A.redSqr().redSqr(), w = p.redAdd(p);
  for (r = 0; r < t; r++) {
    var y2 = h.redSqr(), S = w.redSqr(), I = S.redSqr(), N = y2.redAdd(y2).redIAdd(y2).redIAdd(n.redMul(v)), C2 = h.redMul(S), F = N.redSqr().redISub(C2.redAdd(C2)), U = C2.redISub(F), J = N.redMul(U);
    J = J.redIAdd(J).redISub(I);
    var Bt = w.redMul(A);
    r + 1 < t && (v = v.redMul(I)), h = F, A = Bt, w = J;
  }
  return this.curve.jpoint(h, w.redMul(o), A);
}, Tt.prototype.dbl = function() {
  return this.isInfinity() ? this : this.curve.zeroA ? this._zeroDbl() : this.curve.threeA ? this._threeDbl() : this._dbl();
}, Tt.prototype._zeroDbl = function() {
  var t, r, i;
  if (this.zOne) {
    var n = this.x.redSqr(), o = this.y.redSqr(), h = o.redSqr(), p = this.x.redAdd(o).redSqr().redISub(n).redISub(h);
    p = p.redIAdd(p);
    var A = n.redAdd(n).redIAdd(n), v = A.redSqr().redISub(p).redISub(p), w = h.redIAdd(h);
    w = w.redIAdd(w), w = w.redIAdd(w), t = v, r = A.redMul(p.redISub(v)).redISub(w), i = this.y.redAdd(this.y);
  } else {
    var y2 = this.x.redSqr(), S = this.y.redSqr(), I = S.redSqr(), N = this.x.redAdd(S).redSqr().redISub(y2).redISub(I);
    N = N.redIAdd(N);
    var C2 = y2.redAdd(y2).redIAdd(y2), F = C2.redSqr(), U = I.redIAdd(I);
    U = U.redIAdd(U), U = U.redIAdd(U), t = F.redISub(N).redISub(N), r = C2.redMul(N.redISub(t)).redISub(U), i = this.y.redMul(this.z), i = i.redIAdd(i);
  }
  return this.curve.jpoint(t, r, i);
}, Tt.prototype._threeDbl = function() {
  var t, r, i;
  if (this.zOne) {
    var n = this.x.redSqr(), o = this.y.redSqr(), h = o.redSqr(), p = this.x.redAdd(o).redSqr().redISub(n).redISub(h);
    p = p.redIAdd(p);
    var A = n.redAdd(n).redIAdd(n).redIAdd(this.curve.a), v = A.redSqr().redISub(p).redISub(p);
    t = v;
    var w = h.redIAdd(h);
    w = w.redIAdd(w), w = w.redIAdd(w), r = A.redMul(p.redISub(v)).redISub(w), i = this.y.redAdd(this.y);
  } else {
    var y2 = this.z.redSqr(), S = this.y.redSqr(), I = this.x.redMul(S), N = this.x.redSub(y2).redMul(this.x.redAdd(y2));
    N = N.redAdd(N).redIAdd(N);
    var C2 = I.redIAdd(I);
    C2 = C2.redIAdd(C2);
    var F = C2.redAdd(C2);
    t = N.redSqr().redISub(F), i = this.y.redAdd(this.z).redSqr().redISub(S).redISub(y2);
    var U = S.redSqr();
    U = U.redIAdd(U), U = U.redIAdd(U), U = U.redIAdd(U), r = N.redMul(C2.redISub(t)).redISub(U);
  }
  return this.curve.jpoint(t, r, i);
}, Tt.prototype._dbl = function() {
  var t = this.curve.a, r = this.x, i = this.y, n = this.z, o = n.redSqr().redSqr(), h = r.redSqr(), p = i.redSqr(), A = h.redAdd(h).redIAdd(h).redIAdd(t.redMul(o)), v = r.redAdd(r);
  v = v.redIAdd(v);
  var w = v.redMul(p), y2 = A.redSqr().redISub(w.redAdd(w)), S = w.redISub(y2), I = p.redSqr();
  I = I.redIAdd(I), I = I.redIAdd(I), I = I.redIAdd(I);
  var N = A.redMul(S).redISub(I), C2 = i.redAdd(i).redMul(n);
  return this.curve.jpoint(y2, N, C2);
}, Tt.prototype.trpl = function() {
  if (!this.curve.zeroA) return this.dbl().add(this);
  var t = this.x.redSqr(), r = this.y.redSqr(), i = this.z.redSqr(), n = r.redSqr(), o = t.redAdd(t).redIAdd(t), h = o.redSqr(), p = this.x.redAdd(r).redSqr().redISub(t).redISub(n);
  p = p.redIAdd(p), p = p.redAdd(p).redIAdd(p), p = p.redISub(h);
  var A = p.redSqr(), v = n.redIAdd(n);
  v = v.redIAdd(v), v = v.redIAdd(v), v = v.redIAdd(v);
  var w = o.redIAdd(p).redSqr().redISub(h).redISub(A).redISub(v), y2 = r.redMul(w);
  y2 = y2.redIAdd(y2), y2 = y2.redIAdd(y2);
  var S = this.x.redMul(A).redISub(y2);
  S = S.redIAdd(S), S = S.redIAdd(S);
  var I = this.y.redMul(w.redMul(v.redISub(w)).redISub(p.redMul(A)));
  I = I.redIAdd(I), I = I.redIAdd(I), I = I.redIAdd(I);
  var N = this.z.redAdd(p).redSqr().redISub(i).redISub(A);
  return this.curve.jpoint(S, I, N);
}, Tt.prototype.mul = function(t, r) {
  return t = new K(t, r), this.curve._wnafMul(this, t);
}, Tt.prototype.eq = function(t) {
  if (t.type === "affine") return this.eq(t.toJ());
  if (this === t) return true;
  var r = this.z.redSqr(), i = t.z.redSqr();
  if (this.x.redMul(i).redISub(t.x.redMul(r)).cmpn(0) !== 0) return false;
  var n = r.redMul(this.z), o = i.redMul(t.z);
  return this.y.redMul(o).redISub(t.y.redMul(n)).cmpn(0) === 0;
}, Tt.prototype.eqXToP = function(t) {
  var r = this.z.redSqr(), i = t.toRed(this.curve.red).redMul(r);
  if (this.x.cmp(i) === 0) return true;
  for (var n = t.clone(), o = this.curve.redN.redMul(r); ; ) {
    if (n.iadd(this.curve.n), n.cmp(this.curve.p) >= 0) return false;
    if (i.redIAdd(o), this.x.cmp(i) === 0) return true;
  }
}, Tt.prototype.inspect = function() {
  return this.isInfinity() ? "<EC JPoint Infinity>" : "<EC JPoint x: " + this.x.toString(16, 2) + " y: " + this.y.toString(16, 2) + " z: " + this.z.toString(16, 2) + ">";
}, Tt.prototype.isInfinity = function() {
  return this.z.cmpn(0) === 0;
};
var zr = lr(function(e, t) {
  var r = t;
  r.base = Ze, r.short = ja, r.mont = null, r.edwards = null;
});
var jr = lr(function(e, t) {
  var r = t, i = Gt.assert;
  function n(p) {
    p.type === "short" ? this.curve = new zr.short(p) : p.type === "edwards" ? this.curve = new zr.edwards(p) : this.curve = new zr.mont(p), this.g = this.curve.g, this.n = this.curve.n, this.hash = p.hash, i(this.g.validate(), "Invalid curve"), i(this.g.mul(this.n).isInfinity(), "Invalid curve, G*N != O");
  }
  r.PresetCurve = n;
  function o(p, A) {
    Object.defineProperty(r, p, { configurable: true, enumerable: true, get: function() {
      var v = new n(A);
      return Object.defineProperty(r, p, { configurable: true, enumerable: true, value: v }), v;
    } });
  }
  o("p192", { type: "short", prime: "p192", p: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff", a: "ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc", b: "64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1", n: "ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831", hash: se.sha256, gRed: false, g: ["188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012", "07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811"] }), o("p224", { type: "short", prime: "p224", p: "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001", a: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe", b: "b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4", n: "ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d", hash: se.sha256, gRed: false, g: ["b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21", "bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34"] }), o("p256", { type: "short", prime: null, p: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff", a: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc", b: "5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b", n: "ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551", hash: se.sha256, gRed: false, g: ["6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296", "4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5"] }), o("p384", { type: "short", prime: null, p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 ffffffff", a: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 fffffffc", b: "b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f 5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef", n: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 f4372ddf 581a0db2 48b0a77a ecec196a ccc52973", hash: se.sha384, gRed: false, g: ["aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 5502f25d bf55296c 3a545e38 72760ab7", "3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 0a60b1ce 1d7e819d 7a431d7c 90ea0e5f"] }), o("p521", { type: "short", prime: null, p: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff", a: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffc", b: "00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b 99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd 3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00", n: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409", hash: se.sha512, gRed: false, g: ["000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66", "00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 3fad0761 353c7086 a272c240 88be9476 9fd16650"] }), o("curve25519", { type: "mont", prime: "p25519", p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed", a: "76d06", b: "1", n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed", hash: se.sha256, gRed: false, g: ["9"] }), o("ed25519", { type: "edwards", prime: "p25519", p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed", a: "-1", c: "1", d: "52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3", n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed", hash: se.sha256, gRed: false, g: ["216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a", "6666666666666666666666666666666666666666666666666666666666666658"] });
  var h;
  try {
    h = null.crash();
  } catch {
    h = void 0;
  }
  o("secp256k1", { type: "short", prime: "k256", p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f", a: "0", b: "7", n: "ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141", h: "1", hash: se.sha256, beta: "7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee", lambda: "5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72", basis: [{ a: "3086d221a7d46bcde86c90e49284eb15", b: "-e4437ed6010e88286f547fa90abfe4c3" }, { a: "114ca50f7a8e2f3f657c1108d9d44cfd8", b: "3086d221a7d46bcde86c90e49284eb15" }], gRed: false, g: ["79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798", "483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8", h] });
});
function Re(e) {
  if (!(this instanceof Re)) return new Re(e);
  this.hash = e.hash, this.predResist = !!e.predResist, this.outLen = this.hash.outSize, this.minEntropy = e.minEntropy || this.hash.hmacStrength, this._reseed = null, this.reseedInterval = null, this.K = null, this.V = null;
  var t = fe.toArray(e.entropy, e.entropyEnc || "hex"), r = fe.toArray(e.nonce, e.nonceEnc || "hex"), i = fe.toArray(e.pers, e.persEnc || "hex");
  ki(t.length >= this.minEntropy / 8, "Not enough entropy. Minimum is: " + this.minEntropy + " bits"), this._init(t, r, i);
}
var Ff = Re;
Re.prototype._init = function(t, r, i) {
  var n = t.concat(r).concat(i);
  this.K = new Array(this.outLen / 8), this.V = new Array(this.outLen / 8);
  for (var o = 0; o < this.V.length; o++) this.K[o] = 0, this.V[o] = 1;
  this._update(n), this._reseed = 1, this.reseedInterval = 281474976710656;
}, Re.prototype._hmac = function() {
  return new se.hmac(this.hash, this.K);
}, Re.prototype._update = function(t) {
  var r = this._hmac().update(this.V).update([0]);
  t && (r = r.update(t)), this.K = r.digest(), this.V = this._hmac().update(this.V).digest(), t && (this.K = this._hmac().update(this.V).update([1]).update(t).digest(), this.V = this._hmac().update(this.V).digest());
}, Re.prototype.reseed = function(t, r, i, n) {
  typeof r != "string" && (n = i, i = r, r = null), t = fe.toArray(t, r), i = fe.toArray(i, n), ki(t.length >= this.minEntropy / 8, "Not enough entropy. Minimum is: " + this.minEntropy + " bits"), this._update(t.concat(i || [])), this._reseed = 1;
}, Re.prototype.generate = function(t, r, i, n) {
  if (this._reseed > this.reseedInterval) throw new Error("Reseed is required");
  typeof r != "string" && (n = i, i = r, r = null), i && (i = fe.toArray(i, n || "hex"), this._update(i));
  for (var o = []; o.length < t; ) this.V = this._hmac().update(this.V).digest(), o = o.concat(this.V);
  var h = o.slice(0, t);
  return this._update(i), this._reseed++, fe.encode(h, r);
};
var Ki = Gt.assert;
function kt(e, t) {
  this.ec = e, this.priv = null, this.pub = null, t.priv && this._importPrivate(t.priv, t.privEnc), t.pub && this._importPublic(t.pub, t.pubEnc);
}
var Hi = kt;
kt.fromPublic = function(t, r, i) {
  return r instanceof kt ? r : new kt(t, { pub: r, pubEnc: i });
}, kt.fromPrivate = function(t, r, i) {
  return r instanceof kt ? r : new kt(t, { priv: r, privEnc: i });
}, kt.prototype.validate = function() {
  var t = this.getPublic();
  return t.isInfinity() ? { result: false, reason: "Invalid public key" } : t.validate() ? t.mul(this.ec.curve.n).isInfinity() ? { result: true, reason: null } : { result: false, reason: "Public key * N != O" } : { result: false, reason: "Public key is not a point" };
}, kt.prototype.getPublic = function(t, r) {
  return typeof t == "string" && (r = t, t = null), this.pub || (this.pub = this.ec.g.mul(this.priv)), r ? this.pub.encode(r, t) : this.pub;
}, kt.prototype.getPrivate = function(t) {
  return t === "hex" ? this.priv.toString(16, 2) : this.priv;
}, kt.prototype._importPrivate = function(t, r) {
  this.priv = new K(t, r || 16), this.priv = this.priv.umod(this.ec.curve.n);
}, kt.prototype._importPublic = function(t, r) {
  if (t.x || t.y) {
    this.ec.curve.type === "mont" ? Ki(t.x, "Need x coordinate") : (this.ec.curve.type === "short" || this.ec.curve.type === "edwards") && Ki(t.x && t.y, "Need both x and y coordinate"), this.pub = this.ec.curve.point(t.x, t.y);
    return;
  }
  this.pub = this.ec.curve.decodePoint(t, r);
}, kt.prototype.derive = function(t) {
  return t.validate() || Ki(t.validate(), "public point not validated"), t.mul(this.priv).getX();
}, kt.prototype.sign = function(t, r, i) {
  return this.ec.sign(t, this, r, i);
}, kt.prototype.verify = function(t, r) {
  return this.ec.verify(t, r, this);
}, kt.prototype.inspect = function() {
  return "<Key priv: " + (this.priv && this.priv.toString(16, 2)) + " pub: " + (this.pub && this.pub.inspect()) + " >";
};
var Qa = Gt.assert;
function Qr(e, t) {
  if (e instanceof Qr) return e;
  this._importDER(e, t) || (Qa(e.r && e.s, "Signature without r or s"), this.r = new K(e.r, 16), this.s = new K(e.s, 16), e.recoveryParam === void 0 ? this.recoveryParam = null : this.recoveryParam = e.recoveryParam);
}
var Jr = Qr;
function Ja() {
  this.place = 0;
}
function Li(e, t) {
  var r = e[t.place++];
  if (!(r & 128)) return r;
  var i = r & 15;
  if (i === 0 || i > 4) return false;
  for (var n = 0, o = 0, h = t.place; o < i; o++, h++) n <<= 8, n |= e[h], n >>>= 0;
  return n <= 127 ? false : (t.place = h, n);
}
function Tf(e) {
  for (var t = 0, r = e.length - 1; !e[t] && !(e[t + 1] & 128) && t < r; ) t++;
  return t === 0 ? e : e.slice(t);
}
Qr.prototype._importDER = function(t, r) {
  t = Gt.toArray(t, r);
  var i = new Ja();
  if (t[i.place++] !== 48) return false;
  var n = Li(t, i);
  if (n === false || n + i.place !== t.length || t[i.place++] !== 2) return false;
  var o = Li(t, i);
  if (o === false) return false;
  var h = t.slice(i.place, o + i.place);
  if (i.place += o, t[i.place++] !== 2) return false;
  var p = Li(t, i);
  if (p === false || t.length !== p + i.place) return false;
  var A = t.slice(i.place, p + i.place);
  if (h[0] === 0) if (h[1] & 128) h = h.slice(1);
  else return false;
  if (A[0] === 0) if (A[1] & 128) A = A.slice(1);
  else return false;
  return this.r = new K(h), this.s = new K(A), this.recoveryParam = null, true;
};
function zi(e, t) {
  if (t < 128) {
    e.push(t);
    return;
  }
  var r = 1 + (Math.log(t) / Math.LN2 >>> 3);
  for (e.push(r | 128); --r; ) e.push(t >>> (r << 3) & 255);
  e.push(t);
}
Qr.prototype.toDER = function(t) {
  var r = this.r.toArray(), i = this.s.toArray();
  for (r[0] & 128 && (r = [0].concat(r)), i[0] & 128 && (i = [0].concat(i)), r = Tf(r), i = Tf(i); !i[0] && !(i[1] & 128); ) i = i.slice(1);
  var n = [2];
  zi(n, r.length), n = n.concat(r), n.push(2), zi(n, i.length);
  var o = n.concat(i), h = [48];
  return zi(h, o.length), h = h.concat(o), Gt.encode(h, t);
};
var Ga = function() {
  throw new Error("unsupported");
};
var Uf = Gt.assert;
function ee(e) {
  if (!(this instanceof ee)) return new ee(e);
  typeof e == "string" && (Uf(Object.prototype.hasOwnProperty.call(jr, e), "Unknown curve " + e), e = jr[e]), e instanceof jr.PresetCurve && (e = { curve: e }), this.curve = e.curve.curve, this.n = this.curve.n, this.nh = this.n.ushrn(1), this.g = this.curve.g, this.g = e.curve.g, this.g.precompute(e.curve.n.bitLength() + 1), this.hash = e.hash || e.curve.hash;
}
var Ya = ee;
ee.prototype.keyPair = function(t) {
  return new Hi(this, t);
}, ee.prototype.keyFromPrivate = function(t, r) {
  return Hi.fromPrivate(this, t, r);
}, ee.prototype.keyFromPublic = function(t, r) {
  return Hi.fromPublic(this, t, r);
}, ee.prototype.genKeyPair = function(t) {
  t || (t = {});
  for (var r = new Ff({ hash: this.hash, pers: t.pers, persEnc: t.persEnc || "utf8", entropy: t.entropy || Ga(this.hash.hmacStrength), entropyEnc: t.entropy && t.entropyEnc || "utf8", nonce: this.n.toArray() }), i = this.n.byteLength(), n = this.n.sub(new K(2)); ; ) {
    var o = new K(r.generate(i));
    if (!(o.cmp(n) > 0)) return o.iaddn(1), this.keyFromPrivate(o);
  }
}, ee.prototype._truncateToN = function(t, r) {
  var i = t.byteLength() * 8 - this.n.bitLength();
  return i > 0 && (t = t.ushrn(i)), !r && t.cmp(this.n) >= 0 ? t.sub(this.n) : t;
}, ee.prototype.sign = function(t, r, i, n) {
  typeof i == "object" && (n = i, i = null), n || (n = {}), r = this.keyFromPrivate(r, i), t = this._truncateToN(new K(t, 16));
  for (var o = this.n.byteLength(), h = r.getPrivate().toArray("be", o), p = t.toArray("be", o), A = new Ff({ hash: this.hash, entropy: h, nonce: p, pers: n.pers, persEnc: n.persEnc || "utf8" }), v = this.n.sub(new K(1)), w = 0; ; w++) {
    var y2 = n.k ? n.k(w) : new K(A.generate(this.n.byteLength()));
    if (y2 = this._truncateToN(y2, true), !(y2.cmpn(1) <= 0 || y2.cmp(v) >= 0)) {
      var S = this.g.mul(y2);
      if (!S.isInfinity()) {
        var I = S.getX(), N = I.umod(this.n);
        if (N.cmpn(0) !== 0) {
          var C2 = y2.invm(this.n).mul(N.mul(r.getPrivate()).iadd(t));
          if (C2 = C2.umod(this.n), C2.cmpn(0) !== 0) {
            var F = (S.getY().isOdd() ? 1 : 0) | (I.cmp(N) !== 0 ? 2 : 0);
            return n.canonical && C2.cmp(this.nh) > 0 && (C2 = this.n.sub(C2), F ^= 1), new Jr({ r: N, s: C2, recoveryParam: F });
          }
        }
      }
    }
  }
}, ee.prototype.verify = function(t, r, i, n) {
  t = this._truncateToN(new K(t, 16)), i = this.keyFromPublic(i, n), r = new Jr(r, "hex");
  var o = r.r, h = r.s;
  if (o.cmpn(1) < 0 || o.cmp(this.n) >= 0 || h.cmpn(1) < 0 || h.cmp(this.n) >= 0) return false;
  var p = h.invm(this.n), A = p.mul(t).umod(this.n), v = p.mul(o).umod(this.n), w;
  return this.curve._maxwellTrick ? (w = this.g.jmulAdd(A, i.getPublic(), v), w.isInfinity() ? false : w.eqXToP(o)) : (w = this.g.mulAdd(A, i.getPublic(), v), w.isInfinity() ? false : w.getX().umod(this.n).cmp(o) === 0);
}, ee.prototype.recoverPubKey = function(e, t, r, i) {
  Uf((3 & r) === r, "The recovery param is more than two bits"), t = new Jr(t, i);
  var n = this.n, o = new K(e), h = t.r, p = t.s, A = r & 1, v = r >> 1;
  if (h.cmp(this.curve.p.umod(this.curve.n)) >= 0 && v) throw new Error("Unable to find sencond key candinate");
  v ? h = this.curve.pointFromX(h.add(this.curve.n), A) : h = this.curve.pointFromX(h, A);
  var w = t.r.invm(n), y2 = n.sub(o).mul(w).umod(n), S = p.mul(w).umod(n);
  return this.g.mulAdd(y2, h, S);
}, ee.prototype.getKeyRecoveryParam = function(e, t, r, i) {
  if (t = new Jr(t, i), t.recoveryParam !== null) return t.recoveryParam;
  for (var n = 0; n < 4; n++) {
    var o;
    try {
      o = this.recoverPubKey(e, t, n);
    } catch {
      continue;
    }
    if (o.eq(r)) return n;
  }
  throw new Error("Unable to find valid recovery factor");
};
var Va = lr(function(e, t) {
  var r = t;
  r.version = "6.5.4", r.utils = Gt, r.rand = function() {
    throw new Error("unsupported");
  }, r.curve = zr, r.curves = jr, r.ec = Ya, r.eddsa = null;
});
var Wa = Va.ec;
var Xa = "signing-key/5.7.0";
var ji = new z(Xa);
var tu = "transactions/5.7.0";
new z(tu);
var qf;
(function(e) {
  e[e.legacy = 0] = "legacy", e[e.eip2930 = 1] = "eip2930", e[e.eip1559 = 2] = "eip1559";
})(qf || (qf = {}));

// node_modules/@web3modal/base/dist/esm/adapters/evm/wagmi/utils/helpers.js
function getCaipDefaultChain(chain) {
  if (!chain) {
    return void 0;
  }
  return {
    id: `${ConstantsUtil2.EIP155}:${chain.id}`,
    name: chain.name,
    imageId: PresetsUtil.EIP155NetworkImageIds[chain.id],
    chain: ConstantsUtil.CHAIN.EVM
  };
}
async function getWalletConnectCaipNetworks(connector) {
  var _a2, _b, _c, _d;
  if (!connector) {
    throw new Error("networkControllerClient:getApprovedCaipNetworks - connector is undefined");
  }
  const provider = await (connector == null ? void 0 : connector.getProvider());
  const ns = (_b = (_a2 = provider == null ? void 0 : provider.signer) == null ? void 0 : _a2.session) == null ? void 0 : _b.namespaces;
  const nsMethods = (_c = ns == null ? void 0 : ns[ConstantsUtil2.EIP155]) == null ? void 0 : _c.methods;
  const nsChains = xn(((_d = ns == null ? void 0 : ns[ConstantsUtil2.EIP155]) == null ? void 0 : _d.accounts) || []);
  return {
    supportsAllNetworks: Boolean(nsMethods == null ? void 0 : nsMethods.includes(ConstantsUtil2.ADD_CHAIN_METHOD)),
    approvedCaipNetworkIds: nsChains
  };
}
function getEmailCaipNetworks() {
  return {
    supportsAllNetworks: false,
    approvedCaipNetworkIds: PresetsUtil.WalletConnectRpcChainIds.map((id) => `${ConstantsUtil2.EIP155}:${id}`)
  };
}
function getTransport({ chain, projectId }) {
  var _a2, _b;
  const RPC_URL = CoreHelperUtil.getBlockchainApiUrl();
  const chainDefaultUrl = (_b = (_a2 = chain.rpcUrls[0]) == null ? void 0 : _a2.http) == null ? void 0 : _b[0];
  if (!PresetsUtil.WalletConnectRpcChainIds.includes(chain.id)) {
    return http(chainDefaultUrl);
  }
  return fallback([
    http(`${RPC_URL}/v1/?chainId=${ConstantsUtil2.EIP155}:${chain.id}&projectId=${projectId}`, {
      fetchOptions: {
        headers: {
          "Content-Type": "text/plain"
        }
      }
    }),
    http(chainDefaultUrl)
  ]);
}
function requireCaipAddress(caipAddress) {
  if (!caipAddress) {
    throw new Error("No CAIP address provided");
  }
  const account = caipAddress.split(":")[2];
  if (!account) {
    throw new Error("Invalid CAIP address");
  }
  return account;
}

// node_modules/@adraffy/ens-normalize/dist/index.mjs
var COMPRESSED$1 = "";
var FENCED = /* @__PURE__ */ new Map([[8217, "apostrophe"], [8260, "fraction slash"], [12539, "middle dot"]]);
var NSM_MAX = 4;
function decode_arithmetic(bytes) {
  let pos = 0;
  function u16() {
    return bytes[pos++] << 8 | bytes[pos++];
  }
  let symbol_count = u16();
  let total = 1;
  let acc = [0, 1];
  for (let i = 1; i < symbol_count; i++) {
    acc.push(total += u16());
  }
  let skip = u16();
  let pos_payload = pos;
  pos += skip;
  let read_width = 0;
  let read_buffer = 0;
  function read_bit() {
    if (read_width == 0) {
      read_buffer = read_buffer << 8 | bytes[pos++];
      read_width = 8;
    }
    return read_buffer >> --read_width & 1;
  }
  const N = 31;
  const FULL = 2 ** N;
  const HALF = FULL >>> 1;
  const QRTR = HALF >> 1;
  const MASK = FULL - 1;
  let register = 0;
  for (let i = 0; i < N; i++) register = register << 1 | read_bit();
  let symbols = [];
  let low = 0;
  let range = FULL;
  while (true) {
    let value = Math.floor(((register - low + 1) * total - 1) / range);
    let start = 0;
    let end = symbol_count;
    while (end - start > 1) {
      let mid = start + end >>> 1;
      if (value < acc[mid]) {
        end = mid;
      } else {
        start = mid;
      }
    }
    if (start == 0) break;
    symbols.push(start);
    let a = low + Math.floor(range * acc[start] / total);
    let b = low + Math.floor(range * acc[start + 1] / total) - 1;
    while (((a ^ b) & HALF) == 0) {
      register = register << 1 & MASK | read_bit();
      a = a << 1 & MASK;
      b = b << 1 & MASK | 1;
    }
    while (a & ~b & QRTR) {
      register = register & HALF | register << 1 & MASK >>> 1 | read_bit();
      a = a << 1 ^ HALF;
      b = (b ^ HALF) << 1 | HALF | 1;
    }
    low = a;
    range = 1 + b - a;
  }
  let offset = symbol_count - 4;
  return symbols.map((x2) => {
    switch (x2 - offset) {
      case 3:
        return offset + 65792 + (bytes[pos_payload++] << 16 | bytes[pos_payload++] << 8 | bytes[pos_payload++]);
      case 2:
        return offset + 256 + (bytes[pos_payload++] << 8 | bytes[pos_payload++]);
      case 1:
        return offset + bytes[pos_payload++];
      default:
        return x2 - 1;
    }
  });
}
function read_payload(v) {
  let pos = 0;
  return () => v[pos++];
}
function read_compressed_payload(s) {
  return read_payload(decode_arithmetic(unsafe_atob(s)));
}
function unsafe_atob(s) {
  let lookup = [];
  [..."ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"].forEach((c, i) => lookup[c.charCodeAt(0)] = i);
  let n = s.length;
  let ret = new Uint8Array(6 * n >> 3);
  for (let i = 0, pos = 0, width = 0, carry = 0; i < n; i++) {
    carry = carry << 6 | lookup[s.charCodeAt(i)];
    width += 6;
    if (width >= 8) {
      ret[pos++] = carry >> (width -= 8);
    }
  }
  return ret;
}
function signed(i) {
  return i & 1 ? ~i >> 1 : i >> 1;
}
function read_deltas(n, next) {
  let v = Array(n);
  for (let i = 0, x2 = 0; i < n; i++) v[i] = x2 += signed(next());
  return v;
}
function read_sorted(next, prev = 0) {
  let ret = [];
  while (true) {
    let x2 = next();
    let n = next();
    if (!n) break;
    prev += x2;
    for (let i = 0; i < n; i++) {
      ret.push(prev + i);
    }
    prev += n + 1;
  }
  return ret;
}
function read_sorted_arrays(next) {
  return read_array_while(() => {
    let v = read_sorted(next);
    if (v.length) return v;
  });
}
function read_mapped(next) {
  let ret = [];
  while (true) {
    let w = next();
    if (w == 0) break;
    ret.push(read_linear_table(w, next));
  }
  while (true) {
    let w = next() - 1;
    if (w < 0) break;
    ret.push(read_replacement_table(w, next));
  }
  return ret.flat();
}
function read_array_while(next) {
  let v = [];
  while (true) {
    let x2 = next(v.length);
    if (!x2) break;
    v.push(x2);
  }
  return v;
}
function read_transposed(n, w, next) {
  let m = Array(n).fill().map(() => []);
  for (let i = 0; i < w; i++) {
    read_deltas(n, next).forEach((x2, j2) => m[j2].push(x2));
  }
  return m;
}
function read_linear_table(w, next) {
  let dx = 1 + next();
  let dy = next();
  let vN = read_array_while(next);
  let m = read_transposed(vN.length, 1 + w, next);
  return m.flatMap((v, i) => {
    let [x2, ...ys] = v;
    return Array(vN[i]).fill().map((_, j2) => {
      let j_dy = j2 * dy;
      return [x2 + j2 * dx, ys.map((y2) => y2 + j_dy)];
    });
  });
}
function read_replacement_table(w, next) {
  let n = 1 + next();
  let m = read_transposed(n, 1 + w, next);
  return m.map((v) => [v[0], v.slice(1)]);
}
function read_trie(next) {
  let ret = [];
  let sorted = read_sorted(next);
  expand(decode([]), []);
  return ret;
  function decode(Q2) {
    let S = next();
    let B = read_array_while(() => {
      let cps = read_sorted(next).map((i) => sorted[i]);
      if (cps.length) return decode(cps);
    });
    return { S, B, Q: Q2 };
  }
  function expand({ S, B }, cps, saved) {
    if (S & 4 && saved === cps[cps.length - 1]) return;
    if (S & 2) saved = cps[cps.length - 1];
    if (S & 1) ret.push(cps);
    for (let br2 of B) {
      for (let cp of br2.Q) {
        expand(br2, [...cps, cp], saved);
      }
    }
  }
}
function hex_cp(cp) {
  return cp.toString(16).toUpperCase().padStart(2, "0");
}
function quote_cp(cp) {
  return `{${hex_cp(cp)}}`;
}
function explode_cp(s) {
  let cps = [];
  for (let pos = 0, len = s.length; pos < len; ) {
    let cp = s.codePointAt(pos);
    pos += cp < 65536 ? 1 : 2;
    cps.push(cp);
  }
  return cps;
}
function str_from_cps(cps) {
  const chunk = 4096;
  let len = cps.length;
  if (len < chunk) return String.fromCodePoint(...cps);
  let buf = [];
  for (let i = 0; i < len; ) {
    buf.push(String.fromCodePoint(...cps.slice(i, i += chunk)));
  }
  return buf.join("");
}
function compare_arrays(a, b) {
  let n = a.length;
  let c = n - b.length;
  for (let i = 0; c == 0 && i < n; i++) c = a[i] - b[i];
  return c;
}
var COMPRESSED = "AEUDTAHBCFQATQDRADAAcgAgADQAFAAsABQAHwAOACQADQARAAoAFwAHABIACAAPAAUACwAFAAwABAAQAAMABwAEAAoABQAIAAIACgABAAQAFAALAAIACwABAAIAAQAHAAMAAwAEAAsADAAMAAwACgANAA0AAwAKAAkABAAdAAYAZwDSAdsDJgC0CkMB8xhZAqfoC190UGcThgBurwf7PT09Pb09AjgJum8OjDllxHYUKXAPxzq6tABAxgK8ysUvWAgMPT09PT09PSs6LT2HcgWXWwFLoSMEEEl5RFVMKvO0XQ8ExDdJMnIgsj26PTQyy8FfEQ8AY8IPAGcEbwRwBHEEcgRzBHQEdQR2BHcEeAR6BHsEfAR+BIAEgfndBQoBYgULAWIFDAFiBNcE2ATZBRAFEQUvBdALFAsVDPcNBw13DYcOMA4xDjMB4BllHI0B2grbAMDpHLkQ7QHVAPRNQQFnGRUEg0yEB2uaJF8AJpIBpob5AERSMAKNoAXqaQLUBMCzEiACnwRZEkkVsS7tANAsBG0RuAQLEPABv9HICTUBXigPZwRBApMDOwAamhtaABqEAY8KvKx3LQ4ArAB8UhwEBAVSagD8AEFZADkBIadVj2UMUgx5Il4ANQC9AxIB1BlbEPMAs30CGxlXAhwZKQIECBc6EbsCoxngzv7UzRQA8M0BawL6ZwkN7wABAD33OQRcsgLJCjMCjqUChtw/km+NAsXPAoP2BT84PwURAK0RAvptb6cApQS/OMMey5HJS84UdxpxTPkCogVFITaTOwERAK5pAvkNBOVyA7q3BKlOJSALAgUIBRcEdASpBXqzABXFSWZOawLCOqw//AolCZdvv3dSBkEQGyelEPcMMwG1ATsN7UvYBPEGOwTJH30ZGQ/NlZwIpS3dDO0m4y6hgFoj9SqDBe1L9DzdC01RaA9ZC2UJ4zpjgU4DIQENIosK3Q05CG0Q8wrJaw3lEUUHOQPVSZoApQcBCxEdNRW1JhBirAsJOXcG+xr2C48mrxMpevwF0xohBk0BKRr/AM8u54WwWjFcHE9fBgMLJSPHFKhQIA0lQLd4SBobBxUlqQKRQ3BKh1E2HpMh9jw9DWYuE1F8B/U8BRlPC4E8nkarRQ4R0j6NPUgiSUwsBDV/LC8niwnPD4UMuXxyAVkJIQmxDHETMREXN8UIOQcZLZckJxUIIUaVYJoE958D8xPRAwsFPwlBBxMDtRwtEy4VKQUNgSTXAvM21S6zAo9WgAEXBcsPJR/fEFBH4A7pCJsCZQODJesALRUhABcimwhDYwBfj9hTBS7LCMdqbCN0A2cU52ERcweRDlcHpxwzFb8c4XDIXguGCCijrwlbAXUJmQFfBOMICTVbjKAgQWdTi1gYmyBhQT9d/AIxDGUVn0S9h3gCiw9rEhsBNQFzBzkNAQJ3Ee0RaxCVCOuGBDW1M/g6JQRPIYMgEQonA09szgsnJvkM+GkBoxJiAww0PXfuZ6tgtiQX/QcZMsVBYCHxC5JPzQycGsEYQlQuGeQHvwPzGvMn6kFXBf8DowMTOk0z7gS9C2kIiwk/AEkOoxcH1xhqCnGM0AExiwG3mQNXkYMCb48GNwcLAGcLhwV55QAdAqcIowAFAM8DVwA5Aq0HnQAZAIVBAT0DJy8BIeUCjwOTCDHLAZUvAfMpBBvDDBUA9zduSgLDsQKAamaiBd1YAo4CSTUBTSUEBU5HUQOvceEA2wBLBhPfRwEVq0rLGuNDAd9vKwDHAPsABTUHBUEBzQHzbQC3AV8LMQmis7UBTekpAIMAFWsB1wKJAN0ANQB/8QFTAE0FWfkF0wJPSQERMRgrV2EBuwMfATMBDQB5BsuNpckHHwRtB9MCEBsV4QLvLge1AQMi3xPNQsUCvd5VoWACZIECYkJbTa9bNyACofcCaJgCZgkCn4Q4GwsCZjsCZiYEbgR/A38TA36SOQY5dxc5gjojIwJsHQIyNjgKAm3HAm2u74ozZ0UrAWcA3gDhAEoFB5gMjQD+C8IADbUCdy8CdqI/AnlLQwJ4uh1c20WuRtcCfD8CesgCfQkCfPAFWQUgSABIfWMkAoFtAoAAAoAFAn+uSVhKWxUXSswC0QEC0MxLJwOITwOH5kTFkTIC8qFdAwMDrkvOTC0lA89NTE2vAos/AorYwRsHHUNnBbcCjjcCjlxAl4ECjtkCjlx4UbRTNQpS1FSFApP7ApMMAOkAHFUeVa9V0AYsGymVhjLheGZFOzkCl58C77JYIagAWSUClo8ClnycAKlZrFoJgU0AOwKWtQKWTlxEXNECmcsCmWRcyl0HGQKcmznCOp0CnBYCn5sCnriKAB0PMSoPAp3xAp6SALU9YTRh7wKe0wKgbgGpAp6fHwKeTqVjyGQnJSsCJ68CJn4CoPsCoEwCot0CocQCpi8Cpc4Cp/8AfQKn8mh8aLEAA0lqHGrRAqzjAqyuAq1nAq0CAlcdAlXcArHh1wMfTmyXArK9DQKy6Bds4G1jbUhfAyXNArZcOz9ukAMpRQK4XgK5RxUCuSp3cDZw4QK9GQK72nCWAzIRAr6IcgIDM3ECvhpzInNPAsPLAsMEc4J0SzVFdOADPKcDPJoDPb8CxXwCxkcCxhCJAshpUQLIRALJTwLJLgJknQLd0nh5YXiueSVL0AMYo2cCAmH0GfOVJHsLXpJeuxECz2sCz2wvS1PS8xOfAMatAs9zASnqA04SfksFAtwnAtuKAtJPA1JcA1NfAQEDVYyAiT8AyxbtYEWCHILTgs6DjQLaxwLZ3oQQhEmnPAOGpQAvA2QOhnFZ+QBVAt9lAt64c3cC4i/tFAHzMCcB9JsB8tKHAuvzAulweQLq+QLq5AD5RwG5Au6JAuuclqqXAwLuPwOF4Jh5cOBxoQLzAwBpA44WmZMC9xMDkW4DkocC95gC+dkC+GaaHJqruzebHgOdgwL++gEbADmfHJ+zAwWNA6ZqA6bZANHFAwZqoYiiBQkDDEkCwAA/AwDhQRdTARHzA2sHl2cFAJMtK7evvdsBiZkUfxEEOQH7KQUhDp0JnwCS/SlXxQL3AZ0AtwW5AG8LbUEuFCaNLgFDAYD8AbUmAHUDDgRtACwCFgyhAAAKAj0CagPdA34EkQEgRQUhfAoABQBEABMANhICdwEABdUDa+8KxQIA9wqfJ7+xt+UBkSFBQgHpFH8RNMCJAAQAGwBaAkUChIsABjpTOpSNbQC4Oo860ACNOME63AClAOgAywE6gTo7Ofw5+Tt2iTpbO56JOm85GAFWATMBbAUvNV01njWtNWY1dTW2NcU1gjWRNdI14TWeNa017jX9NbI1wTYCNhE1xjXVNhY2JzXeNe02LjY9Ni41LSE2OjY9Njw2yTcIBJA8VzY4Nt03IDcPNsogN4k3MAoEsDxnNiQ3GTdsOo03IULUQwdC4EMLHA8PCZsobShRVQYA6X8A6bABFCnXAukBowC9BbcAbwNzBL8MDAMMAQgDAAkKCwsLCQoGBAVVBI/DvwDz9b29kaUCb0QtsRTNLt4eGBcSHAMZFhYZEhYEARAEBUEcQRxBHEEcQRxBHEEaQRxBHEFCSTxBPElISUhBNkM2QTYbNklISVmBVIgBFLWZAu0BhQCjBcEAbykBvwGJAaQcEZ0ePCklMAAhMvAIMAL54gC7Bm8EescjzQMpARQpKgDUABavAj626xQAJP0A3etzuf4NNRA7efy2Z9NQrCnC0OSyANz5BBIbJ5IFDR6miIavYS6tprjjmuKebxm5C74Q225X1pkaYYPb6f1DK4k3xMEBb9S2WMjEibTNWhsRJIA+vwNVEiXTE5iXs/wezV66oFLfp9NZGYW+Gk19J2+bCT6Ye2w6LDYdgzKMUabk595eLBCXANz9HUpWbATq9vqXVx9XDg+Pc9Xp4+bsS005SVM/BJBM4687WUuf+Uj9dEi8aDNaPxtpbDxcG1THTImUMZq4UCaaNYpsVqraNyKLJXDYsFZ/5jl7bLRtO88t7P3xZaAxhb5OdPMXqsSkp1WCieG8jXm1U99+blvLlXzPCS+M93VnJCiK+09LfaSaBAVBomyDgJua8dfUzR7ga34IvR2Nvj+A9heJ6lsl1KG4NkI1032Cnff1m1wof2B9oHJK4bi6JkEdSqeNeiuo6QoZZincoc73/TH9SXF8sCE7XyuYyW8WSgbGFCjPV0ihLKhdPs08Tx82fYAkLLc4I2wdl4apY7GU5lHRFzRWJep7Ww3wbeA3qmd59/86P4xuNaqDpygXt6M85glSBHOCGgJDnt+pN9bK7HApMguX6+06RZNjzVmcZJ+wcUrJ9//bpRNxNuKpNl9uFds+S9tdx7LaM5ZkIrPj6nIU9mnbFtVbs9s/uLgl8MVczAwet+iOEzzBlYW7RCMgE6gyNLeq6+1tIx4dpgZnd0DksJS5f+JNDpwwcPNXaaVspq1fbQajOrJgK0ofKtJ1Ne90L6VO4MOl5S886p7u6xo7OLjG8TGL+HU1JXGJgppg4nNbNJ5nlzSpuPYy21JUEcUA94PoFiZfjZue+QnyQ80ekOuZVkxx4g+cvhJfHgNl4hy1/a6+RKcKlar/J29y//EztlbVPHVUeQ1zX86eQVAjR/M3dA9w4W8LfaXp4EgM85wOWasli837PzVMOnsLzR+k3o75/lRPAJSE1xAKQzEi5v10ke+VBvRt1cwQRMd+U5mLCTGVd6XiZtgBG5cDi0w22GKcVNvHiu5LQbZEDVtz0onn7k5+heuKXVsZtSzilkLRAUmjMXEMB3J9YC50XBxPiz53SC+EhnPl9WsKCv92SM/OFFIMJZYfl0WW8tIO3UxYcwdMAj7FSmgrsZ2aAZO03BOhP1bNNZItyXYQFTpC3SG1VuPDqH9GkiCDmE+JwxyIVSO5siDErAOpEXFgjy6PQtOVDj+s6e1r8heWVvmZnTciuf4EiNZzCAd7SOMhXERIOlsHIMG399i9aLTy3m2hRLZjJVDNLS53iGIK11dPqQt0zBDyg6qc7YqkDm2M5Ve6dCWCaCbTXX2rToaIgz6+zh4lYUi/+6nqcFMAkQJKHYLK0wYk5N9szV6xihDbDDFr45lN1K4aCXBq/FitPSud9gLt5ZVn+ZqGX7cwm2z5EGMgfFpIFyhGGuDPmso6TItTMwny+7uPnLCf4W6goFQFV0oQSsc9VfMmVLcLr6ZetDZbaSFTLqnSO/bIPjA3/zAUoqgGFAEQS4IhuMzEp2I3jJzbzkk/IEmyax+rhZTwd6f+CGtwPixu8IvzACquPWPREu9ZvGkUzpRwvRRuaNN6cr0W1wWits9ICdYJ7ltbgMiSL3sTPeufgNcVqMVWFkCPDH4jG2jA0XcVgQj62Cb29v9f/z/+2KbYvIv/zzjpQAPkliaVDzNrW57TZ/ZOyZD0nlfMmAIBIAGAI0D3k/mdN4xr9v85ZbZbbqfH2jGd5hUqNZWwl5SPfoGmfElmazUIeNL1j/mkF7VNAzTq4jNt8JoQ11NQOcmhprXoxSxfRGJ9LDEOAQ+dmxAQH90iti9e2u/MoeuaGcDTHoC+xsmEeWmxEKefQuIzHbpw5Tc5cEocboAD09oipWQhtTO1wivf/O+DRe2rpl/E9wlrzBorjJsOeG1B/XPW4EaJEFdNlECEZga5ZoGRHXgYouGRuVkm8tDESiEyFNo+3s5M5puSdTyUL2llnINVHEt91XUNW4ewdMgJ4boJfEyt/iY5WXqbA+A2Fkt5Z0lutiWhe9nZIyIUjyXDC3UsaG1t+eNx6z4W/OYoTB7A6x+dNSTOi9AInctbESqm5gvOLww7OWXPrmHwVZasrl4eD113pm+JtT7JVOvnCXqdzzdTRHgJ0PiGTFYW5Gvt9R9LD6Lzfs0v/TZZHSmyVNq7viIHE6DBK7Qp07Iz55EM8SYtQvZf/obBniTWi5C2/ovHfw4VndkE5XYdjOhCMRjDeOEfXeN/CwfGduiUIfsoFeUxXeQXba7c7972XNv8w+dTjjUM0QeNAReW+J014dKAD/McQYXT7c0GQPIkn3Ll6R7gGjuiQoZD0TEeEqQpKoZ15g/0OPQI17QiSv9AUROa/V/TQN3dvLArec3RrsYlvBm1b8LWzltdugsC50lNKYLEp2a+ZZYqPejULRlOJh5zj/LVMyTDvwKhMxxwuDkxJ1QpoNI0OTWLom4Z71SNzI9TV1iXJrIu9Wcnd+MCaAw8o1jSXd94YU/1gnkrC9BUEOtQvEIQ7g0i6h+KL2JKk8Ydl7HruvgWMSAmNe+LshGhV4qnWHhO9/RIPQzY1tHRj2VqOyNsDpK0cww+56AdDC4gsWwY0XxoucIWIqs/GcwnWqlaT0KPr8mbK5U94/301i1WLt4YINTVvCFBrFZbIbY8eycOdeJ2teD5IfPLCRg7jjcFTwlMFNl9zdh/o3E/hHPwj7BWg0MU09pPrBLbrCgm54A6H+I6v27+jL5gkjWg/iYdks9jbfVP5y/n0dlgWEMlKasl7JvFZd56LfybW1eeaVO0gxTfXZwD8G4SI116yx7UKVRgui6Ya1YpixqXeNLc8IxtAwCU5IhwQgn+NqHnRaDv61CxKhOq4pOX7M6pkA+Pmpd4j1vn6ACUALoLLc4vpXci8VidLxzm7qFBe7s+quuJs6ETYmnpgS3LwSZxPIltgBDXz8M1k/W2ySNv2f9/NPhxLGK2D21dkHeSGmenRT3Yqcdl0m/h3OYr8V+lXNYGf8aCCpd4bWjE4QIPj7vUKN4Nrfs7ML6Y2OyS830JCnofg/k7lpFpt4SqZc5HGg1HCOrHvOdC8bP6FGDbE/VV0mX4IakzbdS/op+Kt3G24/8QbBV7y86sGSQ/vZzU8FXs7u6jIvwchsEP2BpIhW3G8uWNwa3HmjfH/ZjhhCWvluAcF+nMf14ClKg5hGgtPLJ98ueNAkc5Hs2WZlk2QHvfreCK1CCGO6nMZVSb99VM/ajr8WHTte9JSmkXq/i/U943HEbdzW6Re/S88dKgg8pGOLlAeNiqrcLkUR3/aClFpMXcOUP3rmETcWSfMXZE3TUOi8i+fqRnTYLflVx/Vb/6GJ7eIRZUA6k3RYR3iFSK9c4iDdNwJuZL2FKz/IK5VimcNWEqdXjSoxSgmF0UPlDoUlNrPcM7ftmA8Y9gKiqKEHuWN+AZRIwtVSxye2Kf8rM3lhJ5XcBXU9n4v0Oy1RU2M+4qM8AQPVwse8ErNSob5oFPWxuqZnVzo1qB/IBxkM3EVUKFUUlO3e51259GgNcJbCmlvrdjtoTW7rChm1wyCKzpCTwozUUEOIcWLneRLgMXh+SjGSFkAllzbGS5HK7LlfCMRNRDSvbQPjcXaenNYxCvu2Qyznz6StuxVj66SgI0T8B6/sfHAJYZaZ78thjOSIFumNWLQbeZixDCCC+v0YBtkxiBB3jefHqZ/dFHU+crbj6OvS1x/JDD7vlm7zOVPwpUC01nhxZuY/63E7g";
var S02 = 44032;
var L02 = 4352;
var V02 = 4449;
var T02 = 4519;
var L_COUNT = 19;
var V_COUNT = 21;
var T_COUNT = 28;
var N_COUNT = V_COUNT * T_COUNT;
var S_COUNT = L_COUNT * N_COUNT;
var S1 = S02 + S_COUNT;
var L1 = L02 + L_COUNT;
var V1 = V02 + V_COUNT;
var T1 = T02 + T_COUNT;
function unpack_cc(packed) {
  return packed >> 24 & 255;
}
function unpack_cp(packed) {
  return packed & 16777215;
}
var SHIFTED_RANK;
var EXCLUSIONS;
var DECOMP;
var RECOMP;
function init$1() {
  let r = read_compressed_payload(COMPRESSED);
  SHIFTED_RANK = new Map(read_sorted_arrays(r).flatMap((v, i) => v.map((x2) => [x2, i + 1 << 24])));
  EXCLUSIONS = new Set(read_sorted(r));
  DECOMP = /* @__PURE__ */ new Map();
  RECOMP = /* @__PURE__ */ new Map();
  for (let [cp, cps] of read_mapped(r)) {
    if (!EXCLUSIONS.has(cp) && cps.length == 2) {
      let [a, b] = cps;
      let bucket = RECOMP.get(a);
      if (!bucket) {
        bucket = /* @__PURE__ */ new Map();
        RECOMP.set(a, bucket);
      }
      bucket.set(b, cp);
    }
    DECOMP.set(cp, cps.reverse());
  }
}
function is_hangul(cp) {
  return cp >= S02 && cp < S1;
}
function compose_pair(a, b) {
  if (a >= L02 && a < L1 && b >= V02 && b < V1) {
    return S02 + (a - L02) * N_COUNT + (b - V02) * T_COUNT;
  } else if (is_hangul(a) && b > T02 && b < T1 && (a - S02) % T_COUNT == 0) {
    return a + (b - T02);
  } else {
    let recomp = RECOMP.get(a);
    if (recomp) {
      recomp = recomp.get(b);
      if (recomp) {
        return recomp;
      }
    }
    return -1;
  }
}
function decomposed(cps) {
  if (!SHIFTED_RANK) init$1();
  let ret = [];
  let buf = [];
  let check_order = false;
  function add(cp) {
    let cc = SHIFTED_RANK.get(cp);
    if (cc) {
      check_order = true;
      cp |= cc;
    }
    ret.push(cp);
  }
  for (let cp of cps) {
    while (true) {
      if (cp < 128) {
        ret.push(cp);
      } else if (is_hangul(cp)) {
        let s_index = cp - S02;
        let l_index = s_index / N_COUNT | 0;
        let v_index = s_index % N_COUNT / T_COUNT | 0;
        let t_index = s_index % T_COUNT;
        add(L02 + l_index);
        add(V02 + v_index);
        if (t_index > 0) add(T02 + t_index);
      } else {
        let mapped = DECOMP.get(cp);
        if (mapped) {
          buf.push(...mapped);
        } else {
          add(cp);
        }
      }
      if (!buf.length) break;
      cp = buf.pop();
    }
  }
  if (check_order && ret.length > 1) {
    let prev_cc = unpack_cc(ret[0]);
    for (let i = 1; i < ret.length; i++) {
      let cc = unpack_cc(ret[i]);
      if (cc == 0 || prev_cc <= cc) {
        prev_cc = cc;
        continue;
      }
      let j2 = i - 1;
      while (true) {
        let tmp = ret[j2 + 1];
        ret[j2 + 1] = ret[j2];
        ret[j2] = tmp;
        if (!j2) break;
        prev_cc = unpack_cc(ret[--j2]);
        if (prev_cc <= cc) break;
      }
      prev_cc = unpack_cc(ret[i]);
    }
  }
  return ret;
}
function composed_from_decomposed(v) {
  let ret = [];
  let stack = [];
  let prev_cp = -1;
  let prev_cc = 0;
  for (let packed of v) {
    let cc = unpack_cc(packed);
    let cp = unpack_cp(packed);
    if (prev_cp == -1) {
      if (cc == 0) {
        prev_cp = cp;
      } else {
        ret.push(cp);
      }
    } else if (prev_cc > 0 && prev_cc >= cc) {
      if (cc == 0) {
        ret.push(prev_cp, ...stack);
        stack.length = 0;
        prev_cp = cp;
      } else {
        stack.push(cp);
      }
      prev_cc = cc;
    } else {
      let composed = compose_pair(prev_cp, cp);
      if (composed >= 0) {
        prev_cp = composed;
      } else if (prev_cc == 0 && cc == 0) {
        ret.push(prev_cp);
        prev_cp = cp;
      } else {
        stack.push(cp);
        prev_cc = cc;
      }
    }
  }
  if (prev_cp >= 0) {
    ret.push(prev_cp, ...stack);
  }
  return ret;
}
function nfd(cps) {
  return decomposed(cps).map(unpack_cp);
}
function nfc(cps) {
  return composed_from_decomposed(decomposed(cps));
}
var HYPHEN = 45;
var STOP_CH = ".";
var FE0F = 65039;
var UNIQUE_PH = 1;
var Array_from = (x2) => Array.from(x2);
function group_has_cp(g, cp) {
  return g.P.has(cp) || g.Q.has(cp);
}
var Emoji = class extends Array {
  get is_emoji() {
    return true;
  }
  // free tagging system
};
var MAPPED;
var IGNORED;
var CM;
var NSM;
var ESCAPE;
var NFC_CHECK;
var GROUPS;
var WHOLE_VALID;
var WHOLE_MAP;
var VALID;
var EMOJI_LIST;
var EMOJI_ROOT;
function init() {
  if (MAPPED) return;
  let r = read_compressed_payload(COMPRESSED$1);
  const read_sorted_array = () => read_sorted(r);
  const read_sorted_set = () => new Set(read_sorted_array());
  MAPPED = new Map(read_mapped(r));
  IGNORED = read_sorted_set();
  CM = read_sorted_array();
  NSM = new Set(read_sorted_array().map((i) => CM[i]));
  CM = new Set(CM);
  ESCAPE = read_sorted_set();
  NFC_CHECK = read_sorted_set();
  let chunks = read_sorted_arrays(r);
  let unrestricted = r();
  const read_chunked = () => new Set(read_sorted_array().flatMap((i) => chunks[i]).concat(read_sorted_array()));
  GROUPS = read_array_while((i) => {
    let N = read_array_while(r).map((x2) => x2 + 96);
    if (N.length) {
      let R = i >= unrestricted;
      N[0] -= 32;
      N = str_from_cps(N);
      if (R) N = `Restricted[${N}]`;
      let P = read_chunked();
      let Q2 = read_chunked();
      let M = !r();
      return { N, P, Q: Q2, M, R };
    }
  });
  WHOLE_VALID = read_sorted_set();
  WHOLE_MAP = /* @__PURE__ */ new Map();
  let wholes = read_sorted_array().concat(Array_from(WHOLE_VALID)).sort((a, b) => a - b);
  wholes.forEach((cp, i) => {
    let d = r();
    let w = wholes[i] = d ? wholes[i - d] : { V: [], M: /* @__PURE__ */ new Map() };
    w.V.push(cp);
    if (!WHOLE_VALID.has(cp)) {
      WHOLE_MAP.set(cp, w);
    }
  });
  for (let { V: V2, M } of new Set(WHOLE_MAP.values())) {
    let recs = [];
    for (let cp of V2) {
      let gs = GROUPS.filter((g) => group_has_cp(g, cp));
      let rec = recs.find(({ G }) => gs.some((g) => G.has(g)));
      if (!rec) {
        rec = { G: /* @__PURE__ */ new Set(), V: [] };
        recs.push(rec);
      }
      rec.V.push(cp);
      gs.forEach((g) => rec.G.add(g));
    }
    let union2 = recs.flatMap((x2) => Array_from(x2.G));
    for (let { G, V: V3 } of recs) {
      let complement = new Set(union2.filter((g) => !G.has(g)));
      for (let cp of V3) {
        M.set(cp, complement);
      }
    }
  }
  let union = /* @__PURE__ */ new Set();
  let multi = /* @__PURE__ */ new Set();
  const add_to_union = (cp) => union.has(cp) ? multi.add(cp) : union.add(cp);
  for (let g of GROUPS) {
    for (let cp of g.P) add_to_union(cp);
    for (let cp of g.Q) add_to_union(cp);
  }
  for (let cp of union) {
    if (!WHOLE_MAP.has(cp) && !multi.has(cp)) {
      WHOLE_MAP.set(cp, UNIQUE_PH);
    }
  }
  VALID = new Set(Array_from(union).concat(Array_from(nfd(union))));
  EMOJI_LIST = read_trie(r).map((v) => Emoji.from(v)).sort(compare_arrays);
  EMOJI_ROOT = /* @__PURE__ */ new Map();
  for (let cps of EMOJI_LIST) {
    let prev = [EMOJI_ROOT];
    for (let cp of cps) {
      let next = prev.map((node) => {
        let child = node.get(cp);
        if (!child) {
          child = /* @__PURE__ */ new Map();
          node.set(cp, child);
        }
        return child;
      });
      if (cp === FE0F) {
        prev.push(...next);
      } else {
        prev = next;
      }
    }
    for (let x2 of prev) {
      x2.V = cps;
    }
  }
}
function quoted_cp(cp) {
  return (should_escape(cp) ? "" : `${bidi_qq(safe_str_from_cps([cp]))} `) + quote_cp(cp);
}
function bidi_qq(s) {
  return `"${s}"‎`;
}
function check_label_extension(cps) {
  if (cps.length >= 4 && cps[2] == HYPHEN && cps[3] == HYPHEN) {
    throw new Error(`invalid label extension: "${str_from_cps(cps.slice(0, 4))}"`);
  }
}
function check_leading_underscore(cps) {
  const UNDERSCORE = 95;
  for (let i = cps.lastIndexOf(UNDERSCORE); i > 0; ) {
    if (cps[--i] !== UNDERSCORE) {
      throw new Error("underscore allowed only at start");
    }
  }
}
function check_fenced(cps) {
  let cp = cps[0];
  let prev = FENCED.get(cp);
  if (prev) throw error_placement(`leading ${prev}`);
  let n = cps.length;
  let last = -1;
  for (let i = 1; i < n; i++) {
    cp = cps[i];
    let match = FENCED.get(cp);
    if (match) {
      if (last == i) throw error_placement(`${prev} + ${match}`);
      last = i + 1;
      prev = match;
    }
  }
  if (last == n) throw error_placement(`trailing ${prev}`);
}
function safe_str_from_cps(cps, quoter = quote_cp) {
  let buf = [];
  if (is_combining_mark(cps[0])) buf.push("◌");
  let prev = 0;
  let n = cps.length;
  for (let i = 0; i < n; i++) {
    let cp = cps[i];
    if (should_escape(cp)) {
      buf.push(str_from_cps(cps.slice(prev, i)));
      buf.push(quoter(cp));
      prev = i + 1;
    }
  }
  buf.push(str_from_cps(cps.slice(prev, n)));
  return buf.join("");
}
function is_combining_mark(cp) {
  init();
  return CM.has(cp);
}
function should_escape(cp) {
  init();
  return ESCAPE.has(cp);
}
function ens_normalize(name) {
  return flatten(split(name, nfc, filter_fe0f));
}
function split(name, nf2, ef2) {
  if (!name) return [];
  init();
  let offset = 0;
  return name.split(STOP_CH).map((label) => {
    let input = explode_cp(label);
    let info = {
      input,
      offset
      // codepoint, not substring!
    };
    offset += input.length + 1;
    try {
      let tokens = info.tokens = tokens_from_str(input, nf2, ef2);
      let token_count = tokens.length;
      let type;
      if (!token_count) {
        throw new Error(`empty label`);
      }
      let norm = info.output = tokens.flat();
      check_leading_underscore(norm);
      let emoji = info.emoji = token_count > 1 || tokens[0].is_emoji;
      if (!emoji && norm.every((cp) => cp < 128)) {
        check_label_extension(norm);
        type = "ASCII";
      } else {
        let chars = tokens.flatMap((x2) => x2.is_emoji ? [] : x2);
        if (!chars.length) {
          type = "Emoji";
        } else {
          if (CM.has(norm[0])) throw error_placement("leading combining mark");
          for (let i = 1; i < token_count; i++) {
            let cps = tokens[i];
            if (!cps.is_emoji && CM.has(cps[0])) {
              throw error_placement(`emoji + combining mark: "${str_from_cps(tokens[i - 1])} + ${safe_str_from_cps([cps[0]])}"`);
            }
          }
          check_fenced(norm);
          let unique = Array_from(new Set(chars));
          let [g] = determine_group(unique);
          check_group(g, chars);
          check_whole(g, unique);
          type = g.N;
        }
      }
      info.type = type;
    } catch (err) {
      info.error = err;
    }
    return info;
  });
}
function check_whole(group, unique) {
  let maker;
  let shared = [];
  for (let cp of unique) {
    let whole = WHOLE_MAP.get(cp);
    if (whole === UNIQUE_PH) return;
    if (whole) {
      let set = whole.M.get(cp);
      maker = maker ? maker.filter((g) => set.has(g)) : Array_from(set);
      if (!maker.length) return;
    } else {
      shared.push(cp);
    }
  }
  if (maker) {
    for (let g of maker) {
      if (shared.every((cp) => group_has_cp(g, cp))) {
        throw new Error(`whole-script confusable: ${group.N}/${g.N}`);
      }
    }
  }
}
function determine_group(unique) {
  let groups = GROUPS;
  for (let cp of unique) {
    let gs = groups.filter((g) => group_has_cp(g, cp));
    if (!gs.length) {
      if (!GROUPS.some((g) => group_has_cp(g, cp))) {
        throw error_disallowed(cp);
      } else {
        throw error_group_member(groups[0], cp);
      }
    }
    groups = gs;
    if (gs.length == 1) break;
  }
  return groups;
}
function flatten(split2) {
  return split2.map(({ input, error, output }) => {
    if (error) {
      let msg = error.message;
      throw new Error(split2.length == 1 ? msg : `Invalid label ${bidi_qq(safe_str_from_cps(input))}: ${msg}`);
    }
    return str_from_cps(output);
  }).join(STOP_CH);
}
function error_disallowed(cp) {
  return new Error(`disallowed character: ${quoted_cp(cp)}`);
}
function error_group_member(g, cp) {
  let quoted = quoted_cp(cp);
  let gg = GROUPS.find((g2) => g2.P.has(cp));
  if (gg) {
    quoted = `${gg.N} ${quoted}`;
  }
  return new Error(`illegal mixture: ${g.N} + ${quoted}`);
}
function error_placement(where) {
  return new Error(`illegal placement: ${where}`);
}
function check_group(g, cps) {
  for (let cp of cps) {
    if (!group_has_cp(g, cp)) {
      throw error_group_member(g, cp);
    }
  }
  if (g.M) {
    let decomposed2 = nfd(cps);
    for (let i = 1, e = decomposed2.length; i < e; i++) {
      if (NSM.has(decomposed2[i])) {
        let j2 = i + 1;
        for (let cp; j2 < e && NSM.has(cp = decomposed2[j2]); j2++) {
          for (let k = i; k < j2; k++) {
            if (decomposed2[k] == cp) {
              throw new Error(`duplicate non-spacing marks: ${quoted_cp(cp)}`);
            }
          }
        }
        if (j2 - i > NSM_MAX) {
          throw new Error(`excessive non-spacing marks: ${bidi_qq(safe_str_from_cps(decomposed2.slice(i - 1, j2)))} (${j2 - i}/${NSM_MAX})`);
        }
        i = j2;
      }
    }
  }
}
function tokens_from_str(input, nf2, ef2) {
  let ret = [];
  let chars = [];
  input = input.slice().reverse();
  while (input.length) {
    let emoji = consume_emoji_reversed(input);
    if (emoji) {
      if (chars.length) {
        ret.push(nf2(chars));
        chars = [];
      }
      ret.push(ef2(emoji));
    } else {
      let cp = input.pop();
      if (VALID.has(cp)) {
        chars.push(cp);
      } else {
        let cps = MAPPED.get(cp);
        if (cps) {
          chars.push(...cps);
        } else if (!IGNORED.has(cp)) {
          throw error_disallowed(cp);
        }
      }
    }
  }
  if (chars.length) {
    ret.push(nf2(chars));
  }
  return ret;
}
function filter_fe0f(cps) {
  return cps.filter((cp) => cp != FE0F);
}
function consume_emoji_reversed(cps, eaten) {
  let node = EMOJI_ROOT;
  let emoji;
  let pos = cps.length;
  while (pos) {
    node = node.get(cps[--pos]);
    if (!node) break;
    let { V: V2 } = node;
    if (V2) {
      emoji = V2;
      if (eaten) eaten.push(...cps.slice(pos).reverse());
      cps.length = pos;
    }
  }
  return emoji;
}

// node_modules/viem/_esm/utils/ens/normalize.js
function normalize(name) {
  return ens_normalize(name);
}

// node_modules/@web3modal/base/dist/esm/adapters/evm/wagmi/client.js
var EVMWagmiClient = class {
  constructor(options) {
    var _a2, _b, _c;
    this.appKit = void 0;
    this.options = void 0;
    this.chain = ConstantsUtil.CHAIN.EVM;
    this.defaultChain = void 0;
    this.tokens = HelpersUtil.getCaipTokens((_a2 = this.options) == null ? void 0 : _a2.tokens);
    this.getCaipDefaultChain = (_b = this.options) == null ? void 0 : _b.defaultChain;
    this.siweControllerClient = (_c = this.options) == null ? void 0 : _c.siweConfig;
    const { wagmiConfig, defaultChain } = options;
    if (!wagmiConfig) {
      throw new Error("wagmiConfig is undefined");
    }
    this.wagmiConfig = wagmiConfig;
    this.defaultChain = getCaipDefaultChain(defaultChain);
    this.siweControllerClient = options.siweConfig;
    this.networkControllerClient = {
      switchCaipNetwork: async (caipNetwork) => {
        const chainId = NetworkUtil.caipNetworkIdToNumber(caipNetwork == null ? void 0 : caipNetwork.id);
        if (chainId) {
          await switchChain(this.wagmiConfig, { chainId });
        }
      },
      getApprovedCaipNetworksData: async () => new Promise((resolve) => {
        var _a3, _b2;
        const connections = new Map(this.wagmiConfig.state.connections);
        const connection = connections.get(this.wagmiConfig.state.current || "");
        if (((_a3 = connection == null ? void 0 : connection.connector) == null ? void 0 : _a3.id) === ConstantsUtil2.AUTH_CONNECTOR_ID) {
          resolve(getEmailCaipNetworks());
        } else if (((_b2 = connection == null ? void 0 : connection.connector) == null ? void 0 : _b2.id) === ConstantsUtil2.WALLET_CONNECT_CONNECTOR_ID) {
          const connector = this.wagmiConfig.connectors.find((c) => c.id === ConstantsUtil2.WALLET_CONNECT_CONNECTOR_ID);
          resolve(getWalletConnectCaipNetworks(connector));
        }
        resolve({ approvedCaipNetworkIds: void 0, supportsAllNetworks: true });
      })
    };
    this.connectionControllerClient = {
      connectWalletConnect: async (onUri) => {
        var _a3, _b2, _c2, _d, _e, _f2, _g, _h, _i2, _j, _k;
        const siweConfig = (_a3 = this.options) == null ? void 0 : _a3.siweConfig;
        const connector = this.wagmiConfig.connectors.find((c) => c.id === ConstantsUtil2.WALLET_CONNECT_CONNECTOR_ID);
        if (!connector) {
          throw new Error("connectionControllerClient:getWalletConnectUri - connector is undefined");
        }
        const provider = await connector.getProvider();
        provider.on("display_uri", (data) => {
          onUri(data);
        });
        const clientId = await ((_e = (_d = (_c2 = (_b2 = provider.signer) == null ? void 0 : _b2.client) == null ? void 0 : _c2.core) == null ? void 0 : _d.crypto) == null ? void 0 : _e.getClientId());
        if (clientId) {
          (_f2 = this.appKit) == null ? void 0 : _f2.setClientId(clientId);
        }
        const chainId = NetworkUtil.caipNetworkIdToNumber((_h = (_g = this.appKit) == null ? void 0 : _g.getCaipNetwork()) == null ? void 0 : _h.id);
        const siweParams = await ((_i2 = siweConfig == null ? void 0 : siweConfig.getMessageParams) == null ? void 0 : _i2.call(siweConfig));
        if (((_j = siweConfig == null ? void 0 : siweConfig.options) == null ? void 0 : _j.enabled) && typeof (provider == null ? void 0 : provider.authenticate) === "function" && siweParams && Object.keys(siweParams || {}).length > 0) {
          const { SIWEController, getDidChainId, getDidAddress } = await import("./exports-OP2OCNY7.js");
          await connector.setRequestedChainsIds(siweParams.chains);
          let reorderedChains = siweParams.chains;
          if (chainId) {
            reorderedChains = [chainId, ...siweParams.chains.filter((c) => c !== chainId)];
          }
          const result = await provider.authenticate({
            nonce: await siweConfig.getNonce(),
            methods: [...y],
            ...siweParams,
            chains: reorderedChains
          });
          const signedCacao = (_k = result == null ? void 0 : result.auths) == null ? void 0 : _k[0];
          if (signedCacao) {
            const { p, s } = signedCacao;
            const cacaoChainId = getDidChainId(p.iss) || "";
            const address = getDidAddress(p.iss);
            if (address && cacaoChainId) {
              SIWEController.setSession({
                address,
                chainId: parseInt(cacaoChainId, 10)
              });
            }
            try {
              const message = provider.signer.client.formatAuthMessage({
                request: p,
                iss: p.iss
              });
              await SIWEController.verifyMessage({
                message,
                signature: s.s,
                cacao: signedCacao
              });
            } catch (error) {
              console.error("Error verifying message", error);
              await provider.disconnect().catch(console.error);
              await SIWEController.signOut().catch(console.error);
              throw error;
            }
          }
          this.wagmiConfig.state.current = "";
        }
        await connect(this.wagmiConfig, { connector, chainId });
      },
      connectExternal: async ({ id, provider, info }) => {
        var _a3, _b2, _c2, _d;
        const connector = this.wagmiConfig.connectors.find((c) => c.id === id);
        if (!connector) {
          throw new Error("connectionControllerClient:connectExternal - connector is undefined");
        }
        (_a3 = this.appKit) == null ? void 0 : _a3.setClientId(null);
        if (provider && info && connector.id === ConstantsUtil2.EIP6963_CONNECTOR_ID) {
          (_b2 = connector.setEip6963Wallet) == null ? void 0 : _b2.call(connector, { provider, info });
        }
        const chainId = NetworkUtil.caipNetworkIdToNumber((_d = (_c2 = this.appKit) == null ? void 0 : _c2.getCaipNetwork()) == null ? void 0 : _d.id);
        await connect(this.wagmiConfig, { connector, chainId });
      },
      checkInstalled: (ids) => {
        var _a3;
        const injectedConnector = (_a3 = this.appKit) == null ? void 0 : _a3.getConnectors().find((c) => c.type === "INJECTED");
        if (!ids) {
          return Boolean(window.ethereum);
        }
        if (injectedConnector) {
          if (!(window == null ? void 0 : window.ethereum)) {
            return false;
          }
          return ids.some((id) => {
            var _a4;
            return Boolean((_a4 = window.ethereum) == null ? void 0 : _a4[String(id)]);
          });
        }
        return false;
      },
      disconnect: async () => {
        var _a3, _b2, _c2, _d;
        await disconnect(this.wagmiConfig);
        (_a3 = this.appKit) == null ? void 0 : _a3.setClientId(null);
        if ((_d = (_c2 = (_b2 = this.options) == null ? void 0 : _b2.siweConfig) == null ? void 0 : _c2.options) == null ? void 0 : _d.signOutOnDisconnect) {
          const { SIWEController } = await import("./exports-OP2OCNY7.js");
          await SIWEController.signOut();
        }
      },
      signMessage: async (message) => {
        var _a3;
        const caipAddress = ((_a3 = this.appKit) == null ? void 0 : _a3.getCaipAddress()) || "";
        const account = requireCaipAddress(caipAddress);
        return signMessage(this.wagmiConfig, { message, account });
      },
      estimateGas: async (args) => {
        if (args.chainNamespace && args.chainNamespace !== "eip155") {
          throw new Error("connectionControllerClient:estimateGas - invalid chain namespace");
        }
        try {
          return await estimateGas(this.wagmiConfig, {
            account: args.address,
            to: args.to,
            data: args.data,
            type: "legacy"
          });
        } catch (error) {
          return 0n;
        }
      },
      sendTransaction: async (data) => {
        if (data.chainNamespace && data.chainNamespace !== "eip155") {
          throw new Error("connectionControllerClient:sendTransaction - invalid chain namespace");
        }
        const { chainId } = getAccount(this.wagmiConfig);
        const txParams = {
          account: data.address,
          to: data.to,
          value: data.value,
          gas: data.gas,
          gasPrice: data.gasPrice,
          data: data.data,
          chainId,
          type: "legacy"
        };
        await prepareTransactionRequest(this.wagmiConfig, txParams);
        const tx = await sendTransaction(this.wagmiConfig, txParams);
        await waitForTransactionReceipt(this.wagmiConfig, { hash: tx, timeout: 25e3 });
        return tx;
      },
      writeContract: async (data) => {
        var _a3, _b2, _c2;
        const caipAddress = ((_a3 = this.appKit) == null ? void 0 : _a3.getCaipAddress()) || "";
        const account = requireCaipAddress(caipAddress);
        const chainId = NetworkUtil.caipNetworkIdToNumber((_c2 = (_b2 = this.appKit) == null ? void 0 : _b2.getCaipNetwork()) == null ? void 0 : _c2.id);
        const tx = await writeContract(this.wagmiConfig, {
          chainId,
          address: data.tokenAddress,
          account,
          abi: data.abi,
          functionName: data.method,
          args: [data.receiverAddress, data.tokenAmount]
        });
        return tx;
      },
      getEnsAddress: async (value) => {
        var _a3, _b2, _c2;
        try {
          const chainId = NetworkUtil.caipNetworkIdToNumber((_b2 = (_a3 = this.appKit) == null ? void 0 : _a3.getCaipNetwork()) == null ? void 0 : _b2.id);
          let ensName = false;
          let wcName = false;
          if (value == null ? void 0 : value.endsWith(ConstantsUtil.WC_NAME_SUFFIX)) {
            wcName = await ((_c2 = this.appKit) == null ? void 0 : _c2.resolveWalletConnectName(value)) || false;
          }
          if (chainId === mainnet.id) {
            ensName = await getEnsAddress(this.wagmiConfig, {
              name: normalize(value),
              chainId
            });
          }
          return ensName || wcName || false;
        } catch {
          return false;
        }
      },
      getEnsAvatar: async (value) => {
        var _a3, _b2;
        const chainId = NetworkUtil.caipNetworkIdToNumber((_b2 = (_a3 = this.appKit) == null ? void 0 : _a3.getCaipNetwork()) == null ? void 0 : _b2.id);
        if (chainId !== mainnet.id) {
          return false;
        }
        const avatar = await getEnsAvatar(this.wagmiConfig, {
          name: normalize(value),
          chainId
        });
        return avatar || false;
      },
      parseUnits,
      formatUnits
    };
  }
  construct(appKit, options) {
    var _a2, _b;
    if (!options.projectId) {
      throw new Error("projectId is undefined");
    }
    this.appKit = appKit;
    this.options = options;
    this.tokens = HelpersUtil.getCaipTokens(options.tokens);
    this.syncRequestedNetworks([...this.wagmiConfig.chains]);
    this.syncConnectors(this.wagmiConfig.connectors);
    this.initAuthConnectorListeners([...this.wagmiConfig.connectors]);
    watchConnectors(this.wagmiConfig, {
      onChange: (connectors) => this.syncConnectors(connectors)
    });
    watchAccount(this.wagmiConfig, {
      onChange: (accountData) => this.syncAccount({ ...accountData })
    });
    (_a2 = this.appKit) == null ? void 0 : _a2.setEIP6963Enabled(options.enableEIP6963 !== false);
    (_b = this.appKit) == null ? void 0 : _b.subscribeShouldUpdateToAddress((newAddress) => {
      var _a3;
      if (newAddress) {
        const connections = getConnections(this.wagmiConfig);
        const connector = (_a3 = connections[0]) == null ? void 0 : _a3.connector;
        if (connector) {
          switchAccount(this.wagmiConfig, {
            connector
          }).then((response) => this.syncAccount({
            address: newAddress,
            isConnected: true,
            addresses: response.accounts,
            connector,
            chainId: response.chainId
          }));
        }
      }
    });
  }
  subscribeState(callback) {
    var _a2;
    return (_a2 = this.appKit) == null ? void 0 : _a2.subscribeState((state) => callback({
      ...state,
      selectedNetworkId: NetworkUtil.caipNetworkIdToNumber(state.selectedNetworkId)
    }));
  }
  syncRequestedNetworks(chains) {
    var _a2;
    const requestedCaipNetworks = chains == null ? void 0 : chains.map((chain) => {
      var _a3, _b;
      return {
        id: `${ConstantsUtil2.EIP155}:${chain.id}`,
        name: chain.name,
        imageId: PresetsUtil.EIP155NetworkImageIds[chain.id],
        imageUrl: (_b = (_a3 = this.options) == null ? void 0 : _a3.chainImages) == null ? void 0 : _b[chain.id],
        chain: this.chain
      };
    });
    (_a2 = this.appKit) == null ? void 0 : _a2.setRequestedCaipNetworks(requestedCaipNetworks ?? [], this.chain);
  }
  async syncAccount({ address, chainId, connector, addresses, status }) {
    var _a2, _b, _c, _d, _e, _f2, _g, _h, _i2, _j;
    const caipAddress = `${ConstantsUtil2.EIP155}:${chainId}:${address}`;
    if (((_a2 = this.appKit) == null ? void 0 : _a2.getCaipAddress()) === caipAddress) {
      return;
    }
    if (status === "connected" && address && chainId) {
      this.syncNetwork(address, chainId, true);
      (_b = this.appKit) == null ? void 0 : _b.setIsConnected(true, this.chain);
      (_c = this.appKit) == null ? void 0 : _c.setCaipAddress(caipAddress, this.chain);
      await Promise.all([
        this.syncProfile(address, chainId),
        this.syncBalance(address, chainId),
        this.syncConnectedWalletInfo(connector),
        (_d = this.appKit) == null ? void 0 : _d.setApprovedCaipNetworksData(this.chain)
      ]);
      if (connector) {
        this.syncConnectedWalletInfo(connector);
      }
      const isAuthConnector = (connector == null ? void 0 : connector.id) === ConstantsUtil2.AUTH_CONNECTOR_ID;
      if (!isAuthConnector && (addresses == null ? void 0 : addresses.length)) {
        (_e = this.appKit) == null ? void 0 : _e.setAllAccounts(addresses.map((addr) => ({ address: addr, type: "eoa" })), this.chain);
      }
    } else if (status === "disconnected") {
      (_f2 = this.appKit) == null ? void 0 : _f2.resetAccount(this.chain);
      (_g = this.appKit) == null ? void 0 : _g.resetWcConnection();
      (_h = this.appKit) == null ? void 0 : _h.resetNetwork();
      (_i2 = this.appKit) == null ? void 0 : _i2.setAllAccounts([], this.chain);
      (_j = this.appKit) == null ? void 0 : _j.setIsConnected(false, this.chain);
    }
  }
  async syncNetwork(address, chainId, isConnected) {
    var _a2, _b, _c, _d, _e, _f2, _g, _h;
    const chain = this.wagmiConfig.chains.find((c) => c.id === chainId);
    if (chain || chainId) {
      const name = (chain == null ? void 0 : chain.name) ?? (chainId == null ? void 0 : chainId.toString());
      const id = Number((chain == null ? void 0 : chain.id) ?? chainId);
      const caipChainId = `${ConstantsUtil2.EIP155}:${id}`;
      (_c = this.appKit) == null ? void 0 : _c.setCaipNetwork({
        id: caipChainId,
        name,
        imageId: PresetsUtil.EIP155NetworkImageIds[id],
        imageUrl: (_b = (_a2 = this.options) == null ? void 0 : _a2.chainImages) == null ? void 0 : _b[id],
        chain: this.chain
      });
      if (isConnected && address && chainId) {
        const caipAddress = `${ConstantsUtil2.EIP155}:${id}:${address}`;
        (_d = this.appKit) == null ? void 0 : _d.setCaipAddress(caipAddress, this.chain);
        if ((_f2 = (_e = chain == null ? void 0 : chain.blockExplorers) == null ? void 0 : _e.default) == null ? void 0 : _f2.url) {
          const url = `${chain.blockExplorers.default.url}/address/${address}`;
          (_g = this.appKit) == null ? void 0 : _g.setAddressExplorerUrl(url, this.chain);
        } else {
          (_h = this.appKit) == null ? void 0 : _h.setAddressExplorerUrl(void 0, this.chain);
        }
        await this.syncBalance(address, chainId);
      }
    }
  }
  async syncWalletConnectName(address) {
    var _a2, _b, _c;
    if (!this.appKit) {
      throw new Error("syncWalletConnectName - appKit is undefined");
    }
    try {
      const registeredWcNames = await this.appKit.getWalletConnectName(address);
      if (registeredWcNames[0]) {
        const wcName = registeredWcNames[0];
        (_a2 = this.appKit) == null ? void 0 : _a2.setProfileName(wcName.name, this.chain);
      } else {
        (_b = this.appKit) == null ? void 0 : _b.setProfileName(null, this.chain);
      }
    } catch {
      (_c = this.appKit) == null ? void 0 : _c.setProfileName(null, this.chain);
    }
  }
  async syncProfile(address, chainId) {
    var _a2, _b, _c, _d, _e, _f2;
    if (!this.appKit) {
      throw new Error("syncProfile - appKit is undefined");
    }
    try {
      const { name, avatar } = await this.appKit.fetchIdentity({
        address
      });
      (_a2 = this.appKit) == null ? void 0 : _a2.setProfileName(name, this.chain);
      (_b = this.appKit) == null ? void 0 : _b.setProfileImage(avatar, this.chain);
      if (!name) {
        await this.syncWalletConnectName(address);
      }
    } catch {
      if (chainId === mainnet.id) {
        const profileName = await getEnsName(this.wagmiConfig, { address, chainId });
        if (profileName) {
          (_c = this.appKit) == null ? void 0 : _c.setProfileName(profileName, this.chain);
          const profileImage = await getEnsAvatar(this.wagmiConfig, {
            name: profileName,
            chainId
          });
          if (profileImage) {
            (_d = this.appKit) == null ? void 0 : _d.setProfileImage(profileImage, this.chain);
          }
        } else {
          await this.syncWalletConnectName(address);
          (_e = this.appKit) == null ? void 0 : _e.setProfileImage(null, this.chain);
        }
      } else {
        await this.syncWalletConnectName(address);
        (_f2 = this.appKit) == null ? void 0 : _f2.setProfileImage(null, this.chain);
      }
    }
  }
  async syncBalance(address, chainId) {
    var _a2, _b, _c, _d, _e;
    const chain = this.wagmiConfig.chains.find((c) => c.id === chainId);
    if (chain) {
      const balance = await getBalance(this.wagmiConfig, {
        address,
        chainId: chain.id,
        token: (_c = (_b = (_a2 = this.options) == null ? void 0 : _a2.tokens) == null ? void 0 : _b[chain.id]) == null ? void 0 : _c.address
      });
      (_d = this.appKit) == null ? void 0 : _d.setBalance(balance.formatted, balance.symbol, this.chain);
      return;
    }
    (_e = this.appKit) == null ? void 0 : _e.setBalance(void 0, void 0, this.chain);
  }
  async syncConnectedWalletInfo(connector) {
    var _a2, _b, _c, _d;
    if (!connector) {
      throw Error("syncConnectedWalletInfo - connector is undefined");
    }
    if (connector.id === ConstantsUtil2.WALLET_CONNECT_CONNECTOR_ID && connector.getProvider) {
      const walletConnectProvider = await connector.getProvider();
      if (walletConnectProvider.session) {
        (_b = this.appKit) == null ? void 0 : _b.setConnectedWalletInfo({
          ...walletConnectProvider.session.peer.metadata,
          name: walletConnectProvider.session.peer.metadata.name,
          icon: (_a2 = walletConnectProvider.session.peer.metadata.icons) == null ? void 0 : _a2[0]
        }, this.chain);
      }
    } else {
      const wagmiConnector = (_c = this.appKit) == null ? void 0 : _c.getConnectors().find((c) => c.id === connector.id);
      (_d = this.appKit) == null ? void 0 : _d.setConnectedWalletInfo({
        name: connector.name,
        icon: connector.icon || this.appKit.getConnectorImage(wagmiConnector)
      }, this.chain);
    }
  }
  syncConnectors(connectors) {
    var _a2;
    const uniqueIds = /* @__PURE__ */ new Set();
    const filteredConnectors = connectors.filter((item) => !uniqueIds.has(item.id) && uniqueIds.add(item.id));
    const w3mConnectors = [];
    filteredConnectors.forEach(({ id, name, type, icon }) => {
      var _a3, _b;
      const shouldSkip = ConstantsUtil2.AUTH_CONNECTOR_ID === id;
      if (!shouldSkip) {
        w3mConnectors.push({
          id,
          explorerId: PresetsUtil.ConnectorExplorerIds[id],
          imageUrl: ((_b = (_a3 = this.options) == null ? void 0 : _a3.connectorImages) == null ? void 0 : _b[id]) ?? icon,
          name: PresetsUtil.ConnectorNamesMap[id] ?? name,
          imageId: PresetsUtil.ConnectorImageIds[id],
          type: PresetsUtil.ConnectorTypesMap[type] ?? "EXTERNAL",
          info: {
            rdns: id
          },
          chain: this.chain
        });
      }
    });
    (_a2 = this.appKit) == null ? void 0 : _a2.setConnectors(w3mConnectors);
    this.syncAuthConnector(filteredConnectors);
  }
  async syncAuthConnector(connectors) {
    var _a2;
    const authConnector2 = connectors.find(({ id }) => id === ConstantsUtil2.AUTH_CONNECTOR_ID);
    if (authConnector2) {
      const provider = await authConnector2.getProvider();
      (_a2 = this.appKit) == null ? void 0 : _a2.addConnector({
        id: ConstantsUtil2.AUTH_CONNECTOR_ID,
        type: "AUTH",
        name: "Auth",
        provider,
        email: authConnector2.email,
        socials: authConnector2.socials,
        showWallets: authConnector2.showWallets,
        chain: this.chain,
        walletFeatures: authConnector2.walletFeatures
      });
    }
  }
  async initAuthConnectorListeners(connectors) {
    const authConnector2 = connectors.find(({ id }) => id === ConstantsUtil2.AUTH_CONNECTOR_ID);
    if (authConnector2) {
      await this.listenAuthConnector(authConnector2);
      await this.listenModal(authConnector2);
    }
  }
  async listenAuthConnector(connector) {
    var _a2, _b, _c;
    if (typeof window !== "undefined" && connector) {
      (_a2 = this.appKit) == null ? void 0 : _a2.setLoading(true);
      const provider = await connector.getProvider();
      const isLoginEmailUsed = provider.getLoginEmailUsed();
      (_b = this.appKit) == null ? void 0 : _b.setLoading(isLoginEmailUsed);
      if (isLoginEmailUsed) {
        (_c = this.appKit) == null ? void 0 : _c.setIsConnected(false, this.chain);
      }
      provider.onRpcRequest((request) => {
        var _a3, _b2;
        if (W3mFrameHelpers.checkIfRequestExists(request)) {
          if (!W3mFrameHelpers.checkIfRequestIsSafe(request)) {
            (_a3 = this.appKit) == null ? void 0 : _a3.handleUnsafeRPCRequest();
          }
        } else {
          (_b2 = this.appKit) == null ? void 0 : _b2.open();
          console.error(W3mFrameRpcConstants.RPC_METHOD_NOT_ALLOWED_MESSAGE, {
            method: request.method
          });
          setTimeout(() => {
            var _a4;
            (_a4 = this.appKit) == null ? void 0 : _a4.showErrorMessage(W3mFrameRpcConstants.RPC_METHOD_NOT_ALLOWED_UI_MESSAGE);
          }, 300);
          provider.rejectRpcRequests();
        }
      });
      provider.onRpcError(() => {
        var _a3, _b2, _c2, _d;
        const isModalOpen = (_a3 = this.appKit) == null ? void 0 : _a3.isOpen();
        if (isModalOpen) {
          if ((_b2 = this.appKit) == null ? void 0 : _b2.isTransactionStackEmpty()) {
            (_c2 = this.appKit) == null ? void 0 : _c2.close();
          } else {
            (_d = this.appKit) == null ? void 0 : _d.popTransactionStack(true);
          }
        }
      });
      provider.onRpcSuccess((_, request) => {
        var _a3, _b2, _c2;
        const isSafeRequest = W3mFrameHelpers.checkIfRequestIsSafe(request);
        if (isSafeRequest) {
          return;
        }
        if ((_a3 = this.appKit) == null ? void 0 : _a3.isTransactionStackEmpty()) {
          (_b2 = this.appKit) == null ? void 0 : _b2.close();
        } else {
          (_c2 = this.appKit) == null ? void 0 : _c2.popTransactionStack();
        }
      });
      provider.onNotConnected(() => {
        var _a3, _b2, _c2;
        const isConnected = (_a3 = this.appKit) == null ? void 0 : _a3.getIsConnectedState();
        if (!isConnected) {
          (_b2 = this.appKit) == null ? void 0 : _b2.setIsConnected(false, this.chain);
          (_c2 = this.appKit) == null ? void 0 : _c2.setLoading(false);
        }
      });
      provider.onIsConnected((req) => {
        var _a3, _b2, _c2, _d, _e;
        (_a3 = this.appKit) == null ? void 0 : _a3.setIsConnected(true, this.chain);
        (_b2 = this.appKit) == null ? void 0 : _b2.setSmartAccountDeployed(Boolean(req.smartAccountDeployed), this.chain);
        (_c2 = this.appKit) == null ? void 0 : _c2.setPreferredAccountType(req.preferredAccountType, this.chain);
        (_d = this.appKit) == null ? void 0 : _d.setLoading(false);
        (_e = this.appKit) == null ? void 0 : _e.setAllAccounts(req.accounts || [
          {
            address: req.address,
            type: req.preferredAccountType || "eoa"
          }
        ], this.chain);
      });
      provider.onGetSmartAccountEnabledNetworks((networks) => {
        var _a3;
        (_a3 = this.appKit) == null ? void 0 : _a3.setSmartAccountEnabledNetworks(networks, this.chain);
      });
      provider.onSetPreferredAccount(({ address, type }) => {
        var _a3;
        if (!address) {
          return;
        }
        (_a3 = this.appKit) == null ? void 0 : _a3.setPreferredAccountType(type, this.chain);
        reconnect(this.wagmiConfig, { connectors: [connector] });
      });
    }
  }
  async listenModal(connector) {
    const provider = await connector.getProvider();
    this.subscribeState((val) => {
      if (!val.open) {
        provider.rejectRpcRequests();
      }
    });
  }
};

// node_modules/@wagmi/connectors/dist/esm/coinbaseWallet.js
coinbaseWallet.type = "coinbaseWallet";
function coinbaseWallet(parameters = {}) {
  if (parameters.version === "3" || parameters.headlessMode)
    return version3(parameters);
  return version4(parameters);
}
function version4(parameters) {
  let sdk;
  let walletProvider;
  let accountsChanged;
  let chainChanged;
  let disconnect2;
  return createConnector((config) => ({
    id: "coinbaseWalletSDK",
    name: "Coinbase Wallet",
    supportsSimulation: true,
    type: coinbaseWallet.type,
    async connect({ chainId } = {}) {
      try {
        const provider = await this.getProvider();
        const accounts = (await provider.request({
          method: "eth_requestAccounts"
        })).map((x2) => getAddress(x2));
        if (!accountsChanged) {
          accountsChanged = this.onAccountsChanged.bind(this);
          provider.on("accountsChanged", accountsChanged);
        }
        if (!chainChanged) {
          chainChanged = this.onChainChanged.bind(this);
          provider.on("chainChanged", chainChanged);
        }
        if (!disconnect2) {
          disconnect2 = this.onDisconnect.bind(this);
          provider.on("disconnect", disconnect2);
        }
        let currentChainId = await this.getChainId();
        if (chainId && currentChainId !== chainId) {
          const chain = await this.switchChain({ chainId }).catch((error) => {
            if (error.code === UserRejectedRequestError.code)
              throw error;
            return { id: currentChainId };
          });
          currentChainId = (chain == null ? void 0 : chain.id) ?? currentChainId;
        }
        return { accounts, chainId: currentChainId };
      } catch (error) {
        if (/(user closed modal|accounts received is empty|user denied account|request rejected)/i.test(error.message))
          throw new UserRejectedRequestError(error);
        throw error;
      }
    },
    async disconnect() {
      var _a2;
      const provider = await this.getProvider();
      if (accountsChanged) {
        provider.removeListener("accountsChanged", accountsChanged);
        accountsChanged = void 0;
      }
      if (chainChanged) {
        provider.removeListener("chainChanged", chainChanged);
        chainChanged = void 0;
      }
      if (disconnect2) {
        provider.removeListener("disconnect", disconnect2);
        disconnect2 = void 0;
      }
      provider.disconnect();
      (_a2 = provider.close) == null ? void 0 : _a2.call(provider);
    },
    async getAccounts() {
      const provider = await this.getProvider();
      return (await provider.request({
        method: "eth_accounts"
      })).map((x2) => getAddress(x2));
    },
    async getChainId() {
      const provider = await this.getProvider();
      const chainId = await provider.request({
        method: "eth_chainId"
      });
      return Number(chainId);
    },
    async getProvider() {
      if (!walletProvider) {
        const CoinbaseWalletSDK = await (async () => {
          const { default: SDK } = await import("./dist-LSAM6CZ4.js");
          if (typeof SDK !== "function" && typeof SDK.default === "function")
            return SDK.default;
          return SDK;
        })();
        sdk = new CoinbaseWalletSDK({
          ...parameters,
          appChainIds: config.chains.map((x2) => x2.id)
        });
        walletProvider = sdk.makeWeb3Provider({
          ...parameters,
          options: parameters.preference ?? "all"
        });
      }
      return walletProvider;
    },
    async isAuthorized() {
      try {
        const accounts = await this.getAccounts();
        return !!accounts.length;
      } catch {
        return false;
      }
    },
    async switchChain({ addEthereumChainParameter, chainId }) {
      var _a2, _b, _c, _d;
      const chain = config.chains.find((chain2) => chain2.id === chainId);
      if (!chain)
        throw new SwitchChainError(new ChainNotConfiguredError());
      const provider = await this.getProvider();
      try {
        await provider.request({
          method: "wallet_switchEthereumChain",
          params: [{ chainId: numberToHex(chain.id) }]
        });
        return chain;
      } catch (error) {
        if (error.code === 4902) {
          try {
            let blockExplorerUrls;
            if (addEthereumChainParameter == null ? void 0 : addEthereumChainParameter.blockExplorerUrls)
              blockExplorerUrls = addEthereumChainParameter.blockExplorerUrls;
            else
              blockExplorerUrls = ((_a2 = chain.blockExplorers) == null ? void 0 : _a2.default.url) ? [(_b = chain.blockExplorers) == null ? void 0 : _b.default.url] : [];
            let rpcUrls;
            if ((_c = addEthereumChainParameter == null ? void 0 : addEthereumChainParameter.rpcUrls) == null ? void 0 : _c.length)
              rpcUrls = addEthereumChainParameter.rpcUrls;
            else
              rpcUrls = [((_d = chain.rpcUrls.default) == null ? void 0 : _d.http[0]) ?? ""];
            const addEthereumChain = {
              blockExplorerUrls,
              chainId: numberToHex(chainId),
              chainName: (addEthereumChainParameter == null ? void 0 : addEthereumChainParameter.chainName) ?? chain.name,
              iconUrls: addEthereumChainParameter == null ? void 0 : addEthereumChainParameter.iconUrls,
              nativeCurrency: (addEthereumChainParameter == null ? void 0 : addEthereumChainParameter.nativeCurrency) ?? chain.nativeCurrency,
              rpcUrls
            };
            await provider.request({
              method: "wallet_addEthereumChain",
              params: [addEthereumChain]
            });
            return chain;
          } catch (error2) {
            throw new UserRejectedRequestError(error2);
          }
        }
        throw new SwitchChainError(error);
      }
    },
    onAccountsChanged(accounts) {
      if (accounts.length === 0)
        this.onDisconnect();
      else
        config.emitter.emit("change", {
          accounts: accounts.map((x2) => getAddress(x2))
        });
    },
    onChainChanged(chain) {
      const chainId = Number(chain);
      config.emitter.emit("change", { chainId });
    },
    async onDisconnect(_error) {
      config.emitter.emit("disconnect");
      const provider = await this.getProvider();
      if (accountsChanged) {
        provider.removeListener("accountsChanged", accountsChanged);
        accountsChanged = void 0;
      }
      if (chainChanged) {
        provider.removeListener("chainChanged", chainChanged);
        chainChanged = void 0;
      }
      if (disconnect2) {
        provider.removeListener("disconnect", disconnect2);
        disconnect2 = void 0;
      }
    }
  }));
}
function version3(parameters) {
  const reloadOnDisconnect = false;
  let sdk;
  let walletProvider;
  let accountsChanged;
  let chainChanged;
  let disconnect2;
  return createConnector((config) => ({
    id: "coinbaseWalletSDK",
    name: "Coinbase Wallet",
    supportsSimulation: true,
    type: coinbaseWallet.type,
    async connect({ chainId } = {}) {
      try {
        const provider = await this.getProvider();
        const accounts = (await provider.request({
          method: "eth_requestAccounts"
        })).map((x2) => getAddress(x2));
        if (!accountsChanged) {
          accountsChanged = this.onAccountsChanged.bind(this);
          provider.on("accountsChanged", accountsChanged);
        }
        if (!chainChanged) {
          chainChanged = this.onChainChanged.bind(this);
          provider.on("chainChanged", chainChanged);
        }
        if (!disconnect2) {
          disconnect2 = this.onDisconnect.bind(this);
          provider.on("disconnect", disconnect2);
        }
        let currentChainId = await this.getChainId();
        if (chainId && currentChainId !== chainId) {
          const chain = await this.switchChain({ chainId }).catch((error) => {
            if (error.code === UserRejectedRequestError.code)
              throw error;
            return { id: currentChainId };
          });
          currentChainId = (chain == null ? void 0 : chain.id) ?? currentChainId;
        }
        return { accounts, chainId: currentChainId };
      } catch (error) {
        if (/(user closed modal|accounts received is empty|user denied account)/i.test(error.message))
          throw new UserRejectedRequestError(error);
        throw error;
      }
    },
    async disconnect() {
      const provider = await this.getProvider();
      if (accountsChanged) {
        provider.removeListener("accountsChanged", accountsChanged);
        accountsChanged = void 0;
      }
      if (chainChanged) {
        provider.removeListener("chainChanged", chainChanged);
        chainChanged = void 0;
      }
      if (disconnect2) {
        provider.removeListener("disconnect", disconnect2);
        disconnect2 = void 0;
      }
      provider.disconnect();
      provider.close();
    },
    async getAccounts() {
      const provider = await this.getProvider();
      return (await provider.request({
        method: "eth_accounts"
      })).map((x2) => getAddress(x2));
    },
    async getChainId() {
      const provider = await this.getProvider();
      const chainId = await provider.request({
        method: "eth_chainId"
      });
      return Number(chainId);
    },
    async getProvider() {
      var _a2;
      if (!walletProvider) {
        const CoinbaseWalletSDK = await (async () => {
          const { default: SDK } = await import("./dist-G2UJYUUX.js");
          if (typeof SDK !== "function" && typeof SDK.default === "function")
            return SDK.default;
          return SDK;
        })();
        sdk = new CoinbaseWalletSDK({ ...parameters, reloadOnDisconnect });
        const walletExtensionChainId = (_a2 = sdk.walletExtension) == null ? void 0 : _a2.getChainId();
        const chain = config.chains.find((chain2) => parameters.chainId ? chain2.id === parameters.chainId : chain2.id === walletExtensionChainId) || config.chains[0];
        const chainId = parameters.chainId || (chain == null ? void 0 : chain.id);
        const jsonRpcUrl = parameters.jsonRpcUrl || (chain == null ? void 0 : chain.rpcUrls.default.http[0]);
        walletProvider = sdk.makeWeb3Provider(jsonRpcUrl, chainId);
      }
      return walletProvider;
    },
    async isAuthorized() {
      try {
        const accounts = await this.getAccounts();
        return !!accounts.length;
      } catch {
        return false;
      }
    },
    async switchChain({ addEthereumChainParameter, chainId }) {
      var _a2, _b, _c, _d;
      const chain = config.chains.find((chain2) => chain2.id === chainId);
      if (!chain)
        throw new SwitchChainError(new ChainNotConfiguredError());
      const provider = await this.getProvider();
      try {
        await provider.request({
          method: "wallet_switchEthereumChain",
          params: [{ chainId: numberToHex(chain.id) }]
        });
        return chain;
      } catch (error) {
        if (error.code === 4902) {
          try {
            let blockExplorerUrls;
            if (addEthereumChainParameter == null ? void 0 : addEthereumChainParameter.blockExplorerUrls)
              blockExplorerUrls = addEthereumChainParameter.blockExplorerUrls;
            else
              blockExplorerUrls = ((_a2 = chain.blockExplorers) == null ? void 0 : _a2.default.url) ? [(_b = chain.blockExplorers) == null ? void 0 : _b.default.url] : [];
            let rpcUrls;
            if ((_c = addEthereumChainParameter == null ? void 0 : addEthereumChainParameter.rpcUrls) == null ? void 0 : _c.length)
              rpcUrls = addEthereumChainParameter.rpcUrls;
            else
              rpcUrls = [((_d = chain.rpcUrls.default) == null ? void 0 : _d.http[0]) ?? ""];
            const addEthereumChain = {
              blockExplorerUrls,
              chainId: numberToHex(chainId),
              chainName: (addEthereumChainParameter == null ? void 0 : addEthereumChainParameter.chainName) ?? chain.name,
              iconUrls: addEthereumChainParameter == null ? void 0 : addEthereumChainParameter.iconUrls,
              nativeCurrency: (addEthereumChainParameter == null ? void 0 : addEthereumChainParameter.nativeCurrency) ?? chain.nativeCurrency,
              rpcUrls
            };
            await provider.request({
              method: "wallet_addEthereumChain",
              params: [addEthereumChain]
            });
            return chain;
          } catch (error2) {
            throw new UserRejectedRequestError(error2);
          }
        }
        throw new SwitchChainError(error);
      }
    },
    onAccountsChanged(accounts) {
      if (accounts.length === 0)
        this.onDisconnect();
      else
        config.emitter.emit("change", {
          accounts: accounts.map((x2) => getAddress(x2))
        });
    },
    onChainChanged(chain) {
      const chainId = Number(chain);
      config.emitter.emit("change", { chainId });
    },
    async onDisconnect(_error) {
      config.emitter.emit("disconnect");
      const provider = await this.getProvider();
      if (accountsChanged) {
        provider.removeListener("accountsChanged", accountsChanged);
        accountsChanged = void 0;
      }
      if (chainChanged) {
        provider.removeListener("chainChanged", chainChanged);
        chainChanged = void 0;
      }
      if (disconnect2) {
        provider.removeListener("disconnect", disconnect2);
        disconnect2 = void 0;
      }
    }
  }));
}

// node_modules/@wagmi/connectors/dist/esm/metaMask.js
metaMask.type = "metaMask";
function metaMask(parameters = {}) {
  let sdk;
  let provider;
  let providerPromise;
  let accountsChanged;
  let chainChanged;
  let connect2;
  let displayUri;
  let disconnect2;
  return createConnector((config) => ({
    id: "metaMaskSDK",
    name: "MetaMask",
    type: metaMask.type,
    async setup() {
      const provider2 = await this.getProvider();
      if (provider2 && !connect2) {
        connect2 = this.onConnect.bind(this);
        provider2.on("connect", connect2);
      }
    },
    async connect({ chainId, isReconnecting } = {}) {
      const provider2 = await this.getProvider();
      if (!displayUri) {
        displayUri = this.onDisplayUri;
        provider2.on("display_uri", displayUri);
      }
      let accounts = [];
      if (isReconnecting)
        accounts = await this.getAccounts().catch(() => []);
      try {
        if (!(accounts == null ? void 0 : accounts.length)) {
          const requestedAccounts = await sdk.connect();
          accounts = requestedAccounts.map((x2) => getAddress(x2));
        }
        let currentChainId = await this.getChainId();
        if (chainId && currentChainId !== chainId) {
          const chain = await this.switchChain({ chainId }).catch((error) => {
            if (error.code === UserRejectedRequestError.code)
              throw error;
            return { id: currentChainId };
          });
          currentChainId = (chain == null ? void 0 : chain.id) ?? currentChainId;
        }
        if (displayUri) {
          provider2.removeListener("display_uri", displayUri);
          displayUri = void 0;
        }
        if (connect2) {
          provider2.removeListener("connect", connect2);
          connect2 = void 0;
        }
        if (!accountsChanged) {
          accountsChanged = this.onAccountsChanged.bind(this);
          provider2.on("accountsChanged", accountsChanged);
        }
        if (!chainChanged) {
          chainChanged = this.onChainChanged.bind(this);
          provider2.on("chainChanged", chainChanged);
        }
        if (!disconnect2) {
          disconnect2 = this.onDisconnect.bind(this);
          provider2.on("disconnect", disconnect2);
        }
        return { accounts, chainId: currentChainId };
      } catch (err) {
        const error = err;
        if (error.code === UserRejectedRequestError.code)
          throw new UserRejectedRequestError(error);
        if (error.code === ResourceUnavailableRpcError.code)
          throw new ResourceUnavailableRpcError(error);
        throw error;
      }
    },
    async disconnect() {
      const provider2 = await this.getProvider();
      if (accountsChanged) {
        provider2.removeListener("accountsChanged", accountsChanged);
        accountsChanged = void 0;
      }
      if (chainChanged) {
        provider2.removeListener("chainChanged", chainChanged);
        chainChanged = void 0;
      }
      if (disconnect2) {
        provider2.removeListener("disconnect", disconnect2);
        disconnect2 = void 0;
      }
      if (!connect2) {
        connect2 = this.onConnect.bind(this);
        provider2.on("connect", connect2);
      }
      await sdk.terminate();
    },
    async getAccounts() {
      const provider2 = await this.getProvider();
      const accounts = await provider2.request({
        method: "eth_accounts"
      });
      return accounts.map((x2) => getAddress(x2));
    },
    async getChainId() {
      const provider2 = await this.getProvider();
      const chainId = provider2.getChainId() || await (provider2 == null ? void 0 : provider2.request({ method: "eth_chainId" }));
      return Number(chainId);
    },
    async getProvider() {
      async function initProvider() {
        const MetaMaskSDK = await (async () => {
          const { default: SDK } = await import("./metamask-sdk-MHGSP7HW.js");
          if (typeof SDK !== "function" && typeof SDK.default === "function")
            return SDK.default;
          return SDK;
        })();
        sdk = new MetaMaskSDK({
          _source: "wagmi",
          // Workaround cast since MetaMask SDK does not support `'exactOptionalPropertyTypes'`
          ...parameters,
          readonlyRPCMap: Object.fromEntries(config.chains.map((chain) => {
            const [url] = extractRpcUrls({
              chain,
              transports: config.transports
            });
            return [chain.id, url];
          })),
          dappMetadata: parameters.dappMetadata ?? { name: "wagmi" },
          useDeeplink: parameters.useDeeplink ?? true
        });
        await sdk.init();
        return sdk.getProvider();
      }
      if (!provider) {
        if (!providerPromise)
          providerPromise = initProvider();
        provider = await providerPromise;
      }
      return provider;
    },
    async isAuthorized() {
      try {
        const timeout = 200;
        const accounts = await withRetry(() => withTimeout(() => this.getAccounts(), { timeout }), {
          delay: timeout + 1,
          retryCount: 3
        });
        return !!accounts.length;
      } catch {
        return false;
      }
    },
    async switchChain({ addEthereumChainParameter, chainId }) {
      var _a2, _b, _c, _d;
      const provider2 = await this.getProvider();
      const chain = config.chains.find((x2) => x2.id === chainId);
      if (!chain)
        throw new SwitchChainError(new ChainNotConfiguredError());
      try {
        await Promise.all([
          provider2.request({
            method: "wallet_switchEthereumChain",
            params: [{ chainId: numberToHex(chainId) }]
          }).then(async () => {
            const currentChainId = await this.getChainId();
            if (currentChainId === chainId)
              config.emitter.emit("change", { chainId });
          }),
          new Promise((resolve) => {
            const listener = (data) => {
              if ("chainId" in data && data.chainId === chainId) {
                config.emitter.off("change", listener);
                resolve();
              }
            };
            config.emitter.on("change", listener);
          })
        ]);
        return chain;
      } catch (err) {
        const error = err;
        if (error.code === 4902 || // Unwrapping for MetaMask Mobile
        // https://github.com/MetaMask/metamask-mobile/issues/2944#issuecomment-976988719
        ((_b = (_a2 = error == null ? void 0 : error.data) == null ? void 0 : _a2.originalError) == null ? void 0 : _b.code) === 4902) {
          try {
            const { default: blockExplorer, ...blockExplorers } = chain.blockExplorers ?? {};
            let blockExplorerUrls;
            if (addEthereumChainParameter == null ? void 0 : addEthereumChainParameter.blockExplorerUrls)
              blockExplorerUrls = addEthereumChainParameter.blockExplorerUrls;
            else if (blockExplorer)
              blockExplorerUrls = [
                blockExplorer.url,
                ...Object.values(blockExplorers).map((x2) => x2.url)
              ];
            let rpcUrls;
            if ((_c = addEthereumChainParameter == null ? void 0 : addEthereumChainParameter.rpcUrls) == null ? void 0 : _c.length)
              rpcUrls = addEthereumChainParameter.rpcUrls;
            else
              rpcUrls = [((_d = chain.rpcUrls.default) == null ? void 0 : _d.http[0]) ?? ""];
            const addEthereumChain = {
              blockExplorerUrls,
              chainId: numberToHex(chainId),
              chainName: (addEthereumChainParameter == null ? void 0 : addEthereumChainParameter.chainName) ?? chain.name,
              iconUrls: addEthereumChainParameter == null ? void 0 : addEthereumChainParameter.iconUrls,
              nativeCurrency: (addEthereumChainParameter == null ? void 0 : addEthereumChainParameter.nativeCurrency) ?? chain.nativeCurrency,
              rpcUrls
            };
            await provider2.request({
              method: "wallet_addEthereumChain",
              params: [addEthereumChain]
            });
            const currentChainId = hexToNumber(
              // Call `'eth_chainId'` directly to guard against `this.state.chainId` (via `provider.getChainId`) being stale.
              await provider2.request({ method: "eth_chainId" })
            );
            if (currentChainId !== chainId)
              throw new UserRejectedRequestError(new Error("User rejected switch after adding network."));
            return chain;
          } catch (error2) {
            throw new UserRejectedRequestError(error2);
          }
        }
        if (error.code === UserRejectedRequestError.code)
          throw new UserRejectedRequestError(error);
        throw new SwitchChainError(error);
      }
    },
    async onAccountsChanged(accounts) {
      if (accounts.length === 0)
        this.onDisconnect();
      else if (config.emitter.listenerCount("connect")) {
        const chainId = (await this.getChainId()).toString();
        this.onConnect({ chainId });
      } else
        config.emitter.emit("change", {
          accounts: accounts.map((x2) => getAddress(x2))
        });
    },
    onChainChanged(chain) {
      const chainId = Number(chain);
      config.emitter.emit("change", { chainId });
    },
    async onConnect(connectInfo) {
      const accounts = await this.getAccounts();
      if (accounts.length === 0)
        return;
      const chainId = Number(connectInfo.chainId);
      config.emitter.emit("connect", { accounts, chainId });
      const provider2 = await this.getProvider();
      if (connect2) {
        provider2.removeListener("connect", connect2);
        connect2 = void 0;
      }
      if (!accountsChanged) {
        accountsChanged = this.onAccountsChanged.bind(this);
        provider2.on("accountsChanged", accountsChanged);
      }
      if (!chainChanged) {
        chainChanged = this.onChainChanged.bind(this);
        provider2.on("chainChanged", chainChanged);
      }
      if (!disconnect2) {
        disconnect2 = this.onDisconnect.bind(this);
        provider2.on("disconnect", disconnect2);
      }
    },
    async onDisconnect(error) {
      const provider2 = await this.getProvider();
      if (error && error.code === 1013) {
        if (provider2 && !!(await this.getAccounts()).length)
          return;
      }
      config.emitter.emit("disconnect");
      if (!accountsChanged) {
        accountsChanged = this.onAccountsChanged.bind(this);
        provider2.on("accountsChanged", accountsChanged);
      }
      if (chainChanged) {
        provider2.removeListener("chainChanged", chainChanged);
        chainChanged = void 0;
      }
      if (disconnect2) {
        provider2.removeListener("disconnect", disconnect2);
        disconnect2 = void 0;
      }
      if (!connect2) {
        connect2 = this.onConnect.bind(this);
        provider2.on("connect", connect2);
      }
    },
    onDisplayUri(uri) {
      config.emitter.emit("message", { type: "display_uri", data: uri });
    }
  }));
}

// node_modules/@wagmi/connectors/dist/esm/safe.js
safe.type = "safe";
function safe(parameters = {}) {
  const { shimDisconnect = false } = parameters;
  let provider_;
  let disconnect2;
  return createConnector((config) => ({
    id: "safe",
    name: "Safe",
    type: safe.type,
    async connect() {
      var _a2;
      const provider = await this.getProvider();
      if (!provider)
        throw new ProviderNotFoundError();
      const accounts = await this.getAccounts();
      const chainId = await this.getChainId();
      if (!disconnect2) {
        disconnect2 = this.onDisconnect.bind(this);
        provider.on("disconnect", disconnect2);
      }
      if (shimDisconnect)
        await ((_a2 = config.storage) == null ? void 0 : _a2.removeItem("safe.disconnected"));
      return { accounts, chainId };
    },
    async disconnect() {
      var _a2;
      const provider = await this.getProvider();
      if (!provider)
        throw new ProviderNotFoundError();
      if (disconnect2) {
        provider.removeListener("disconnect", disconnect2);
        disconnect2 = void 0;
      }
      if (shimDisconnect)
        await ((_a2 = config.storage) == null ? void 0 : _a2.setItem("safe.disconnected", true));
    },
    async getAccounts() {
      const provider = await this.getProvider();
      if (!provider)
        throw new ProviderNotFoundError();
      return (await provider.request({ method: "eth_accounts" })).map(getAddress);
    },
    async getProvider() {
      const isIframe = typeof window !== "undefined" && (window == null ? void 0 : window.parent) !== window;
      if (!isIframe)
        return;
      if (!provider_) {
        const { default: SDK } = await import("./esm-DOSU46Y6.js");
        const sdk = new SDK(parameters);
        const safe2 = await withTimeout(() => sdk.safe.getInfo(), {
          timeout: parameters.unstable_getInfoTimeout ?? 10
        });
        if (!safe2)
          throw new Error("Could not load Safe information");
        const { SafeAppProvider } = await import("./dist-34DYEUI4.js");
        provider_ = new SafeAppProvider(safe2, sdk);
      }
      return provider_;
    },
    async getChainId() {
      const provider = await this.getProvider();
      if (!provider)
        throw new ProviderNotFoundError();
      return Number(provider.chainId);
    },
    async isAuthorized() {
      var _a2;
      try {
        const isDisconnected = shimDisconnect && // If shim exists in storage, connector is disconnected
        await ((_a2 = config.storage) == null ? void 0 : _a2.getItem("safe.disconnected"));
        if (isDisconnected)
          return false;
        const accounts = await this.getAccounts();
        return !!accounts.length;
      } catch {
        return false;
      }
    },
    onAccountsChanged() {
    },
    onChainChanged() {
    },
    onDisconnect() {
      config.emitter.emit("disconnect");
    }
  }));
}

// node_modules/@wagmi/connectors/dist/esm/walletConnect.js
walletConnect.type = "walletConnect";
function walletConnect(parameters) {
  const isNewChainsStale = parameters.isNewChainsStale ?? true;
  let provider_;
  let providerPromise;
  const NAMESPACE = "eip155";
  let accountsChanged;
  let chainChanged;
  let connect2;
  let displayUri;
  let sessionDelete;
  let disconnect2;
  return createConnector((config) => ({
    id: "walletConnect",
    name: "WalletConnect",
    type: walletConnect.type,
    async setup() {
      const provider = await this.getProvider().catch(() => null);
      if (!provider)
        return;
      if (!connect2) {
        connect2 = this.onConnect.bind(this);
        provider.on("connect", connect2);
      }
      if (!sessionDelete) {
        sessionDelete = this.onSessionDelete.bind(this);
        provider.on("session_delete", sessionDelete);
      }
    },
    async connect({ chainId, ...rest } = {}) {
      var _a2, _b;
      try {
        const provider = await this.getProvider();
        if (!provider)
          throw new ProviderNotFoundError();
        if (!displayUri) {
          displayUri = this.onDisplayUri;
          provider.on("display_uri", displayUri);
        }
        let targetChainId = chainId;
        if (!targetChainId) {
          const state = await ((_a2 = config.storage) == null ? void 0 : _a2.getItem("state")) ?? {};
          const isChainSupported = config.chains.some((x2) => x2.id === state.chainId);
          if (isChainSupported)
            targetChainId = state.chainId;
          else
            targetChainId = (_b = config.chains[0]) == null ? void 0 : _b.id;
        }
        if (!targetChainId)
          throw new Error("No chains found on connector.");
        const isChainsStale = await this.isChainsStale();
        if (provider.session && isChainsStale)
          await provider.disconnect();
        if (!provider.session || isChainsStale) {
          const optionalChains = config.chains.filter((chain) => chain.id !== targetChainId).map((optionalChain) => optionalChain.id);
          await provider.connect({
            optionalChains: [targetChainId, ...optionalChains],
            ..."pairingTopic" in rest ? { pairingTopic: rest.pairingTopic } : {}
          });
          this.setRequestedChainsIds(config.chains.map((x2) => x2.id));
        }
        const accounts = (await provider.enable()).map((x2) => getAddress(x2));
        const currentChainId = await this.getChainId();
        if (displayUri) {
          provider.removeListener("display_uri", displayUri);
          displayUri = void 0;
        }
        if (connect2) {
          provider.removeListener("connect", connect2);
          connect2 = void 0;
        }
        if (!accountsChanged) {
          accountsChanged = this.onAccountsChanged.bind(this);
          provider.on("accountsChanged", accountsChanged);
        }
        if (!chainChanged) {
          chainChanged = this.onChainChanged.bind(this);
          provider.on("chainChanged", chainChanged);
        }
        if (!disconnect2) {
          disconnect2 = this.onDisconnect.bind(this);
          provider.on("disconnect", disconnect2);
        }
        if (!sessionDelete) {
          sessionDelete = this.onSessionDelete.bind(this);
          provider.on("session_delete", sessionDelete);
        }
        return { accounts, chainId: currentChainId };
      } catch (error) {
        if (/(user rejected|connection request reset)/i.test(error == null ? void 0 : error.message)) {
          throw new UserRejectedRequestError(error);
        }
        throw error;
      }
    },
    async disconnect() {
      const provider = await this.getProvider();
      try {
        await (provider == null ? void 0 : provider.disconnect());
      } catch (error) {
        if (!/No matching key/i.test(error.message))
          throw error;
      } finally {
        if (chainChanged) {
          provider == null ? void 0 : provider.removeListener("chainChanged", chainChanged);
          chainChanged = void 0;
        }
        if (disconnect2) {
          provider == null ? void 0 : provider.removeListener("disconnect", disconnect2);
          disconnect2 = void 0;
        }
        if (!connect2) {
          connect2 = this.onConnect.bind(this);
          provider == null ? void 0 : provider.on("connect", connect2);
        }
        if (accountsChanged) {
          provider == null ? void 0 : provider.removeListener("accountsChanged", accountsChanged);
          accountsChanged = void 0;
        }
        if (sessionDelete) {
          provider == null ? void 0 : provider.removeListener("session_delete", sessionDelete);
          sessionDelete = void 0;
        }
        this.setRequestedChainsIds([]);
      }
    },
    async getAccounts() {
      const provider = await this.getProvider();
      return provider.accounts.map((x2) => getAddress(x2));
    },
    async getProvider({ chainId } = {}) {
      var _a2;
      async function initProvider() {
        const optionalChains = config.chains.map((x2) => x2.id);
        if (!optionalChains.length)
          return;
        const { EthereumProvider } = await import("./index.es-KVHEFZHY.js");
        return await EthereumProvider.init({
          ...parameters,
          disableProviderPing: true,
          optionalChains,
          projectId: parameters.projectId,
          rpcMap: Object.fromEntries(config.chains.map((chain) => {
            const [url] = extractRpcUrls({
              chain,
              transports: config.transports
            });
            return [chain.id, url];
          })),
          showQrModal: parameters.showQrModal ?? true
        });
      }
      if (!provider_) {
        if (!providerPromise)
          providerPromise = initProvider();
        provider_ = await providerPromise;
        provider_ == null ? void 0 : provider_.events.setMaxListeners(Number.POSITIVE_INFINITY);
      }
      if (chainId)
        await ((_a2 = this.switchChain) == null ? void 0 : _a2.call(this, { chainId }));
      return provider_;
    },
    async getChainId() {
      const provider = await this.getProvider();
      return provider.chainId;
    },
    async isAuthorized() {
      try {
        const [accounts, provider] = await Promise.all([
          this.getAccounts(),
          this.getProvider()
        ]);
        if (!accounts.length)
          return false;
        const isChainsStale = await this.isChainsStale();
        if (isChainsStale && provider.session) {
          await provider.disconnect().catch(() => {
          });
          return false;
        }
        return true;
      } catch {
        return false;
      }
    },
    async switchChain({ addEthereumChainParameter, chainId }) {
      var _a2, _b, _c;
      const provider = await this.getProvider();
      if (!provider)
        throw new ProviderNotFoundError();
      const chain = config.chains.find((x2) => x2.id === chainId);
      if (!chain)
        throw new SwitchChainError(new ChainNotConfiguredError());
      try {
        await Promise.all([
          new Promise((resolve) => {
            const listener = ({ chainId: currentChainId }) => {
              if (currentChainId === chainId) {
                config.emitter.off("change", listener);
                resolve();
              }
            };
            config.emitter.on("change", listener);
          }),
          provider.request({
            method: "wallet_switchEthereumChain",
            params: [{ chainId: numberToHex(chainId) }]
          })
        ]);
        const requestedChains = await this.getRequestedChainsIds();
        this.setRequestedChainsIds([...requestedChains, chainId]);
        return chain;
      } catch (err) {
        const error = err;
        if (/(user rejected)/i.test(error.message))
          throw new UserRejectedRequestError(error);
        try {
          let blockExplorerUrls;
          if (addEthereumChainParameter == null ? void 0 : addEthereumChainParameter.blockExplorerUrls)
            blockExplorerUrls = addEthereumChainParameter.blockExplorerUrls;
          else
            blockExplorerUrls = ((_a2 = chain.blockExplorers) == null ? void 0 : _a2.default.url) ? [(_b = chain.blockExplorers) == null ? void 0 : _b.default.url] : [];
          let rpcUrls;
          if ((_c = addEthereumChainParameter == null ? void 0 : addEthereumChainParameter.rpcUrls) == null ? void 0 : _c.length)
            rpcUrls = addEthereumChainParameter.rpcUrls;
          else
            rpcUrls = [...chain.rpcUrls.default.http];
          const addEthereumChain = {
            blockExplorerUrls,
            chainId: numberToHex(chainId),
            chainName: (addEthereumChainParameter == null ? void 0 : addEthereumChainParameter.chainName) ?? chain.name,
            iconUrls: addEthereumChainParameter == null ? void 0 : addEthereumChainParameter.iconUrls,
            nativeCurrency: (addEthereumChainParameter == null ? void 0 : addEthereumChainParameter.nativeCurrency) ?? chain.nativeCurrency,
            rpcUrls
          };
          await provider.request({
            method: "wallet_addEthereumChain",
            params: [addEthereumChain]
          });
          const requestedChains = await this.getRequestedChainsIds();
          this.setRequestedChainsIds([...requestedChains, chainId]);
          return chain;
        } catch (error2) {
          throw new UserRejectedRequestError(error2);
        }
      }
    },
    onAccountsChanged(accounts) {
      if (accounts.length === 0)
        this.onDisconnect();
      else
        config.emitter.emit("change", {
          accounts: accounts.map((x2) => getAddress(x2))
        });
    },
    onChainChanged(chain) {
      const chainId = Number(chain);
      config.emitter.emit("change", { chainId });
    },
    async onConnect(connectInfo) {
      const chainId = Number(connectInfo.chainId);
      const accounts = await this.getAccounts();
      config.emitter.emit("connect", { accounts, chainId });
    },
    async onDisconnect(_error) {
      this.setRequestedChainsIds([]);
      config.emitter.emit("disconnect");
      const provider = await this.getProvider();
      if (accountsChanged) {
        provider.removeListener("accountsChanged", accountsChanged);
        accountsChanged = void 0;
      }
      if (chainChanged) {
        provider.removeListener("chainChanged", chainChanged);
        chainChanged = void 0;
      }
      if (disconnect2) {
        provider.removeListener("disconnect", disconnect2);
        disconnect2 = void 0;
      }
      if (sessionDelete) {
        provider.removeListener("session_delete", sessionDelete);
        sessionDelete = void 0;
      }
      if (!connect2) {
        connect2 = this.onConnect.bind(this);
        provider.on("connect", connect2);
      }
    },
    onDisplayUri(uri) {
      config.emitter.emit("message", { type: "display_uri", data: uri });
    },
    onSessionDelete() {
      this.onDisconnect();
    },
    getNamespaceChainsIds() {
      var _a2, _b, _c;
      if (!provider_)
        return [];
      const chainIds = (_c = (_b = (_a2 = provider_.session) == null ? void 0 : _a2.namespaces[NAMESPACE]) == null ? void 0 : _b.accounts) == null ? void 0 : _c.map((account) => Number.parseInt(account.split(":")[1] || ""));
      return chainIds ?? [];
    },
    async getRequestedChainsIds() {
      var _a2;
      return await ((_a2 = config.storage) == null ? void 0 : _a2.getItem(this.requestedChainsStorageKey)) ?? [];
    },
    /**
     * Checks if the target chains match the chains that were
     * initially requested by the connector for the WalletConnect session.
     * If there is a mismatch, this means that the chains on the connector
     * are considered stale, and need to be revalidated at a later point (via
     * connection).
     *
     * There may be a scenario where a dapp adds a chain to the
     * connector later on, however, this chain will not have been approved or rejected
     * by the wallet. In this case, the chain is considered stale.
     */
    async isChainsStale() {
      if (!isNewChainsStale)
        return false;
      const connectorChains = config.chains.map((x2) => x2.id);
      const namespaceChains = this.getNamespaceChainsIds();
      if (namespaceChains.length && !namespaceChains.some((id) => connectorChains.includes(id)))
        return false;
      const requestedChains = await this.getRequestedChainsIds();
      return !connectorChains.every((id) => requestedChains.includes(id));
    },
    async setRequestedChainsIds(chains) {
      var _a2;
      await ((_a2 = config.storage) == null ? void 0 : _a2.setItem(this.requestedChainsStorageKey, chains));
    },
    get requestedChainsStorageKey() {
      return `${this.id}.requestedChains`;
    }
  }));
}

// node_modules/@web3modal/base/dist/esm/adapters/evm/wagmi/connectors/AuthConnector.js
function authConnector(parameters) {
  function parseChainId(chainId) {
    return NetworkUtil.parseEvmChainId(chainId) || 1;
  }
  return createConnector((config) => ({
    id: ConstantsUtil2.AUTH_CONNECTOR_ID,
    name: "Web3Modal Auth",
    type: "w3mAuth",
    socials: parameters.socials,
    email: parameters.email,
    showWallets: parameters.showWallets,
    walletFeatures: parameters.walletFeatures,
    chain: ConstantsUtil.CHAIN.EVM,
    async connect(options = {}) {
      const provider = await this.getProvider();
      const { address, chainId } = await provider.connect({
        chainId: options.chainId
      });
      await provider.getSmartAccountEnabledNetworks();
      const parsedChainId = parseChainId(chainId);
      return {
        accounts: [address],
        account: address,
        chainId: parsedChainId,
        chain: {
          id: parsedChainId,
          unsuported: false
        }
      };
    },
    async disconnect() {
      const provider = await this.getProvider();
      await provider.disconnect();
    },
    async getAccounts() {
      const provider = await this.getProvider();
      const { address } = await provider.connect();
      config.emitter.emit("change", { accounts: [address] });
      return [address];
    },
    async getProvider() {
      if (!this.provider) {
        this.provider = new W3mFrameProvider(parameters.options.projectId);
      }
      return Promise.resolve(this.provider);
    },
    async getChainId() {
      const provider = await this.getProvider();
      const { chainId } = await provider.getChainId();
      return parseChainId(chainId);
    },
    async isAuthorized() {
      const provider = await this.getProvider();
      const { isConnected } = await provider.isConnected();
      return isConnected;
    },
    async switchChain({ chainId }) {
      try {
        const chain = config.chains.find((c) => c.id === chainId);
        if (!chain) {
          throw new SwitchChainError(new Error("chain not found on connector."));
        }
        const provider = await this.getProvider();
        const response = await provider.connect({ chainId });
        config.emitter.emit("change", {
          chainId: Number(chainId),
          accounts: [response.address]
        });
        return chain;
      } catch (error) {
        if (error instanceof Error) {
          throw new SwitchChainError(error);
        }
        throw error;
      }
    },
    onAccountsChanged(accounts) {
      if (accounts.length === 0) {
        this.onDisconnect();
      } else {
        config.emitter.emit("change", { accounts: accounts.map(getAddress) });
      }
    },
    onChainChanged(chain) {
      const chainId = Number(chain);
      config.emitter.emit("change", { chainId });
    },
    async onConnect(connectInfo) {
      const chainId = Number(connectInfo.chainId);
      const accounts = await this.getAccounts();
      config.emitter.emit("connect", { accounts, chainId });
    },
    async onDisconnect(_error) {
      const provider = await this.getProvider();
      await provider.disconnect();
    }
  }));
}

// node_modules/@web3modal/base/dist/esm/adapters/evm/wagmi/utils/defaultConfig.js
function defaultConfig({ projectId, chains, metadata, enableCoinbase, enableInjected, auth = {}, enableWalletConnect, enableEIP6963, ...wagmiConfig }) {
  var _a2;
  const connectors = (wagmiConfig == null ? void 0 : wagmiConfig.connectors) ?? [];
  const transportsArr = chains.map((chain) => [chain.id, getTransport({ chain, projectId })]);
  const transports = Object.fromEntries(transportsArr);
  const defaultAuth = {
    email: true,
    showWallets: true,
    walletFeatures: true,
    socials: [
      "google",
      "x",
      "discord",
      "farcaster",
      "github",
      "apple",
      "facebook"
    ]
  };
  if (enableWalletConnect !== false) {
    connectors.push(walletConnect({ projectId, metadata, showQrModal: false }));
  }
  if (enableInjected !== false) {
    connectors.push(injected({ shimDisconnect: true }));
  }
  if (enableCoinbase !== false) {
    connectors.push(coinbaseWallet({
      version: "4",
      appName: (metadata == null ? void 0 : metadata.name) ?? "Unknown",
      appLogoUrl: (metadata == null ? void 0 : metadata.icons[0]) ?? "Unknown",
      preference: wagmiConfig.coinbasePreference || "all"
    }));
  }
  const mergedAuth = {
    ...defaultAuth,
    ...auth
  };
  if (mergedAuth.email || ((_a2 = mergedAuth.socials) == null ? void 0 : _a2.length)) {
    connectors.push(authConnector({
      chains: [...chains],
      options: { projectId },
      socials: mergedAuth.socials,
      email: mergedAuth.email,
      showWallets: mergedAuth.showWallets,
      walletFeatures: mergedAuth.walletFeatures
    }));
  }
  return createConfig({
    chains,
    multiInjectedProviderDiscovery: enableEIP6963 !== false,
    transports,
    ...wagmiConfig,
    connectors
  });
}

export {
  ConstantsUtil2 as ConstantsUtil,
  SocialProviderEnum,
  EVMWagmiClient,
  defaultConfig
};
/*! Bundled license information:

@walletconnect/utils/dist/index.es.js:
  (**
  * [js-sha3]{@link https://github.com/emn178/js-sha3}
  *
  * @version 0.8.0
  * @author Chen, Yi-Cyuan [emn178@gmail.com]
  * @copyright Chen, Yi-Cyuan 2015-2018
  * @license MIT
  *)
*/
//# sourceMappingURL=chunk-DNCZC3BO.js.map
